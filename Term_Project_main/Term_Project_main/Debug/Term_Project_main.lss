
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000114a  000011de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000114a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800132  00800132  00001210  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001210  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000126c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bbd  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dff  00000000  00000000  00003025  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e9d  00000000  00000000  00003e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000041c  00000000  00000000  00004cc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000813  00000000  00000000  000050e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ad0  00000000  00000000  000058f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  000063c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__ctors_end>
       4:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__vector_1>
       8:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
       c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      10:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      14:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      18:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      1c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      20:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      24:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      28:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      2c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      30:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      34:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      38:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      3c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      40:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      44:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      48:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      4c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      50:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      54:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      58:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      5c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      60:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      64:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      68:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>
      6c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	d7 00       	.word	0x00d7	; ????
      72:	cf 00       	.word	0x00cf	; ????
      74:	c6 00       	.word	0x00c6	; ????
      76:	bb 00       	.word	0x00bb	; ????
      78:	ae 00       	.word	0x00ae	; ????
      7a:	a1 00       	.word	0x00a1	; ????
      7c:	94 00       	.word	0x0094	; ????
      7e:	87 00       	.word	0x0087	; ????
      80:	82 00       	.word	0x0082	; ????

00000082 <text_quit>:
      82:	51 75 69 74 00                                      Quit.

00000087 <text_placeholder4>:
      87:	70 6c 61 63 65 68 6f 6c 64 65 72 34 00              placeholder4.

00000094 <text_placeholder3>:
      94:	70 6c 61 63 65 68 6f 6c 64 65 72 33 00              placeholder3.

000000a1 <text_placeholder2>:
      a1:	70 6c 61 63 65 68 6f 6c 64 65 72 32 00              placeholder2.

000000ae <text_placeholder1>:
      ae:	70 6c 61 63 65 68 6f 6c 64 65 72 31 00              placeholder1.

000000bb <text_highscores>:
      bb:	48 69 67 68 73 63 6f 72 65 73 00                    Highscores.

000000c6 <text_settings>:
      c6:	53 65 74 74 69 6e 67 73 00                          Settings.

000000cf <text_play>:
      cf:	50 6c 61 79 20 3a 29 00                             Play :).

000000d7 <text_main_menu>:
      d7:	4d 61 69 6e 20 6d 65 6e 75 00                       Main menu.

000000e1 <font8>:
	...
      e9:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
      f9:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     109:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     119:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     129:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     139:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     149:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     159:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     169:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     179:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     189:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     199:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     1a9:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     1b9:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     1c9:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     1d9:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     1e9:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     1f9:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     209:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     219:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     229:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     239:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     249:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     259:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     269:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     279:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     289:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     299:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     2a9:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     2b9:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     2c9:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     2d9:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     2e9:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     2f9:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     309:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     319:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     329:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     339:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     349:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     359:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     369:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     379:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     389:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     399:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     3a9:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     3b9:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     3c9:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000003da <__ctors_end>:
     3da:	11 24       	eor	r1, r1
     3dc:	1f be       	out	0x3f, r1	; 63
     3de:	cf ef       	ldi	r28, 0xFF	; 255
     3e0:	d4 e0       	ldi	r29, 0x04	; 4
     3e2:	de bf       	out	0x3e, r29	; 62
     3e4:	cd bf       	out	0x3d, r28	; 61

000003e6 <__do_copy_data>:
     3e6:	11 e0       	ldi	r17, 0x01	; 1
     3e8:	a0 e0       	ldi	r26, 0x00	; 0
     3ea:	b1 e0       	ldi	r27, 0x01	; 1
     3ec:	ea e4       	ldi	r30, 0x4A	; 74
     3ee:	f1 e1       	ldi	r31, 0x11	; 17
     3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <__do_copy_data+0x10>
     3f2:	05 90       	lpm	r0, Z+
     3f4:	0d 92       	st	X+, r0
     3f6:	a2 33       	cpi	r26, 0x32	; 50
     3f8:	b1 07       	cpc	r27, r17
     3fa:	d9 f7       	brne	.-10     	; 0x3f2 <__do_copy_data+0xc>

000003fc <__do_clear_bss>:
     3fc:	21 e0       	ldi	r18, 0x01	; 1
     3fe:	a2 e3       	ldi	r26, 0x32	; 50
     400:	b1 e0       	ldi	r27, 0x01	; 1
     402:	01 c0       	rjmp	.+2      	; 0x406 <.do_clear_bss_start>

00000404 <.do_clear_bss_loop>:
     404:	1d 92       	st	X+, r1

00000406 <.do_clear_bss_start>:
     406:	af 34       	cpi	r26, 0x4F	; 79
     408:	b2 07       	cpc	r27, r18
     40a:	e1 f7       	brne	.-8      	; 0x404 <.do_clear_bss_loop>
     40c:	0e 94 8b 02 	call	0x516	; 0x516 <main>
     410:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <_exit>

00000414 <__bad_interrupt>:
     414:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000418 <ADC_Init>:
			return LEFT;
		}
	}else{
		return NEUTRAL;
	}
}
     418:	82 e8       	ldi	r24, 0x82	; 130
     41a:	8f bd       	out	0x2f, r24	; 47
     41c:	89 e1       	ldi	r24, 0x19	; 25
     41e:	8e bd       	out	0x2e, r24	; 46
     420:	85 e0       	ldi	r24, 0x05	; 5
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	95 bd       	out	0x25, r25	; 37
     426:	84 bd       	out	0x24, r24	; 36
     428:	82 e0       	ldi	r24, 0x02	; 2
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	9b bd       	out	0x2b, r25	; 43
     42e:	8a bd       	out	0x2a, r24	; 42
     430:	81 b3       	in	r24, 0x11	; 17
     432:	80 62       	ori	r24, 0x20	; 32
     434:	81 bb       	out	0x11, r24	; 17
     436:	08 95       	ret

00000438 <ADC_read>:
     438:	0f 93       	push	r16
     43a:	1f 93       	push	r17
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	d8 2f       	mov	r29, r24
     442:	10 92 01 14 	sts	0x1401, r1	; 0x801401 <__bss_end+0x12b2>
     446:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__bss_end+0x12b1>
     44a:	78 94       	sei
     44c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     450:	88 23       	and	r24, r24
     452:	e1 f3       	breq	.-8      	; 0x44c <ADC_read+0x14>
     454:	f8 94       	cli
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	94 e0       	ldi	r25, 0x04	; 4
     45a:	0e 94 16 04 	call	0x82c	; 0x82c <XMEM_read>
     45e:	18 2f       	mov	r17, r24
     460:	80 e0       	ldi	r24, 0x00	; 0
     462:	94 e0       	ldi	r25, 0x04	; 4
     464:	0e 94 16 04 	call	0x82c	; 0x82c <XMEM_read>
     468:	c8 2f       	mov	r28, r24
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	94 e0       	ldi	r25, 0x04	; 4
     46e:	0e 94 16 04 	call	0x82c	; 0x82c <XMEM_read>
     472:	08 2f       	mov	r16, r24
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	94 e0       	ldi	r25, 0x04	; 4
     478:	0e 94 16 04 	call	0x82c	; 0x82c <XMEM_read>
     47c:	d1 30       	cpi	r29, 0x01	; 1
     47e:	59 f0       	breq	.+22     	; 0x496 <ADC_read+0x5e>
     480:	40 f0       	brcs	.+16     	; 0x492 <ADC_read+0x5a>
     482:	d2 30       	cpi	r29, 0x02	; 2
     484:	19 f0       	breq	.+6      	; 0x48c <ADC_read+0x54>
     486:	d3 30       	cpi	r29, 0x03	; 3
     488:	39 f0       	breq	.+14     	; 0x498 <ADC_read+0x60>
     48a:	02 c0       	rjmp	.+4      	; 0x490 <ADC_read+0x58>
     48c:	80 2f       	mov	r24, r16
     48e:	04 c0       	rjmp	.+8      	; 0x498 <ADC_read+0x60>
     490:	03 c0       	rjmp	.+6      	; 0x498 <ADC_read+0x60>
     492:	81 2f       	mov	r24, r17
     494:	01 c0       	rjmp	.+2      	; 0x498 <ADC_read+0x60>
     496:	8c 2f       	mov	r24, r28
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	1f 91       	pop	r17
     49e:	0f 91       	pop	r16
     4a0:	08 95       	ret

000004a2 <ADC_calibrate>:
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	0e 94 1c 02 	call	0x438	; 0x438 <ADC_read>
     4ac:	c3 e3       	ldi	r28, 0x33	; 51
     4ae:	d1 e0       	ldi	r29, 0x01	; 1
     4b0:	88 83       	st	Y, r24
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	0e 94 1c 02 	call	0x438	; 0x438 <ADC_read>
     4b8:	89 83       	std	Y+1, r24	; 0x01
     4ba:	98 81       	ld	r25, Y
     4bc:	1f 92       	push	r1
     4be:	8f 93       	push	r24
     4c0:	1f 92       	push	r1
     4c2:	9f 93       	push	r25
     4c4:	86 e0       	ldi	r24, 0x06	; 6
     4c6:	91 e0       	ldi	r25, 0x01	; 1
     4c8:	9f 93       	push	r25
     4ca:	8f 93       	push	r24
     4cc:	0e 94 81 04 	call	0x902	; 0x902 <printf>
     4d0:	0f 90       	pop	r0
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	08 95       	ret

000004e2 <Int_INIT>:
     4e2:	8b b7       	in	r24, 0x3b	; 59
     4e4:	80 64       	ori	r24, 0x40	; 64
     4e6:	8b bf       	out	0x3b, r24	; 59
     4e8:	85 b7       	in	r24, 0x35	; 53
     4ea:	81 60       	ori	r24, 0x01	; 1
     4ec:	85 bf       	out	0x35, r24	; 53
     4ee:	85 b7       	in	r24, 0x35	; 53
     4f0:	82 60       	ori	r24, 0x02	; 2
     4f2:	85 bf       	out	0x35, r24	; 53
     4f4:	78 94       	sei
     4f6:	08 95       	ret

000004f8 <__vector_1>:

ISR(INT0_vect){
     4f8:	1f 92       	push	r1
     4fa:	0f 92       	push	r0
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	0f 92       	push	r0
     500:	11 24       	eor	r1, r1
     502:	8f 93       	push	r24
    BUSY_flag = 1;
     504:	81 e0       	ldi	r24, 0x01	; 1
     506:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
}
     50a:	8f 91       	pop	r24
     50c:	0f 90       	pop	r0
     50e:	0f be       	out	0x3f, r0	; 63
     510:	0f 90       	pop	r0
     512:	1f 90       	pop	r1
     514:	18 95       	reti

00000516 <main>:
#include "SPI/SPIdrv.h"
#include "MCP2515/MCP2515drv.h"

int main(void)
{
	USART_Init(MYUBRR);
     516:	8f e1       	ldi	r24, 0x1F	; 31
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 22 04 	call	0x844	; 0x844 <USART_Init>
	XMEM_init();
     51e:	0e 94 0f 04 	call	0x81e	; 0x81e <XMEM_init>
	Int_INIT();
     522:	0e 94 71 02 	call	0x4e2	; 0x4e2 <Int_INIT>
	ADC_Init();
     526:	0e 94 0c 02 	call	0x418	; 0x418 <ADC_Init>
	oled_init();
     52a:	0e 94 12 03 	call	0x624	; 0x624 <oled_init>
	printf("her\n\r");
     52e:	8c e2       	ldi	r24, 0x2C	; 44
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	9f 93       	push	r25
     534:	8f 93       	push	r24
     536:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	spi_init_master();
     53a:	0e 94 02 04 	call	0x804	; 0x804 <spi_init_master>
	
	printf("men ikke her\n\r");
     53e:	83 e2       	ldi	r24, 0x23	; 35
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	9f 93       	push	r25
     544:	8f 93       	push	r24
     546:	0e 94 81 04 	call	0x902	; 0x902 <printf>
	//TESTE OLED;
	//oled_reset();
	//oled_home();
	//oled_print_char('t');

	ADC_calibrate();
     54a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <ADC_calibrate>
     54e:	0f 90       	pop	r0
     550:	0f 90       	pop	r0
     552:	0f 90       	pop	r0
     554:	0f 90       	pop	r0
	//oled_print("kisen,1234567891");
	adc_pos pos;
	adc_dir dir;
    while (1) 
    {	
		spi_write_char('a');
     556:	81 e6       	ldi	r24, 0x61	; 97
     558:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <spi_write_char>

		//printf("Positions X: %d%%  Y: %d%%\n\r", pos.x, pos.y);
		//printf("Direction: %d\n\r", dir);
		//_delay_ms(1000);
		//spi_read_char();
		for (int i = 0; i<=9;i++){
     55c:	c0 e0       	ldi	r28, 0x00	; 0
     55e:	d0 e0       	ldi	r29, 0x00	; 0
     560:	0f c0       	rjmp	.+30     	; 0x580 <main+0x6a>
			menu_print_screen(i,0);
     562:	60 e0       	ldi	r22, 0x00	; 0
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	ce 01       	movw	r24, r28
     568:	0e 94 c4 02 	call	0x588	; 0x588 <menu_print_screen>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     56c:	2f ef       	ldi	r18, 0xFF	; 255
     56e:	8f ef       	ldi	r24, 0xFF	; 255
     570:	9d e1       	ldi	r25, 0x1D	; 29
     572:	21 50       	subi	r18, 0x01	; 1
     574:	80 40       	sbci	r24, 0x00	; 0
     576:	90 40       	sbci	r25, 0x00	; 0
     578:	e1 f7       	brne	.-8      	; 0x572 <main+0x5c>
     57a:	00 c0       	rjmp	.+0      	; 0x57c <main+0x66>
     57c:	00 00       	nop

		//printf("Positions X: %d%%  Y: %d%%\n\r", pos.x, pos.y);
		//printf("Direction: %d\n\r", dir);
		//_delay_ms(1000);
		//spi_read_char();
		for (int i = 0; i<=9;i++){
     57e:	21 96       	adiw	r28, 0x01	; 1
     580:	ca 30       	cpi	r28, 0x0A	; 10
     582:	d1 05       	cpc	r29, r1
     584:	74 f3       	brlt	.-36     	; 0x562 <main+0x4c>
     586:	e7 cf       	rjmp	.-50     	; 0x556 <main+0x40>

00000588 <menu_print_screen>:
uint8_t menu_main_counter = 0;
uint8_t menu_children_counter = 0;
uint8_t number_of_strings = 9;


void menu_print_screen(uint8_t menu_main_counter, uint8_t menu_children_counter){
     588:	0f 93       	push	r16
     58a:	1f 93       	push	r17
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
    uint8_t scroll_number = 0;
    uint8_t string_scroll_number = menu_main_counter;
    oled_reset();
     590:	0e 94 ab 03 	call	0x756	; 0x756 <oled_reset>
    oled_goto_pos(4, 0);
     594:	60 e0       	ldi	r22, 0x00	; 0
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	84 e0       	ldi	r24, 0x04	; 4
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 7e 03 	call	0x6fc	; 0x6fc <oled_goto_pos>
    oled_print_char('>');
     5a0:	8e e3       	ldi	r24, 0x3E	; 62
     5a2:	0e 94 bc 03 	call	0x778	; 0x778 <oled_print_char>
    oled_home();
     5a6:	0e 94 89 03 	call	0x712	; 0x712 <oled_home>
    for (int i = 0; i < 8; i++){
     5aa:	00 e0       	ldi	r16, 0x00	; 0
     5ac:	10 e0       	ldi	r17, 0x00	; 0
     5ae:	2d c0       	rjmp	.+90     	; 0x60a <menu_print_screen+0x82>
        scroll_number = i + 4;
     5b0:	84 e0       	ldi	r24, 0x04	; 4
     5b2:	80 0f       	add	r24, r16
        if(scroll_number > 7){
     5b4:	88 30       	cpi	r24, 0x08	; 8
     5b6:	10 f0       	brcs	.+4      	; 0x5bc <menu_print_screen+0x34>
            scroll_number = scroll_number - 8;
     5b8:	8c ef       	ldi	r24, 0xFC	; 252
     5ba:	80 0f       	add	r24, r16
        }
        
        if(string_scroll_number > 8){
     5bc:	c9 30       	cpi	r28, 0x09	; 9
     5be:	08 f0       	brcs	.+2      	; 0x5c2 <menu_print_screen+0x3a>
            string_scroll_number = string_scroll_number - 9;
     5c0:	c9 50       	subi	r28, 0x09	; 9
        }

        oled_goto_pos(scroll_number, 16);
     5c2:	60 e1       	ldi	r22, 0x10	; 16
     5c4:	70 e0       	ldi	r23, 0x00	; 0
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	0e 94 7e 03 	call	0x6fc	; 0x6fc <oled_goto_pos>
        //Check to see if the counter is higher than number of elements
        strcpy_P(buffer, (char *)pgm_read_word(&(menu_main_strings[string_scroll_number])));
     5cc:	ec 2f       	mov	r30, r28
     5ce:	f0 e0       	ldi	r31, 0x00	; 0
     5d0:	ee 0f       	add	r30, r30
     5d2:	ff 1f       	adc	r31, r31
     5d4:	e0 59       	subi	r30, 0x90	; 144
     5d6:	ff 4f       	sbci	r31, 0xFF	; 255
     5d8:	65 91       	lpm	r22, Z+
     5da:	74 91       	lpm	r23, Z
     5dc:	85 e3       	ldi	r24, 0x35	; 53
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	0e 94 2f 04 	call	0x85e	; 0x85e <strcpy_P>
        oled_print(buffer);
     5e4:	85 e3       	ldi	r24, 0x35	; 53
     5e6:	91 e0       	ldi	r25, 0x01	; 1
     5e8:	0e 94 db 03 	call	0x7b6	; 0x7b6 <oled_print>
		//oled_print(string_scroll_number);
		printf("%d\n\r", string_scroll_number);
     5ec:	1f 92       	push	r1
     5ee:	cf 93       	push	r28
     5f0:	8e e1       	ldi	r24, 0x1E	; 30
     5f2:	91 e0       	ldi	r25, 0x01	; 1
     5f4:	9f 93       	push	r25
     5f6:	8f 93       	push	r24
     5f8:	0e 94 81 04 	call	0x902	; 0x902 <printf>
		string_scroll_number ++;
     5fc:	cf 5f       	subi	r28, 0xFF	; 255
    uint8_t string_scroll_number = menu_main_counter;
    oled_reset();
    oled_goto_pos(4, 0);
    oled_print_char('>');
    oled_home();
    for (int i = 0; i < 8; i++){
     5fe:	0f 5f       	subi	r16, 0xFF	; 255
     600:	1f 4f       	sbci	r17, 0xFF	; 255
     602:	0f 90       	pop	r0
     604:	0f 90       	pop	r0
     606:	0f 90       	pop	r0
     608:	0f 90       	pop	r0
     60a:	08 30       	cpi	r16, 0x08	; 8
     60c:	11 05       	cpc	r17, r1
     60e:	84 f2       	brlt	.-96     	; 0x5b0 <menu_print_screen+0x28>
		//oled_print(string_scroll_number);
		printf("%d\n\r", string_scroll_number);
		string_scroll_number ++;
    }

}
     610:	cf 91       	pop	r28
     612:	1f 91       	pop	r17
     614:	0f 91       	pop	r16
     616:	08 95       	ret

00000618 <oled_write_command>:
    for (int i = 0; i < 128; i++) { //For every column write the data to 0 so that the line is cleared
		oled_write_data(0b11111111);
	}
    oled_goto_line(line); //Go back to the 

}
     618:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xeb1>
     61c:	08 95       	ret

0000061e <oled_write_data>:
     61e:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10b1>
     622:	08 95       	ret

00000624 <oled_init>:
     624:	8e ea       	ldi	r24, 0xAE	; 174
     626:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     62a:	81 ea       	ldi	r24, 0xA1	; 161
     62c:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     630:	8a ed       	ldi	r24, 0xDA	; 218
     632:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     636:	82 e1       	ldi	r24, 0x12	; 18
     638:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     63c:	88 ec       	ldi	r24, 0xC8	; 200
     63e:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     642:	88 ea       	ldi	r24, 0xA8	; 168
     644:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     648:	8f e3       	ldi	r24, 0x3F	; 63
     64a:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     64e:	85 ed       	ldi	r24, 0xD5	; 213
     650:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     654:	80 e8       	ldi	r24, 0x80	; 128
     656:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     65a:	81 e8       	ldi	r24, 0x81	; 129
     65c:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     660:	80 e5       	ldi	r24, 0x50	; 80
     662:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     666:	89 ed       	ldi	r24, 0xD9	; 217
     668:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     66c:	81 e2       	ldi	r24, 0x21	; 33
     66e:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     672:	80 e2       	ldi	r24, 0x20	; 32
     674:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     678:	82 e0       	ldi	r24, 0x02	; 2
     67a:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     67e:	8b ed       	ldi	r24, 0xDB	; 219
     680:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     684:	80 e3       	ldi	r24, 0x30	; 48
     686:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     68a:	8d ea       	ldi	r24, 0xAD	; 173
     68c:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     696:	84 ea       	ldi	r24, 0xA4	; 164
     698:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     69c:	86 ea       	ldi	r24, 0xA6	; 166
     69e:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6a2:	8f ea       	ldi	r24, 0xAF	; 175
     6a4:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6a8:	80 e2       	ldi	r24, 0x20	; 32
     6aa:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6ae:	82 e0       	ldi	r24, 0x02	; 2
     6b0:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6b4:	08 95       	ret

000006b6 <oled_goto_line>:
     6b6:	80 55       	subi	r24, 0x50	; 80
     6b8:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6bc:	08 95       	ret

000006be <oled_goto_column>:
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29
     6c2:	ec 01       	movw	r28, r24
     6c4:	8f 70       	andi	r24, 0x0F	; 15
     6c6:	90 78       	andi	r25, 0x80	; 128
     6c8:	99 23       	and	r25, r25
     6ca:	24 f4       	brge	.+8      	; 0x6d4 <oled_goto_column+0x16>
     6cc:	01 97       	sbiw	r24, 0x01	; 1
     6ce:	80 6f       	ori	r24, 0xF0	; 240
     6d0:	9f 6f       	ori	r25, 0xFF	; 255
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6d8:	ce 01       	movw	r24, r28
     6da:	dd 23       	and	r29, r29
     6dc:	0c f4       	brge	.+2      	; 0x6e0 <oled_goto_column+0x22>
     6de:	0f 96       	adiw	r24, 0x0f	; 15
     6e0:	95 95       	asr	r25
     6e2:	87 95       	ror	r24
     6e4:	95 95       	asr	r25
     6e6:	87 95       	ror	r24
     6e8:	95 95       	asr	r25
     6ea:	87 95       	ror	r24
     6ec:	95 95       	asr	r25
     6ee:	87 95       	ror	r24
     6f0:	80 5f       	subi	r24, 0xF0	; 240
     6f2:	0e 94 0c 03 	call	0x618	; 0x618 <oled_write_command>
     6f6:	df 91       	pop	r29
     6f8:	cf 91       	pop	r28
     6fa:	08 95       	ret

000006fc <oled_goto_pos>:
     6fc:	cf 93       	push	r28
     6fe:	df 93       	push	r29
     700:	eb 01       	movw	r28, r22
     702:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <oled_goto_line>
     706:	ce 01       	movw	r24, r28
     708:	0e 94 5f 03 	call	0x6be	; 0x6be <oled_goto_column>
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	08 95       	ret

00000712 <oled_home>:
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	70 e0       	ldi	r23, 0x00	; 0
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	0e 94 7e 03 	call	0x6fc	; 0x6fc <oled_goto_pos>
     71e:	08 95       	ret

00000720 <oled_clear_line>:
void oled_clear_line(int line){
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	8c 01       	movw	r16, r24
    oled_goto_pos(line, 0); // Go to the right line and start at the first column
     72a:	60 e0       	ldi	r22, 0x00	; 0
     72c:	70 e0       	ldi	r23, 0x00	; 0
     72e:	0e 94 7e 03 	call	0x6fc	; 0x6fc <oled_goto_pos>
    for (int i = 0; i < 128; i++) { //For every column write the data to 0 so that the line is cleared
     732:	c0 e0       	ldi	r28, 0x00	; 0
     734:	d0 e0       	ldi	r29, 0x00	; 0
     736:	04 c0       	rjmp	.+8      	; 0x740 <oled_clear_line+0x20>
		oled_write_data(0b00000000);
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	0e 94 0f 03 	call	0x61e	; 0x61e <oled_write_data>
    oled_goto_line(line); //Go back to the 

}
void oled_clear_line(int line){
    oled_goto_pos(line, 0); // Go to the right line and start at the first column
    for (int i = 0; i < 128; i++) { //For every column write the data to 0 so that the line is cleared
     73e:	21 96       	adiw	r28, 0x01	; 1
     740:	c0 38       	cpi	r28, 0x80	; 128
     742:	d1 05       	cpc	r29, r1
     744:	cc f3       	brlt	.-14     	; 0x738 <oled_clear_line+0x18>
		oled_write_data(0b00000000);
	}
    oled_goto_line(line); //Go back to the 
     746:	c8 01       	movw	r24, r16
     748:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <oled_goto_line>


}
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	08 95       	ret

00000756 <oled_reset>:
    oled_write_command(0x20);
	oled_write_command(0b10);

}

void oled_reset(){
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
    for (int i = 0; i < 8; i++) { //For every column write the data to 0 so that the line is cleared
     75a:	c0 e0       	ldi	r28, 0x00	; 0
     75c:	d0 e0       	ldi	r29, 0x00	; 0
     75e:	04 c0       	rjmp	.+8      	; 0x768 <oled_reset+0x12>
		oled_clear_line(i);
     760:	ce 01       	movw	r24, r28
     762:	0e 94 90 03 	call	0x720	; 0x720 <oled_clear_line>
	oled_write_command(0b10);

}

void oled_reset(){
    for (int i = 0; i < 8; i++) { //For every column write the data to 0 so that the line is cleared
     766:	21 96       	adiw	r28, 0x01	; 1
     768:	c8 30       	cpi	r28, 0x08	; 8
     76a:	d1 05       	cpc	r29, r1
     76c:	cc f3       	brlt	.-14     	; 0x760 <oled_reset+0xa>
		oled_clear_line(i);
	}
    oled_home();
     76e:	0e 94 89 03 	call	0x712	; 0x712 <oled_home>

}
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	08 95       	ret

00000778 <oled_print_char>:
    oled_goto_line(row);
    oled_goto_column(column);

}

void oled_print_char(char character){
     778:	1f 93       	push	r17
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
    //This is if the page adressing mode
    character = character - 32; //To make it line up with fonts.h since there are no special characters
     77e:	10 ee       	ldi	r17, 0xE0	; 224
     780:	18 0f       	add	r17, r24
        for (int i = 0; i < 8; i++) {
     782:	c0 e0       	ldi	r28, 0x00	; 0
     784:	d0 e0       	ldi	r29, 0x00	; 0
     786:	10 c0       	rjmp	.+32     	; 0x7a8 <oled_print_char+0x30>
        char column = pgm_read_byte(&font8[character][i]);
     788:	e1 2f       	mov	r30, r17
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	ee 0f       	add	r30, r30
     78e:	ff 1f       	adc	r31, r31
     790:	ee 0f       	add	r30, r30
     792:	ff 1f       	adc	r31, r31
     794:	ee 0f       	add	r30, r30
     796:	ff 1f       	adc	r31, r31
     798:	ec 0f       	add	r30, r28
     79a:	fd 1f       	adc	r31, r29
     79c:	ef 51       	subi	r30, 0x1F	; 31
     79e:	ff 4f       	sbci	r31, 0xFF	; 255
     7a0:	84 91       	lpm	r24, Z
        oled_write_data(column);
     7a2:	0e 94 0f 03 	call	0x61e	; 0x61e <oled_write_data>
}

void oled_print_char(char character){
    //This is if the page adressing mode
    character = character - 32; //To make it line up with fonts.h since there are no special characters
        for (int i = 0; i < 8; i++) {
     7a6:	21 96       	adiw	r28, 0x01	; 1
     7a8:	c8 30       	cpi	r28, 0x08	; 8
     7aa:	d1 05       	cpc	r29, r1
     7ac:	6c f3       	brlt	.-38     	; 0x788 <oled_print_char+0x10>
        char column = pgm_read_byte(&font8[character][i]);
        oled_write_data(column);
  }
}
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	08 95       	ret

000007b6 <oled_print>:

void oled_print(const char string[]) {
     7b6:	0f 93       	push	r16
     7b8:	1f 93       	push	r17
     7ba:	cf 93       	push	r28
     7bc:	df 93       	push	r29
     7be:	8c 01       	movw	r16, r24
  for (int i = 0; i < strlen(string); i++) {
     7c0:	c0 e0       	ldi	r28, 0x00	; 0
     7c2:	d0 e0       	ldi	r29, 0x00	; 0
     7c4:	07 c0       	rjmp	.+14     	; 0x7d4 <oled_print+0x1e>
    oled_print_char(string[i]);
     7c6:	f8 01       	movw	r30, r16
     7c8:	ec 0f       	add	r30, r28
     7ca:	fd 1f       	adc	r31, r29
     7cc:	80 81       	ld	r24, Z
     7ce:	0e 94 bc 03 	call	0x778	; 0x778 <oled_print_char>
        oled_write_data(column);
  }
}

void oled_print(const char string[]) {
  for (int i = 0; i < strlen(string); i++) {
     7d2:	21 96       	adiw	r28, 0x01	; 1
     7d4:	f8 01       	movw	r30, r16
     7d6:	01 90       	ld	r0, Z+
     7d8:	00 20       	and	r0, r0
     7da:	e9 f7       	brne	.-6      	; 0x7d6 <oled_print+0x20>
     7dc:	31 97       	sbiw	r30, 0x01	; 1
     7de:	e0 1b       	sub	r30, r16
     7e0:	f1 0b       	sbc	r31, r17
     7e2:	ce 17       	cp	r28, r30
     7e4:	df 07       	cpc	r29, r31
     7e6:	78 f3       	brcs	.-34     	; 0x7c6 <oled_print+0x10>
    oled_print_char(string[i]);
  }
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	1f 91       	pop	r17
     7ee:	0f 91       	pop	r16
     7f0:	08 95       	ret

000007f2 <spi_write_char>:
    SPDR = 0xFF;
	// Wait for reception to complete
    loop_until_bit_is_set(SPSR, SPIF);
	// Return char in data register
	return SPDR;
}
     7f2:	8f b9       	out	0x0f, r24	; 15
     7f4:	77 9b       	sbis	0x0e, 7	; 14
     7f6:	fe cf       	rjmp	.-4      	; 0x7f4 <spi_write_char+0x2>
     7f8:	8f b1       	in	r24, 0x0f	; 15
     7fa:	08 95       	ret

000007fc <spi_set_ss_high>:

void spi_set_ss_high(){
    PORTB |= (1 << DD_SS);
     7fc:	88 b3       	in	r24, 0x18	; 24
     7fe:	80 61       	ori	r24, 0x10	; 16
     800:	88 bb       	out	0x18, r24	; 24
     802:	08 95       	ret

00000804 <spi_init_master>:
#include "SPIdrv.h"


void spi_init_master(){
    // Set MOSI and SCK - og SS - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
     804:	80 eb       	ldi	r24, 0xB0	; 176
     806:	87 bb       	out	0x17, r24	; 23
	DDR_SPI &= ~(1<<DD_MISO);
     808:	87 b3       	in	r24, 0x17	; 23
     80a:	8f 7b       	andi	r24, 0xBF	; 191
     80c:	87 bb       	out	0x17, r24	; 23
	
	spi_set_ss_high();
     80e:	0e 94 fe 03 	call	0x7fc	; 0x7fc <spi_set_ss_high>
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)|(1<<SPIE);
     812:	81 ed       	ldi	r24, 0xD1	; 209
     814:	8d b9       	out	0x0d, r24	; 13
	SPCR &= ~((1<<CPOL)|(1<<CPHA));
     816:	8d b1       	in	r24, 0x0d	; 13
     818:	83 7f       	andi	r24, 0xF3	; 243
     81a:	8d b9       	out	0x0d, r24	; 13
     81c:	08 95       	ret

0000081e <XMEM_init>:
	SFIOR |= (1<<XMM2); // Masking P7-P4
}

void XMEM_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	ext_mem[addr]= data;
     81e:	85 b7       	in	r24, 0x35	; 53
     820:	80 68       	ori	r24, 0x80	; 128
     822:	85 bf       	out	0x35, r24	; 53
     824:	80 b7       	in	r24, 0x30	; 48
     826:	80 62       	ori	r24, 0x20	; 32
     828:	80 bf       	out	0x30, r24	; 48
     82a:	08 95       	ret

0000082c <XMEM_read>:
}

uint8_t XMEM_read(uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
     82c:	90 5f       	subi	r25, 0xF0	; 240
     82e:	fc 01       	movw	r30, r24
     830:	80 81       	ld	r24, Z
	return ret_val;
}
     832:	08 95       	ret

00000834 <USART_Transmit>:
#include "UARTdrv.h"

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     834:	5d 9b       	sbis	0x0b, 5	; 11
     836:	fe cf       	rjmp	.-4      	; 0x834 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     838:	8c b9       	out	0x0c, r24	; 12
     83a:	08 95       	ret

0000083c <USART_Receive>:
}
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
     83c:	5f 9b       	sbis	0x0b, 7	; 11
     83e:	fe cf       	rjmp	.-4      	; 0x83c <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
     840:	8c b1       	in	r24, 0x0c	; 12
}
     842:	08 95       	ret

00000844 <USART_Init>:
void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     844:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     846:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     848:	88 e1       	ldi	r24, 0x18	; 24
     84a:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     84c:	8e e8       	ldi	r24, 0x8E	; 142
     84e:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit,USART_Receive);
     850:	6e e1       	ldi	r22, 0x1E	; 30
     852:	74 e0       	ldi	r23, 0x04	; 4
     854:	8a e1       	ldi	r24, 0x1A	; 26
     856:	94 e0       	ldi	r25, 0x04	; 4
     858:	0e 94 36 04 	call	0x86c	; 0x86c <fdevopen>
     85c:	08 95       	ret

0000085e <strcpy_P>:
     85e:	fb 01       	movw	r30, r22
     860:	dc 01       	movw	r26, r24
     862:	05 90       	lpm	r0, Z+
     864:	0d 92       	st	X+, r0
     866:	00 20       	and	r0, r0
     868:	e1 f7       	brne	.-8      	; 0x862 <strcpy_P+0x4>
     86a:	08 95       	ret

0000086c <fdevopen>:
     86c:	0f 93       	push	r16
     86e:	1f 93       	push	r17
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	00 97       	sbiw	r24, 0x00	; 0
     876:	31 f4       	brne	.+12     	; 0x884 <fdevopen+0x18>
     878:	61 15       	cp	r22, r1
     87a:	71 05       	cpc	r23, r1
     87c:	19 f4       	brne	.+6      	; 0x884 <fdevopen+0x18>
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	3a c0       	rjmp	.+116    	; 0x8f8 <fdevopen+0x8c>
     884:	8b 01       	movw	r16, r22
     886:	ec 01       	movw	r28, r24
     888:	6e e0       	ldi	r22, 0x0E	; 14
     88a:	70 e0       	ldi	r23, 0x00	; 0
     88c:	81 e0       	ldi	r24, 0x01	; 1
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 78 06 	call	0xcf0	; 0xcf0 <calloc>
     894:	fc 01       	movw	r30, r24
     896:	89 2b       	or	r24, r25
     898:	91 f3       	breq	.-28     	; 0x87e <fdevopen+0x12>
     89a:	80 e8       	ldi	r24, 0x80	; 128
     89c:	83 83       	std	Z+3, r24	; 0x03
     89e:	01 15       	cp	r16, r1
     8a0:	11 05       	cpc	r17, r1
     8a2:	71 f0       	breq	.+28     	; 0x8c0 <fdevopen+0x54>
     8a4:	13 87       	std	Z+11, r17	; 0x0b
     8a6:	02 87       	std	Z+10, r16	; 0x0a
     8a8:	81 e8       	ldi	r24, 0x81	; 129
     8aa:	83 83       	std	Z+3, r24	; 0x03
     8ac:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__iob>
     8b0:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__iob+0x1>
     8b4:	89 2b       	or	r24, r25
     8b6:	21 f4       	brne	.+8      	; 0x8c0 <fdevopen+0x54>
     8b8:	f0 93 46 01 	sts	0x0146, r31	; 0x800146 <__iob+0x1>
     8bc:	e0 93 45 01 	sts	0x0145, r30	; 0x800145 <__iob>
     8c0:	20 97       	sbiw	r28, 0x00	; 0
     8c2:	c9 f0       	breq	.+50     	; 0x8f6 <fdevopen+0x8a>
     8c4:	d1 87       	std	Z+9, r29	; 0x09
     8c6:	c0 87       	std	Z+8, r28	; 0x08
     8c8:	83 81       	ldd	r24, Z+3	; 0x03
     8ca:	82 60       	ori	r24, 0x02	; 2
     8cc:	83 83       	std	Z+3, r24	; 0x03
     8ce:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__iob+0x2>
     8d2:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <__iob+0x3>
     8d6:	89 2b       	or	r24, r25
     8d8:	71 f4       	brne	.+28     	; 0x8f6 <fdevopen+0x8a>
     8da:	f0 93 48 01 	sts	0x0148, r31	; 0x800148 <__iob+0x3>
     8de:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <__iob+0x2>
     8e2:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <__iob+0x4>
     8e6:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <__iob+0x5>
     8ea:	89 2b       	or	r24, r25
     8ec:	21 f4       	brne	.+8      	; 0x8f6 <fdevopen+0x8a>
     8ee:	f0 93 4a 01 	sts	0x014A, r31	; 0x80014a <__iob+0x5>
     8f2:	e0 93 49 01 	sts	0x0149, r30	; 0x800149 <__iob+0x4>
     8f6:	cf 01       	movw	r24, r30
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	0f 91       	pop	r16
     900:	08 95       	ret

00000902 <printf>:
     902:	a0 e0       	ldi	r26, 0x00	; 0
     904:	b0 e0       	ldi	r27, 0x00	; 0
     906:	e7 e8       	ldi	r30, 0x87	; 135
     908:	f4 e0       	ldi	r31, 0x04	; 4
     90a:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__prologue_saves__+0x20>
     90e:	ae 01       	movw	r20, r28
     910:	4b 5f       	subi	r20, 0xFB	; 251
     912:	5f 4f       	sbci	r21, 0xFF	; 255
     914:	fa 01       	movw	r30, r20
     916:	61 91       	ld	r22, Z+
     918:	71 91       	ld	r23, Z+
     91a:	af 01       	movw	r20, r30
     91c:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__iob+0x2>
     920:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <__iob+0x3>
     924:	0e 94 97 04 	call	0x92e	; 0x92e <vfprintf>
     928:	e2 e0       	ldi	r30, 0x02	; 2
     92a:	0c 94 98 08 	jmp	0x1130	; 0x1130 <__epilogue_restores__+0x20>

0000092e <vfprintf>:
     92e:	ab e0       	ldi	r26, 0x0B	; 11
     930:	b0 e0       	ldi	r27, 0x00	; 0
     932:	ed e9       	ldi	r30, 0x9D	; 157
     934:	f4 e0       	ldi	r31, 0x04	; 4
     936:	0c 94 6c 08 	jmp	0x10d8	; 0x10d8 <__prologue_saves__>
     93a:	6c 01       	movw	r12, r24
     93c:	7b 01       	movw	r14, r22
     93e:	8a 01       	movw	r16, r20
     940:	fc 01       	movw	r30, r24
     942:	17 82       	std	Z+7, r1	; 0x07
     944:	16 82       	std	Z+6, r1	; 0x06
     946:	83 81       	ldd	r24, Z+3	; 0x03
     948:	81 ff       	sbrs	r24, 1
     94a:	cc c1       	rjmp	.+920    	; 0xce4 <vfprintf+0x3b6>
     94c:	ce 01       	movw	r24, r28
     94e:	01 96       	adiw	r24, 0x01	; 1
     950:	3c 01       	movw	r6, r24
     952:	f6 01       	movw	r30, r12
     954:	93 81       	ldd	r25, Z+3	; 0x03
     956:	f7 01       	movw	r30, r14
     958:	93 fd       	sbrc	r25, 3
     95a:	85 91       	lpm	r24, Z+
     95c:	93 ff       	sbrs	r25, 3
     95e:	81 91       	ld	r24, Z+
     960:	7f 01       	movw	r14, r30
     962:	88 23       	and	r24, r24
     964:	09 f4       	brne	.+2      	; 0x968 <vfprintf+0x3a>
     966:	ba c1       	rjmp	.+884    	; 0xcdc <vfprintf+0x3ae>
     968:	85 32       	cpi	r24, 0x25	; 37
     96a:	39 f4       	brne	.+14     	; 0x97a <vfprintf+0x4c>
     96c:	93 fd       	sbrc	r25, 3
     96e:	85 91       	lpm	r24, Z+
     970:	93 ff       	sbrs	r25, 3
     972:	81 91       	ld	r24, Z+
     974:	7f 01       	movw	r14, r30
     976:	85 32       	cpi	r24, 0x25	; 37
     978:	29 f4       	brne	.+10     	; 0x984 <vfprintf+0x56>
     97a:	b6 01       	movw	r22, r12
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     982:	e7 cf       	rjmp	.-50     	; 0x952 <vfprintf+0x24>
     984:	91 2c       	mov	r9, r1
     986:	21 2c       	mov	r2, r1
     988:	31 2c       	mov	r3, r1
     98a:	ff e1       	ldi	r31, 0x1F	; 31
     98c:	f3 15       	cp	r31, r3
     98e:	d8 f0       	brcs	.+54     	; 0x9c6 <vfprintf+0x98>
     990:	8b 32       	cpi	r24, 0x2B	; 43
     992:	79 f0       	breq	.+30     	; 0x9b2 <vfprintf+0x84>
     994:	38 f4       	brcc	.+14     	; 0x9a4 <vfprintf+0x76>
     996:	80 32       	cpi	r24, 0x20	; 32
     998:	79 f0       	breq	.+30     	; 0x9b8 <vfprintf+0x8a>
     99a:	83 32       	cpi	r24, 0x23	; 35
     99c:	a1 f4       	brne	.+40     	; 0x9c6 <vfprintf+0x98>
     99e:	23 2d       	mov	r18, r3
     9a0:	20 61       	ori	r18, 0x10	; 16
     9a2:	1d c0       	rjmp	.+58     	; 0x9de <vfprintf+0xb0>
     9a4:	8d 32       	cpi	r24, 0x2D	; 45
     9a6:	61 f0       	breq	.+24     	; 0x9c0 <vfprintf+0x92>
     9a8:	80 33       	cpi	r24, 0x30	; 48
     9aa:	69 f4       	brne	.+26     	; 0x9c6 <vfprintf+0x98>
     9ac:	23 2d       	mov	r18, r3
     9ae:	21 60       	ori	r18, 0x01	; 1
     9b0:	16 c0       	rjmp	.+44     	; 0x9de <vfprintf+0xb0>
     9b2:	83 2d       	mov	r24, r3
     9b4:	82 60       	ori	r24, 0x02	; 2
     9b6:	38 2e       	mov	r3, r24
     9b8:	e3 2d       	mov	r30, r3
     9ba:	e4 60       	ori	r30, 0x04	; 4
     9bc:	3e 2e       	mov	r3, r30
     9be:	2a c0       	rjmp	.+84     	; 0xa14 <vfprintf+0xe6>
     9c0:	f3 2d       	mov	r31, r3
     9c2:	f8 60       	ori	r31, 0x08	; 8
     9c4:	1d c0       	rjmp	.+58     	; 0xa00 <vfprintf+0xd2>
     9c6:	37 fc       	sbrc	r3, 7
     9c8:	2d c0       	rjmp	.+90     	; 0xa24 <vfprintf+0xf6>
     9ca:	20 ed       	ldi	r18, 0xD0	; 208
     9cc:	28 0f       	add	r18, r24
     9ce:	2a 30       	cpi	r18, 0x0A	; 10
     9d0:	40 f0       	brcs	.+16     	; 0x9e2 <vfprintf+0xb4>
     9d2:	8e 32       	cpi	r24, 0x2E	; 46
     9d4:	b9 f4       	brne	.+46     	; 0xa04 <vfprintf+0xd6>
     9d6:	36 fc       	sbrc	r3, 6
     9d8:	81 c1       	rjmp	.+770    	; 0xcdc <vfprintf+0x3ae>
     9da:	23 2d       	mov	r18, r3
     9dc:	20 64       	ori	r18, 0x40	; 64
     9de:	32 2e       	mov	r3, r18
     9e0:	19 c0       	rjmp	.+50     	; 0xa14 <vfprintf+0xe6>
     9e2:	36 fe       	sbrs	r3, 6
     9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <vfprintf+0xc4>
     9e6:	8a e0       	ldi	r24, 0x0A	; 10
     9e8:	98 9e       	mul	r9, r24
     9ea:	20 0d       	add	r18, r0
     9ec:	11 24       	eor	r1, r1
     9ee:	92 2e       	mov	r9, r18
     9f0:	11 c0       	rjmp	.+34     	; 0xa14 <vfprintf+0xe6>
     9f2:	ea e0       	ldi	r30, 0x0A	; 10
     9f4:	2e 9e       	mul	r2, r30
     9f6:	20 0d       	add	r18, r0
     9f8:	11 24       	eor	r1, r1
     9fa:	22 2e       	mov	r2, r18
     9fc:	f3 2d       	mov	r31, r3
     9fe:	f0 62       	ori	r31, 0x20	; 32
     a00:	3f 2e       	mov	r3, r31
     a02:	08 c0       	rjmp	.+16     	; 0xa14 <vfprintf+0xe6>
     a04:	8c 36       	cpi	r24, 0x6C	; 108
     a06:	21 f4       	brne	.+8      	; 0xa10 <vfprintf+0xe2>
     a08:	83 2d       	mov	r24, r3
     a0a:	80 68       	ori	r24, 0x80	; 128
     a0c:	38 2e       	mov	r3, r24
     a0e:	02 c0       	rjmp	.+4      	; 0xa14 <vfprintf+0xe6>
     a10:	88 36       	cpi	r24, 0x68	; 104
     a12:	41 f4       	brne	.+16     	; 0xa24 <vfprintf+0xf6>
     a14:	f7 01       	movw	r30, r14
     a16:	93 fd       	sbrc	r25, 3
     a18:	85 91       	lpm	r24, Z+
     a1a:	93 ff       	sbrs	r25, 3
     a1c:	81 91       	ld	r24, Z+
     a1e:	7f 01       	movw	r14, r30
     a20:	81 11       	cpse	r24, r1
     a22:	b3 cf       	rjmp	.-154    	; 0x98a <vfprintf+0x5c>
     a24:	98 2f       	mov	r25, r24
     a26:	9f 7d       	andi	r25, 0xDF	; 223
     a28:	95 54       	subi	r25, 0x45	; 69
     a2a:	93 30       	cpi	r25, 0x03	; 3
     a2c:	28 f4       	brcc	.+10     	; 0xa38 <vfprintf+0x10a>
     a2e:	0c 5f       	subi	r16, 0xFC	; 252
     a30:	1f 4f       	sbci	r17, 0xFF	; 255
     a32:	9f e3       	ldi	r25, 0x3F	; 63
     a34:	99 83       	std	Y+1, r25	; 0x01
     a36:	0d c0       	rjmp	.+26     	; 0xa52 <vfprintf+0x124>
     a38:	83 36       	cpi	r24, 0x63	; 99
     a3a:	31 f0       	breq	.+12     	; 0xa48 <vfprintf+0x11a>
     a3c:	83 37       	cpi	r24, 0x73	; 115
     a3e:	71 f0       	breq	.+28     	; 0xa5c <vfprintf+0x12e>
     a40:	83 35       	cpi	r24, 0x53	; 83
     a42:	09 f0       	breq	.+2      	; 0xa46 <vfprintf+0x118>
     a44:	59 c0       	rjmp	.+178    	; 0xaf8 <vfprintf+0x1ca>
     a46:	21 c0       	rjmp	.+66     	; 0xa8a <vfprintf+0x15c>
     a48:	f8 01       	movw	r30, r16
     a4a:	80 81       	ld	r24, Z
     a4c:	89 83       	std	Y+1, r24	; 0x01
     a4e:	0e 5f       	subi	r16, 0xFE	; 254
     a50:	1f 4f       	sbci	r17, 0xFF	; 255
     a52:	88 24       	eor	r8, r8
     a54:	83 94       	inc	r8
     a56:	91 2c       	mov	r9, r1
     a58:	53 01       	movw	r10, r6
     a5a:	13 c0       	rjmp	.+38     	; 0xa82 <vfprintf+0x154>
     a5c:	28 01       	movw	r4, r16
     a5e:	f2 e0       	ldi	r31, 0x02	; 2
     a60:	4f 0e       	add	r4, r31
     a62:	51 1c       	adc	r5, r1
     a64:	f8 01       	movw	r30, r16
     a66:	a0 80       	ld	r10, Z
     a68:	b1 80       	ldd	r11, Z+1	; 0x01
     a6a:	36 fe       	sbrs	r3, 6
     a6c:	03 c0       	rjmp	.+6      	; 0xa74 <vfprintf+0x146>
     a6e:	69 2d       	mov	r22, r9
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <vfprintf+0x14a>
     a74:	6f ef       	ldi	r22, 0xFF	; 255
     a76:	7f ef       	ldi	r23, 0xFF	; 255
     a78:	c5 01       	movw	r24, r10
     a7a:	0e 94 c7 07 	call	0xf8e	; 0xf8e <strnlen>
     a7e:	4c 01       	movw	r8, r24
     a80:	82 01       	movw	r16, r4
     a82:	f3 2d       	mov	r31, r3
     a84:	ff 77       	andi	r31, 0x7F	; 127
     a86:	3f 2e       	mov	r3, r31
     a88:	16 c0       	rjmp	.+44     	; 0xab6 <vfprintf+0x188>
     a8a:	28 01       	movw	r4, r16
     a8c:	22 e0       	ldi	r18, 0x02	; 2
     a8e:	42 0e       	add	r4, r18
     a90:	51 1c       	adc	r5, r1
     a92:	f8 01       	movw	r30, r16
     a94:	a0 80       	ld	r10, Z
     a96:	b1 80       	ldd	r11, Z+1	; 0x01
     a98:	36 fe       	sbrs	r3, 6
     a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <vfprintf+0x174>
     a9c:	69 2d       	mov	r22, r9
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <vfprintf+0x178>
     aa2:	6f ef       	ldi	r22, 0xFF	; 255
     aa4:	7f ef       	ldi	r23, 0xFF	; 255
     aa6:	c5 01       	movw	r24, r10
     aa8:	0e 94 b5 07 	call	0xf6a	; 0xf6a <strnlen_P>
     aac:	4c 01       	movw	r8, r24
     aae:	f3 2d       	mov	r31, r3
     ab0:	f0 68       	ori	r31, 0x80	; 128
     ab2:	3f 2e       	mov	r3, r31
     ab4:	82 01       	movw	r16, r4
     ab6:	33 fc       	sbrc	r3, 3
     ab8:	1b c0       	rjmp	.+54     	; 0xaf0 <vfprintf+0x1c2>
     aba:	82 2d       	mov	r24, r2
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	88 16       	cp	r8, r24
     ac0:	99 06       	cpc	r9, r25
     ac2:	b0 f4       	brcc	.+44     	; 0xaf0 <vfprintf+0x1c2>
     ac4:	b6 01       	movw	r22, r12
     ac6:	80 e2       	ldi	r24, 0x20	; 32
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     ace:	2a 94       	dec	r2
     ad0:	f4 cf       	rjmp	.-24     	; 0xaba <vfprintf+0x18c>
     ad2:	f5 01       	movw	r30, r10
     ad4:	37 fc       	sbrc	r3, 7
     ad6:	85 91       	lpm	r24, Z+
     ad8:	37 fe       	sbrs	r3, 7
     ada:	81 91       	ld	r24, Z+
     adc:	5f 01       	movw	r10, r30
     ade:	b6 01       	movw	r22, r12
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     ae6:	21 10       	cpse	r2, r1
     ae8:	2a 94       	dec	r2
     aea:	21 e0       	ldi	r18, 0x01	; 1
     aec:	82 1a       	sub	r8, r18
     aee:	91 08       	sbc	r9, r1
     af0:	81 14       	cp	r8, r1
     af2:	91 04       	cpc	r9, r1
     af4:	71 f7       	brne	.-36     	; 0xad2 <vfprintf+0x1a4>
     af6:	e8 c0       	rjmp	.+464    	; 0xcc8 <vfprintf+0x39a>
     af8:	84 36       	cpi	r24, 0x64	; 100
     afa:	11 f0       	breq	.+4      	; 0xb00 <vfprintf+0x1d2>
     afc:	89 36       	cpi	r24, 0x69	; 105
     afe:	41 f5       	brne	.+80     	; 0xb50 <vfprintf+0x222>
     b00:	f8 01       	movw	r30, r16
     b02:	37 fe       	sbrs	r3, 7
     b04:	07 c0       	rjmp	.+14     	; 0xb14 <vfprintf+0x1e6>
     b06:	60 81       	ld	r22, Z
     b08:	71 81       	ldd	r23, Z+1	; 0x01
     b0a:	82 81       	ldd	r24, Z+2	; 0x02
     b0c:	93 81       	ldd	r25, Z+3	; 0x03
     b0e:	0c 5f       	subi	r16, 0xFC	; 252
     b10:	1f 4f       	sbci	r17, 0xFF	; 255
     b12:	08 c0       	rjmp	.+16     	; 0xb24 <vfprintf+0x1f6>
     b14:	60 81       	ld	r22, Z
     b16:	71 81       	ldd	r23, Z+1	; 0x01
     b18:	07 2e       	mov	r0, r23
     b1a:	00 0c       	add	r0, r0
     b1c:	88 0b       	sbc	r24, r24
     b1e:	99 0b       	sbc	r25, r25
     b20:	0e 5f       	subi	r16, 0xFE	; 254
     b22:	1f 4f       	sbci	r17, 0xFF	; 255
     b24:	f3 2d       	mov	r31, r3
     b26:	ff 76       	andi	r31, 0x6F	; 111
     b28:	3f 2e       	mov	r3, r31
     b2a:	97 ff       	sbrs	r25, 7
     b2c:	09 c0       	rjmp	.+18     	; 0xb40 <vfprintf+0x212>
     b2e:	90 95       	com	r25
     b30:	80 95       	com	r24
     b32:	70 95       	com	r23
     b34:	61 95       	neg	r22
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	8f 4f       	sbci	r24, 0xFF	; 255
     b3a:	9f 4f       	sbci	r25, 0xFF	; 255
     b3c:	f0 68       	ori	r31, 0x80	; 128
     b3e:	3f 2e       	mov	r3, r31
     b40:	2a e0       	ldi	r18, 0x0A	; 10
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	a3 01       	movw	r20, r6
     b46:	0e 94 0e 08 	call	0x101c	; 0x101c <__ultoa_invert>
     b4a:	88 2e       	mov	r8, r24
     b4c:	86 18       	sub	r8, r6
     b4e:	45 c0       	rjmp	.+138    	; 0xbda <vfprintf+0x2ac>
     b50:	85 37       	cpi	r24, 0x75	; 117
     b52:	31 f4       	brne	.+12     	; 0xb60 <vfprintf+0x232>
     b54:	23 2d       	mov	r18, r3
     b56:	2f 7e       	andi	r18, 0xEF	; 239
     b58:	b2 2e       	mov	r11, r18
     b5a:	2a e0       	ldi	r18, 0x0A	; 10
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	25 c0       	rjmp	.+74     	; 0xbaa <vfprintf+0x27c>
     b60:	93 2d       	mov	r25, r3
     b62:	99 7f       	andi	r25, 0xF9	; 249
     b64:	b9 2e       	mov	r11, r25
     b66:	8f 36       	cpi	r24, 0x6F	; 111
     b68:	c1 f0       	breq	.+48     	; 0xb9a <vfprintf+0x26c>
     b6a:	18 f4       	brcc	.+6      	; 0xb72 <vfprintf+0x244>
     b6c:	88 35       	cpi	r24, 0x58	; 88
     b6e:	79 f0       	breq	.+30     	; 0xb8e <vfprintf+0x260>
     b70:	b5 c0       	rjmp	.+362    	; 0xcdc <vfprintf+0x3ae>
     b72:	80 37       	cpi	r24, 0x70	; 112
     b74:	19 f0       	breq	.+6      	; 0xb7c <vfprintf+0x24e>
     b76:	88 37       	cpi	r24, 0x78	; 120
     b78:	21 f0       	breq	.+8      	; 0xb82 <vfprintf+0x254>
     b7a:	b0 c0       	rjmp	.+352    	; 0xcdc <vfprintf+0x3ae>
     b7c:	e9 2f       	mov	r30, r25
     b7e:	e0 61       	ori	r30, 0x10	; 16
     b80:	be 2e       	mov	r11, r30
     b82:	b4 fe       	sbrs	r11, 4
     b84:	0d c0       	rjmp	.+26     	; 0xba0 <vfprintf+0x272>
     b86:	fb 2d       	mov	r31, r11
     b88:	f4 60       	ori	r31, 0x04	; 4
     b8a:	bf 2e       	mov	r11, r31
     b8c:	09 c0       	rjmp	.+18     	; 0xba0 <vfprintf+0x272>
     b8e:	34 fe       	sbrs	r3, 4
     b90:	0a c0       	rjmp	.+20     	; 0xba6 <vfprintf+0x278>
     b92:	29 2f       	mov	r18, r25
     b94:	26 60       	ori	r18, 0x06	; 6
     b96:	b2 2e       	mov	r11, r18
     b98:	06 c0       	rjmp	.+12     	; 0xba6 <vfprintf+0x278>
     b9a:	28 e0       	ldi	r18, 0x08	; 8
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	05 c0       	rjmp	.+10     	; 0xbaa <vfprintf+0x27c>
     ba0:	20 e1       	ldi	r18, 0x10	; 16
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x27c>
     ba6:	20 e1       	ldi	r18, 0x10	; 16
     ba8:	32 e0       	ldi	r19, 0x02	; 2
     baa:	f8 01       	movw	r30, r16
     bac:	b7 fe       	sbrs	r11, 7
     bae:	07 c0       	rjmp	.+14     	; 0xbbe <vfprintf+0x290>
     bb0:	60 81       	ld	r22, Z
     bb2:	71 81       	ldd	r23, Z+1	; 0x01
     bb4:	82 81       	ldd	r24, Z+2	; 0x02
     bb6:	93 81       	ldd	r25, Z+3	; 0x03
     bb8:	0c 5f       	subi	r16, 0xFC	; 252
     bba:	1f 4f       	sbci	r17, 0xFF	; 255
     bbc:	06 c0       	rjmp	.+12     	; 0xbca <vfprintf+0x29c>
     bbe:	60 81       	ld	r22, Z
     bc0:	71 81       	ldd	r23, Z+1	; 0x01
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 5f       	subi	r16, 0xFE	; 254
     bc8:	1f 4f       	sbci	r17, 0xFF	; 255
     bca:	a3 01       	movw	r20, r6
     bcc:	0e 94 0e 08 	call	0x101c	; 0x101c <__ultoa_invert>
     bd0:	88 2e       	mov	r8, r24
     bd2:	86 18       	sub	r8, r6
     bd4:	fb 2d       	mov	r31, r11
     bd6:	ff 77       	andi	r31, 0x7F	; 127
     bd8:	3f 2e       	mov	r3, r31
     bda:	36 fe       	sbrs	r3, 6
     bdc:	0d c0       	rjmp	.+26     	; 0xbf8 <vfprintf+0x2ca>
     bde:	23 2d       	mov	r18, r3
     be0:	2e 7f       	andi	r18, 0xFE	; 254
     be2:	a2 2e       	mov	r10, r18
     be4:	89 14       	cp	r8, r9
     be6:	58 f4       	brcc	.+22     	; 0xbfe <vfprintf+0x2d0>
     be8:	34 fe       	sbrs	r3, 4
     bea:	0b c0       	rjmp	.+22     	; 0xc02 <vfprintf+0x2d4>
     bec:	32 fc       	sbrc	r3, 2
     bee:	09 c0       	rjmp	.+18     	; 0xc02 <vfprintf+0x2d4>
     bf0:	83 2d       	mov	r24, r3
     bf2:	8e 7e       	andi	r24, 0xEE	; 238
     bf4:	a8 2e       	mov	r10, r24
     bf6:	05 c0       	rjmp	.+10     	; 0xc02 <vfprintf+0x2d4>
     bf8:	b8 2c       	mov	r11, r8
     bfa:	a3 2c       	mov	r10, r3
     bfc:	03 c0       	rjmp	.+6      	; 0xc04 <vfprintf+0x2d6>
     bfe:	b8 2c       	mov	r11, r8
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <vfprintf+0x2d6>
     c02:	b9 2c       	mov	r11, r9
     c04:	a4 fe       	sbrs	r10, 4
     c06:	0f c0       	rjmp	.+30     	; 0xc26 <vfprintf+0x2f8>
     c08:	fe 01       	movw	r30, r28
     c0a:	e8 0d       	add	r30, r8
     c0c:	f1 1d       	adc	r31, r1
     c0e:	80 81       	ld	r24, Z
     c10:	80 33       	cpi	r24, 0x30	; 48
     c12:	21 f4       	brne	.+8      	; 0xc1c <vfprintf+0x2ee>
     c14:	9a 2d       	mov	r25, r10
     c16:	99 7e       	andi	r25, 0xE9	; 233
     c18:	a9 2e       	mov	r10, r25
     c1a:	09 c0       	rjmp	.+18     	; 0xc2e <vfprintf+0x300>
     c1c:	a2 fe       	sbrs	r10, 2
     c1e:	06 c0       	rjmp	.+12     	; 0xc2c <vfprintf+0x2fe>
     c20:	b3 94       	inc	r11
     c22:	b3 94       	inc	r11
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <vfprintf+0x300>
     c26:	8a 2d       	mov	r24, r10
     c28:	86 78       	andi	r24, 0x86	; 134
     c2a:	09 f0       	breq	.+2      	; 0xc2e <vfprintf+0x300>
     c2c:	b3 94       	inc	r11
     c2e:	a3 fc       	sbrc	r10, 3
     c30:	11 c0       	rjmp	.+34     	; 0xc54 <vfprintf+0x326>
     c32:	a0 fe       	sbrs	r10, 0
     c34:	06 c0       	rjmp	.+12     	; 0xc42 <vfprintf+0x314>
     c36:	b2 14       	cp	r11, r2
     c38:	88 f4       	brcc	.+34     	; 0xc5c <vfprintf+0x32e>
     c3a:	28 0c       	add	r2, r8
     c3c:	92 2c       	mov	r9, r2
     c3e:	9b 18       	sub	r9, r11
     c40:	0e c0       	rjmp	.+28     	; 0xc5e <vfprintf+0x330>
     c42:	b2 14       	cp	r11, r2
     c44:	60 f4       	brcc	.+24     	; 0xc5e <vfprintf+0x330>
     c46:	b6 01       	movw	r22, r12
     c48:	80 e2       	ldi	r24, 0x20	; 32
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     c50:	b3 94       	inc	r11
     c52:	f7 cf       	rjmp	.-18     	; 0xc42 <vfprintf+0x314>
     c54:	b2 14       	cp	r11, r2
     c56:	18 f4       	brcc	.+6      	; 0xc5e <vfprintf+0x330>
     c58:	2b 18       	sub	r2, r11
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <vfprintf+0x332>
     c5c:	98 2c       	mov	r9, r8
     c5e:	21 2c       	mov	r2, r1
     c60:	a4 fe       	sbrs	r10, 4
     c62:	10 c0       	rjmp	.+32     	; 0xc84 <vfprintf+0x356>
     c64:	b6 01       	movw	r22, r12
     c66:	80 e3       	ldi	r24, 0x30	; 48
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     c6e:	a2 fe       	sbrs	r10, 2
     c70:	17 c0       	rjmp	.+46     	; 0xca0 <vfprintf+0x372>
     c72:	a1 fc       	sbrc	r10, 1
     c74:	03 c0       	rjmp	.+6      	; 0xc7c <vfprintf+0x34e>
     c76:	88 e7       	ldi	r24, 0x78	; 120
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0x352>
     c7c:	88 e5       	ldi	r24, 0x58	; 88
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	b6 01       	movw	r22, r12
     c82:	0c c0       	rjmp	.+24     	; 0xc9c <vfprintf+0x36e>
     c84:	8a 2d       	mov	r24, r10
     c86:	86 78       	andi	r24, 0x86	; 134
     c88:	59 f0       	breq	.+22     	; 0xca0 <vfprintf+0x372>
     c8a:	a1 fe       	sbrs	r10, 1
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <vfprintf+0x364>
     c8e:	8b e2       	ldi	r24, 0x2B	; 43
     c90:	01 c0       	rjmp	.+2      	; 0xc94 <vfprintf+0x366>
     c92:	80 e2       	ldi	r24, 0x20	; 32
     c94:	a7 fc       	sbrc	r10, 7
     c96:	8d e2       	ldi	r24, 0x2D	; 45
     c98:	b6 01       	movw	r22, r12
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     ca0:	89 14       	cp	r8, r9
     ca2:	38 f4       	brcc	.+14     	; 0xcb2 <vfprintf+0x384>
     ca4:	b6 01       	movw	r22, r12
     ca6:	80 e3       	ldi	r24, 0x30	; 48
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     cae:	9a 94       	dec	r9
     cb0:	f7 cf       	rjmp	.-18     	; 0xca0 <vfprintf+0x372>
     cb2:	8a 94       	dec	r8
     cb4:	f3 01       	movw	r30, r6
     cb6:	e8 0d       	add	r30, r8
     cb8:	f1 1d       	adc	r31, r1
     cba:	80 81       	ld	r24, Z
     cbc:	b6 01       	movw	r22, r12
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     cc4:	81 10       	cpse	r8, r1
     cc6:	f5 cf       	rjmp	.-22     	; 0xcb2 <vfprintf+0x384>
     cc8:	22 20       	and	r2, r2
     cca:	09 f4       	brne	.+2      	; 0xcce <vfprintf+0x3a0>
     ccc:	42 ce       	rjmp	.-892    	; 0x952 <vfprintf+0x24>
     cce:	b6 01       	movw	r22, r12
     cd0:	80 e2       	ldi	r24, 0x20	; 32
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <fputc>
     cd8:	2a 94       	dec	r2
     cda:	f6 cf       	rjmp	.-20     	; 0xcc8 <vfprintf+0x39a>
     cdc:	f6 01       	movw	r30, r12
     cde:	86 81       	ldd	r24, Z+6	; 0x06
     ce0:	97 81       	ldd	r25, Z+7	; 0x07
     ce2:	02 c0       	rjmp	.+4      	; 0xce8 <vfprintf+0x3ba>
     ce4:	8f ef       	ldi	r24, 0xFF	; 255
     ce6:	9f ef       	ldi	r25, 0xFF	; 255
     ce8:	2b 96       	adiw	r28, 0x0b	; 11
     cea:	e2 e1       	ldi	r30, 0x12	; 18
     cec:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__epilogue_restores__>

00000cf0 <calloc>:
     cf0:	0f 93       	push	r16
     cf2:	1f 93       	push	r17
     cf4:	cf 93       	push	r28
     cf6:	df 93       	push	r29
     cf8:	86 9f       	mul	r24, r22
     cfa:	80 01       	movw	r16, r0
     cfc:	87 9f       	mul	r24, r23
     cfe:	10 0d       	add	r17, r0
     d00:	96 9f       	mul	r25, r22
     d02:	10 0d       	add	r17, r0
     d04:	11 24       	eor	r1, r1
     d06:	c8 01       	movw	r24, r16
     d08:	0e 94 94 06 	call	0xd28	; 0xd28 <malloc>
     d0c:	ec 01       	movw	r28, r24
     d0e:	00 97       	sbiw	r24, 0x00	; 0
     d10:	29 f0       	breq	.+10     	; 0xd1c <calloc+0x2c>
     d12:	a8 01       	movw	r20, r16
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	0e 94 c0 07 	call	0xf80	; 0xf80 <memset>
     d1c:	ce 01       	movw	r24, r28
     d1e:	df 91       	pop	r29
     d20:	cf 91       	pop	r28
     d22:	1f 91       	pop	r17
     d24:	0f 91       	pop	r16
     d26:	08 95       	ret

00000d28 <malloc>:
     d28:	0f 93       	push	r16
     d2a:	1f 93       	push	r17
     d2c:	cf 93       	push	r28
     d2e:	df 93       	push	r29
     d30:	82 30       	cpi	r24, 0x02	; 2
     d32:	91 05       	cpc	r25, r1
     d34:	10 f4       	brcc	.+4      	; 0xd3a <malloc+0x12>
     d36:	82 e0       	ldi	r24, 0x02	; 2
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	e0 91 4d 01 	lds	r30, 0x014D	; 0x80014d <__flp>
     d3e:	f0 91 4e 01 	lds	r31, 0x014E	; 0x80014e <__flp+0x1>
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	a0 e0       	ldi	r26, 0x00	; 0
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	30 97       	sbiw	r30, 0x00	; 0
     d4c:	19 f1       	breq	.+70     	; 0xd94 <malloc+0x6c>
     d4e:	40 81       	ld	r20, Z
     d50:	51 81       	ldd	r21, Z+1	; 0x01
     d52:	02 81       	ldd	r16, Z+2	; 0x02
     d54:	13 81       	ldd	r17, Z+3	; 0x03
     d56:	48 17       	cp	r20, r24
     d58:	59 07       	cpc	r21, r25
     d5a:	c8 f0       	brcs	.+50     	; 0xd8e <malloc+0x66>
     d5c:	84 17       	cp	r24, r20
     d5e:	95 07       	cpc	r25, r21
     d60:	69 f4       	brne	.+26     	; 0xd7c <malloc+0x54>
     d62:	10 97       	sbiw	r26, 0x00	; 0
     d64:	31 f0       	breq	.+12     	; 0xd72 <malloc+0x4a>
     d66:	12 96       	adiw	r26, 0x02	; 2
     d68:	0c 93       	st	X, r16
     d6a:	12 97       	sbiw	r26, 0x02	; 2
     d6c:	13 96       	adiw	r26, 0x03	; 3
     d6e:	1c 93       	st	X, r17
     d70:	27 c0       	rjmp	.+78     	; 0xdc0 <malloc+0x98>
     d72:	00 93 4d 01 	sts	0x014D, r16	; 0x80014d <__flp>
     d76:	10 93 4e 01 	sts	0x014E, r17	; 0x80014e <__flp+0x1>
     d7a:	22 c0       	rjmp	.+68     	; 0xdc0 <malloc+0x98>
     d7c:	21 15       	cp	r18, r1
     d7e:	31 05       	cpc	r19, r1
     d80:	19 f0       	breq	.+6      	; 0xd88 <malloc+0x60>
     d82:	42 17       	cp	r20, r18
     d84:	53 07       	cpc	r21, r19
     d86:	18 f4       	brcc	.+6      	; 0xd8e <malloc+0x66>
     d88:	9a 01       	movw	r18, r20
     d8a:	bd 01       	movw	r22, r26
     d8c:	ef 01       	movw	r28, r30
     d8e:	df 01       	movw	r26, r30
     d90:	f8 01       	movw	r30, r16
     d92:	db cf       	rjmp	.-74     	; 0xd4a <malloc+0x22>
     d94:	21 15       	cp	r18, r1
     d96:	31 05       	cpc	r19, r1
     d98:	f9 f0       	breq	.+62     	; 0xdd8 <malloc+0xb0>
     d9a:	28 1b       	sub	r18, r24
     d9c:	39 0b       	sbc	r19, r25
     d9e:	24 30       	cpi	r18, 0x04	; 4
     da0:	31 05       	cpc	r19, r1
     da2:	80 f4       	brcc	.+32     	; 0xdc4 <malloc+0x9c>
     da4:	8a 81       	ldd	r24, Y+2	; 0x02
     da6:	9b 81       	ldd	r25, Y+3	; 0x03
     da8:	61 15       	cp	r22, r1
     daa:	71 05       	cpc	r23, r1
     dac:	21 f0       	breq	.+8      	; 0xdb6 <malloc+0x8e>
     dae:	fb 01       	movw	r30, r22
     db0:	93 83       	std	Z+3, r25	; 0x03
     db2:	82 83       	std	Z+2, r24	; 0x02
     db4:	04 c0       	rjmp	.+8      	; 0xdbe <malloc+0x96>
     db6:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <__flp+0x1>
     dba:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <__flp>
     dbe:	fe 01       	movw	r30, r28
     dc0:	32 96       	adiw	r30, 0x02	; 2
     dc2:	44 c0       	rjmp	.+136    	; 0xe4c <malloc+0x124>
     dc4:	fe 01       	movw	r30, r28
     dc6:	e2 0f       	add	r30, r18
     dc8:	f3 1f       	adc	r31, r19
     dca:	81 93       	st	Z+, r24
     dcc:	91 93       	st	Z+, r25
     dce:	22 50       	subi	r18, 0x02	; 2
     dd0:	31 09       	sbc	r19, r1
     dd2:	39 83       	std	Y+1, r19	; 0x01
     dd4:	28 83       	st	Y, r18
     dd6:	3a c0       	rjmp	.+116    	; 0xe4c <malloc+0x124>
     dd8:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <__brkval>
     ddc:	30 91 4c 01 	lds	r19, 0x014C	; 0x80014c <__brkval+0x1>
     de0:	23 2b       	or	r18, r19
     de2:	41 f4       	brne	.+16     	; 0xdf4 <malloc+0xcc>
     de4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     de8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     dec:	30 93 4c 01 	sts	0x014C, r19	; 0x80014c <__brkval+0x1>
     df0:	20 93 4b 01 	sts	0x014B, r18	; 0x80014b <__brkval>
     df4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     df8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     dfc:	21 15       	cp	r18, r1
     dfe:	31 05       	cpc	r19, r1
     e00:	41 f4       	brne	.+16     	; 0xe12 <malloc+0xea>
     e02:	2d b7       	in	r18, 0x3d	; 61
     e04:	3e b7       	in	r19, 0x3e	; 62
     e06:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     e0a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     e0e:	24 1b       	sub	r18, r20
     e10:	35 0b       	sbc	r19, r21
     e12:	e0 91 4b 01 	lds	r30, 0x014B	; 0x80014b <__brkval>
     e16:	f0 91 4c 01 	lds	r31, 0x014C	; 0x80014c <__brkval+0x1>
     e1a:	e2 17       	cp	r30, r18
     e1c:	f3 07       	cpc	r31, r19
     e1e:	a0 f4       	brcc	.+40     	; 0xe48 <malloc+0x120>
     e20:	2e 1b       	sub	r18, r30
     e22:	3f 0b       	sbc	r19, r31
     e24:	28 17       	cp	r18, r24
     e26:	39 07       	cpc	r19, r25
     e28:	78 f0       	brcs	.+30     	; 0xe48 <malloc+0x120>
     e2a:	ac 01       	movw	r20, r24
     e2c:	4e 5f       	subi	r20, 0xFE	; 254
     e2e:	5f 4f       	sbci	r21, 0xFF	; 255
     e30:	24 17       	cp	r18, r20
     e32:	35 07       	cpc	r19, r21
     e34:	48 f0       	brcs	.+18     	; 0xe48 <malloc+0x120>
     e36:	4e 0f       	add	r20, r30
     e38:	5f 1f       	adc	r21, r31
     e3a:	50 93 4c 01 	sts	0x014C, r21	; 0x80014c <__brkval+0x1>
     e3e:	40 93 4b 01 	sts	0x014B, r20	; 0x80014b <__brkval>
     e42:	81 93       	st	Z+, r24
     e44:	91 93       	st	Z+, r25
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <malloc+0x124>
     e48:	e0 e0       	ldi	r30, 0x00	; 0
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	cf 01       	movw	r24, r30
     e4e:	df 91       	pop	r29
     e50:	cf 91       	pop	r28
     e52:	1f 91       	pop	r17
     e54:	0f 91       	pop	r16
     e56:	08 95       	ret

00000e58 <free>:
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	00 97       	sbiw	r24, 0x00	; 0
     e5e:	09 f4       	brne	.+2      	; 0xe62 <free+0xa>
     e60:	81 c0       	rjmp	.+258    	; 0xf64 <free+0x10c>
     e62:	fc 01       	movw	r30, r24
     e64:	32 97       	sbiw	r30, 0x02	; 2
     e66:	13 82       	std	Z+3, r1	; 0x03
     e68:	12 82       	std	Z+2, r1	; 0x02
     e6a:	a0 91 4d 01 	lds	r26, 0x014D	; 0x80014d <__flp>
     e6e:	b0 91 4e 01 	lds	r27, 0x014E	; 0x80014e <__flp+0x1>
     e72:	10 97       	sbiw	r26, 0x00	; 0
     e74:	81 f4       	brne	.+32     	; 0xe96 <free+0x3e>
     e76:	20 81       	ld	r18, Z
     e78:	31 81       	ldd	r19, Z+1	; 0x01
     e7a:	82 0f       	add	r24, r18
     e7c:	93 1f       	adc	r25, r19
     e7e:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <__brkval>
     e82:	30 91 4c 01 	lds	r19, 0x014C	; 0x80014c <__brkval+0x1>
     e86:	28 17       	cp	r18, r24
     e88:	39 07       	cpc	r19, r25
     e8a:	51 f5       	brne	.+84     	; 0xee0 <free+0x88>
     e8c:	f0 93 4c 01 	sts	0x014C, r31	; 0x80014c <__brkval+0x1>
     e90:	e0 93 4b 01 	sts	0x014B, r30	; 0x80014b <__brkval>
     e94:	67 c0       	rjmp	.+206    	; 0xf64 <free+0x10c>
     e96:	ed 01       	movw	r28, r26
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	ce 17       	cp	r28, r30
     e9e:	df 07       	cpc	r29, r31
     ea0:	40 f4       	brcc	.+16     	; 0xeb2 <free+0x5a>
     ea2:	4a 81       	ldd	r20, Y+2	; 0x02
     ea4:	5b 81       	ldd	r21, Y+3	; 0x03
     ea6:	9e 01       	movw	r18, r28
     ea8:	41 15       	cp	r20, r1
     eaa:	51 05       	cpc	r21, r1
     eac:	f1 f0       	breq	.+60     	; 0xeea <free+0x92>
     eae:	ea 01       	movw	r28, r20
     eb0:	f5 cf       	rjmp	.-22     	; 0xe9c <free+0x44>
     eb2:	d3 83       	std	Z+3, r29	; 0x03
     eb4:	c2 83       	std	Z+2, r28	; 0x02
     eb6:	40 81       	ld	r20, Z
     eb8:	51 81       	ldd	r21, Z+1	; 0x01
     eba:	84 0f       	add	r24, r20
     ebc:	95 1f       	adc	r25, r21
     ebe:	c8 17       	cp	r28, r24
     ec0:	d9 07       	cpc	r29, r25
     ec2:	59 f4       	brne	.+22     	; 0xeda <free+0x82>
     ec4:	88 81       	ld	r24, Y
     ec6:	99 81       	ldd	r25, Y+1	; 0x01
     ec8:	84 0f       	add	r24, r20
     eca:	95 1f       	adc	r25, r21
     ecc:	02 96       	adiw	r24, 0x02	; 2
     ece:	91 83       	std	Z+1, r25	; 0x01
     ed0:	80 83       	st	Z, r24
     ed2:	8a 81       	ldd	r24, Y+2	; 0x02
     ed4:	9b 81       	ldd	r25, Y+3	; 0x03
     ed6:	93 83       	std	Z+3, r25	; 0x03
     ed8:	82 83       	std	Z+2, r24	; 0x02
     eda:	21 15       	cp	r18, r1
     edc:	31 05       	cpc	r19, r1
     ede:	29 f4       	brne	.+10     	; 0xeea <free+0x92>
     ee0:	f0 93 4e 01 	sts	0x014E, r31	; 0x80014e <__flp+0x1>
     ee4:	e0 93 4d 01 	sts	0x014D, r30	; 0x80014d <__flp>
     ee8:	3d c0       	rjmp	.+122    	; 0xf64 <free+0x10c>
     eea:	e9 01       	movw	r28, r18
     eec:	fb 83       	std	Y+3, r31	; 0x03
     eee:	ea 83       	std	Y+2, r30	; 0x02
     ef0:	49 91       	ld	r20, Y+
     ef2:	59 91       	ld	r21, Y+
     ef4:	c4 0f       	add	r28, r20
     ef6:	d5 1f       	adc	r29, r21
     ef8:	ec 17       	cp	r30, r28
     efa:	fd 07       	cpc	r31, r29
     efc:	61 f4       	brne	.+24     	; 0xf16 <free+0xbe>
     efe:	80 81       	ld	r24, Z
     f00:	91 81       	ldd	r25, Z+1	; 0x01
     f02:	84 0f       	add	r24, r20
     f04:	95 1f       	adc	r25, r21
     f06:	02 96       	adiw	r24, 0x02	; 2
     f08:	e9 01       	movw	r28, r18
     f0a:	99 83       	std	Y+1, r25	; 0x01
     f0c:	88 83       	st	Y, r24
     f0e:	82 81       	ldd	r24, Z+2	; 0x02
     f10:	93 81       	ldd	r25, Z+3	; 0x03
     f12:	9b 83       	std	Y+3, r25	; 0x03
     f14:	8a 83       	std	Y+2, r24	; 0x02
     f16:	e0 e0       	ldi	r30, 0x00	; 0
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	12 96       	adiw	r26, 0x02	; 2
     f1c:	8d 91       	ld	r24, X+
     f1e:	9c 91       	ld	r25, X
     f20:	13 97       	sbiw	r26, 0x03	; 3
     f22:	00 97       	sbiw	r24, 0x00	; 0
     f24:	19 f0       	breq	.+6      	; 0xf2c <free+0xd4>
     f26:	fd 01       	movw	r30, r26
     f28:	dc 01       	movw	r26, r24
     f2a:	f7 cf       	rjmp	.-18     	; 0xf1a <free+0xc2>
     f2c:	8d 91       	ld	r24, X+
     f2e:	9c 91       	ld	r25, X
     f30:	11 97       	sbiw	r26, 0x01	; 1
     f32:	9d 01       	movw	r18, r26
     f34:	2e 5f       	subi	r18, 0xFE	; 254
     f36:	3f 4f       	sbci	r19, 0xFF	; 255
     f38:	82 0f       	add	r24, r18
     f3a:	93 1f       	adc	r25, r19
     f3c:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <__brkval>
     f40:	30 91 4c 01 	lds	r19, 0x014C	; 0x80014c <__brkval+0x1>
     f44:	28 17       	cp	r18, r24
     f46:	39 07       	cpc	r19, r25
     f48:	69 f4       	brne	.+26     	; 0xf64 <free+0x10c>
     f4a:	30 97       	sbiw	r30, 0x00	; 0
     f4c:	29 f4       	brne	.+10     	; 0xf58 <free+0x100>
     f4e:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <__flp+0x1>
     f52:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <__flp>
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <free+0x104>
     f58:	13 82       	std	Z+3, r1	; 0x03
     f5a:	12 82       	std	Z+2, r1	; 0x02
     f5c:	b0 93 4c 01 	sts	0x014C, r27	; 0x80014c <__brkval+0x1>
     f60:	a0 93 4b 01 	sts	0x014B, r26	; 0x80014b <__brkval>
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	08 95       	ret

00000f6a <strnlen_P>:
     f6a:	fc 01       	movw	r30, r24
     f6c:	05 90       	lpm	r0, Z+
     f6e:	61 50       	subi	r22, 0x01	; 1
     f70:	70 40       	sbci	r23, 0x00	; 0
     f72:	01 10       	cpse	r0, r1
     f74:	d8 f7       	brcc	.-10     	; 0xf6c <strnlen_P+0x2>
     f76:	80 95       	com	r24
     f78:	90 95       	com	r25
     f7a:	8e 0f       	add	r24, r30
     f7c:	9f 1f       	adc	r25, r31
     f7e:	08 95       	ret

00000f80 <memset>:
     f80:	dc 01       	movw	r26, r24
     f82:	01 c0       	rjmp	.+2      	; 0xf86 <memset+0x6>
     f84:	6d 93       	st	X+, r22
     f86:	41 50       	subi	r20, 0x01	; 1
     f88:	50 40       	sbci	r21, 0x00	; 0
     f8a:	e0 f7       	brcc	.-8      	; 0xf84 <memset+0x4>
     f8c:	08 95       	ret

00000f8e <strnlen>:
     f8e:	fc 01       	movw	r30, r24
     f90:	61 50       	subi	r22, 0x01	; 1
     f92:	70 40       	sbci	r23, 0x00	; 0
     f94:	01 90       	ld	r0, Z+
     f96:	01 10       	cpse	r0, r1
     f98:	d8 f7       	brcc	.-10     	; 0xf90 <strnlen+0x2>
     f9a:	80 95       	com	r24
     f9c:	90 95       	com	r25
     f9e:	8e 0f       	add	r24, r30
     fa0:	9f 1f       	adc	r25, r31
     fa2:	08 95       	ret

00000fa4 <fputc>:
     fa4:	0f 93       	push	r16
     fa6:	1f 93       	push	r17
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	fb 01       	movw	r30, r22
     fae:	23 81       	ldd	r18, Z+3	; 0x03
     fb0:	21 fd       	sbrc	r18, 1
     fb2:	03 c0       	rjmp	.+6      	; 0xfba <fputc+0x16>
     fb4:	8f ef       	ldi	r24, 0xFF	; 255
     fb6:	9f ef       	ldi	r25, 0xFF	; 255
     fb8:	2c c0       	rjmp	.+88     	; 0x1012 <fputc+0x6e>
     fba:	22 ff       	sbrs	r18, 2
     fbc:	16 c0       	rjmp	.+44     	; 0xfea <fputc+0x46>
     fbe:	46 81       	ldd	r20, Z+6	; 0x06
     fc0:	57 81       	ldd	r21, Z+7	; 0x07
     fc2:	24 81       	ldd	r18, Z+4	; 0x04
     fc4:	35 81       	ldd	r19, Z+5	; 0x05
     fc6:	42 17       	cp	r20, r18
     fc8:	53 07       	cpc	r21, r19
     fca:	44 f4       	brge	.+16     	; 0xfdc <fputc+0x38>
     fcc:	a0 81       	ld	r26, Z
     fce:	b1 81       	ldd	r27, Z+1	; 0x01
     fd0:	9d 01       	movw	r18, r26
     fd2:	2f 5f       	subi	r18, 0xFF	; 255
     fd4:	3f 4f       	sbci	r19, 0xFF	; 255
     fd6:	31 83       	std	Z+1, r19	; 0x01
     fd8:	20 83       	st	Z, r18
     fda:	8c 93       	st	X, r24
     fdc:	26 81       	ldd	r18, Z+6	; 0x06
     fde:	37 81       	ldd	r19, Z+7	; 0x07
     fe0:	2f 5f       	subi	r18, 0xFF	; 255
     fe2:	3f 4f       	sbci	r19, 0xFF	; 255
     fe4:	37 83       	std	Z+7, r19	; 0x07
     fe6:	26 83       	std	Z+6, r18	; 0x06
     fe8:	14 c0       	rjmp	.+40     	; 0x1012 <fputc+0x6e>
     fea:	8b 01       	movw	r16, r22
     fec:	ec 01       	movw	r28, r24
     fee:	fb 01       	movw	r30, r22
     ff0:	00 84       	ldd	r0, Z+8	; 0x08
     ff2:	f1 85       	ldd	r31, Z+9	; 0x09
     ff4:	e0 2d       	mov	r30, r0
     ff6:	09 95       	icall
     ff8:	89 2b       	or	r24, r25
     ffa:	e1 f6       	brne	.-72     	; 0xfb4 <fputc+0x10>
     ffc:	d8 01       	movw	r26, r16
     ffe:	16 96       	adiw	r26, 0x06	; 6
    1000:	8d 91       	ld	r24, X+
    1002:	9c 91       	ld	r25, X
    1004:	17 97       	sbiw	r26, 0x07	; 7
    1006:	01 96       	adiw	r24, 0x01	; 1
    1008:	17 96       	adiw	r26, 0x07	; 7
    100a:	9c 93       	st	X, r25
    100c:	8e 93       	st	-X, r24
    100e:	16 97       	sbiw	r26, 0x06	; 6
    1010:	ce 01       	movw	r24, r28
    1012:	df 91       	pop	r29
    1014:	cf 91       	pop	r28
    1016:	1f 91       	pop	r17
    1018:	0f 91       	pop	r16
    101a:	08 95       	ret

0000101c <__ultoa_invert>:
    101c:	fa 01       	movw	r30, r20
    101e:	aa 27       	eor	r26, r26
    1020:	28 30       	cpi	r18, 0x08	; 8
    1022:	51 f1       	breq	.+84     	; 0x1078 <__ultoa_invert+0x5c>
    1024:	20 31       	cpi	r18, 0x10	; 16
    1026:	81 f1       	breq	.+96     	; 0x1088 <__ultoa_invert+0x6c>
    1028:	e8 94       	clt
    102a:	6f 93       	push	r22
    102c:	6e 7f       	andi	r22, 0xFE	; 254
    102e:	6e 5f       	subi	r22, 0xFE	; 254
    1030:	7f 4f       	sbci	r23, 0xFF	; 255
    1032:	8f 4f       	sbci	r24, 0xFF	; 255
    1034:	9f 4f       	sbci	r25, 0xFF	; 255
    1036:	af 4f       	sbci	r26, 0xFF	; 255
    1038:	b1 e0       	ldi	r27, 0x01	; 1
    103a:	3e d0       	rcall	.+124    	; 0x10b8 <__ultoa_invert+0x9c>
    103c:	b4 e0       	ldi	r27, 0x04	; 4
    103e:	3c d0       	rcall	.+120    	; 0x10b8 <__ultoa_invert+0x9c>
    1040:	67 0f       	add	r22, r23
    1042:	78 1f       	adc	r23, r24
    1044:	89 1f       	adc	r24, r25
    1046:	9a 1f       	adc	r25, r26
    1048:	a1 1d       	adc	r26, r1
    104a:	68 0f       	add	r22, r24
    104c:	79 1f       	adc	r23, r25
    104e:	8a 1f       	adc	r24, r26
    1050:	91 1d       	adc	r25, r1
    1052:	a1 1d       	adc	r26, r1
    1054:	6a 0f       	add	r22, r26
    1056:	71 1d       	adc	r23, r1
    1058:	81 1d       	adc	r24, r1
    105a:	91 1d       	adc	r25, r1
    105c:	a1 1d       	adc	r26, r1
    105e:	20 d0       	rcall	.+64     	; 0x10a0 <__ultoa_invert+0x84>
    1060:	09 f4       	brne	.+2      	; 0x1064 <__ultoa_invert+0x48>
    1062:	68 94       	set
    1064:	3f 91       	pop	r19
    1066:	2a e0       	ldi	r18, 0x0A	; 10
    1068:	26 9f       	mul	r18, r22
    106a:	11 24       	eor	r1, r1
    106c:	30 19       	sub	r19, r0
    106e:	30 5d       	subi	r19, 0xD0	; 208
    1070:	31 93       	st	Z+, r19
    1072:	de f6       	brtc	.-74     	; 0x102a <__ultoa_invert+0xe>
    1074:	cf 01       	movw	r24, r30
    1076:	08 95       	ret
    1078:	46 2f       	mov	r20, r22
    107a:	47 70       	andi	r20, 0x07	; 7
    107c:	40 5d       	subi	r20, 0xD0	; 208
    107e:	41 93       	st	Z+, r20
    1080:	b3 e0       	ldi	r27, 0x03	; 3
    1082:	0f d0       	rcall	.+30     	; 0x10a2 <__ultoa_invert+0x86>
    1084:	c9 f7       	brne	.-14     	; 0x1078 <__ultoa_invert+0x5c>
    1086:	f6 cf       	rjmp	.-20     	; 0x1074 <__ultoa_invert+0x58>
    1088:	46 2f       	mov	r20, r22
    108a:	4f 70       	andi	r20, 0x0F	; 15
    108c:	40 5d       	subi	r20, 0xD0	; 208
    108e:	4a 33       	cpi	r20, 0x3A	; 58
    1090:	18 f0       	brcs	.+6      	; 0x1098 <__ultoa_invert+0x7c>
    1092:	49 5d       	subi	r20, 0xD9	; 217
    1094:	31 fd       	sbrc	r19, 1
    1096:	40 52       	subi	r20, 0x20	; 32
    1098:	41 93       	st	Z+, r20
    109a:	02 d0       	rcall	.+4      	; 0x10a0 <__ultoa_invert+0x84>
    109c:	a9 f7       	brne	.-22     	; 0x1088 <__ultoa_invert+0x6c>
    109e:	ea cf       	rjmp	.-44     	; 0x1074 <__ultoa_invert+0x58>
    10a0:	b4 e0       	ldi	r27, 0x04	; 4
    10a2:	a6 95       	lsr	r26
    10a4:	97 95       	ror	r25
    10a6:	87 95       	ror	r24
    10a8:	77 95       	ror	r23
    10aa:	67 95       	ror	r22
    10ac:	ba 95       	dec	r27
    10ae:	c9 f7       	brne	.-14     	; 0x10a2 <__ultoa_invert+0x86>
    10b0:	00 97       	sbiw	r24, 0x00	; 0
    10b2:	61 05       	cpc	r22, r1
    10b4:	71 05       	cpc	r23, r1
    10b6:	08 95       	ret
    10b8:	9b 01       	movw	r18, r22
    10ba:	ac 01       	movw	r20, r24
    10bc:	0a 2e       	mov	r0, r26
    10be:	06 94       	lsr	r0
    10c0:	57 95       	ror	r21
    10c2:	47 95       	ror	r20
    10c4:	37 95       	ror	r19
    10c6:	27 95       	ror	r18
    10c8:	ba 95       	dec	r27
    10ca:	c9 f7       	brne	.-14     	; 0x10be <__ultoa_invert+0xa2>
    10cc:	62 0f       	add	r22, r18
    10ce:	73 1f       	adc	r23, r19
    10d0:	84 1f       	adc	r24, r20
    10d2:	95 1f       	adc	r25, r21
    10d4:	a0 1d       	adc	r26, r0
    10d6:	08 95       	ret

000010d8 <__prologue_saves__>:
    10d8:	2f 92       	push	r2
    10da:	3f 92       	push	r3
    10dc:	4f 92       	push	r4
    10de:	5f 92       	push	r5
    10e0:	6f 92       	push	r6
    10e2:	7f 92       	push	r7
    10e4:	8f 92       	push	r8
    10e6:	9f 92       	push	r9
    10e8:	af 92       	push	r10
    10ea:	bf 92       	push	r11
    10ec:	cf 92       	push	r12
    10ee:	df 92       	push	r13
    10f0:	ef 92       	push	r14
    10f2:	ff 92       	push	r15
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
    1100:	ca 1b       	sub	r28, r26
    1102:	db 0b       	sbc	r29, r27
    1104:	0f b6       	in	r0, 0x3f	; 63
    1106:	f8 94       	cli
    1108:	de bf       	out	0x3e, r29	; 62
    110a:	0f be       	out	0x3f, r0	; 63
    110c:	cd bf       	out	0x3d, r28	; 61
    110e:	09 94       	ijmp

00001110 <__epilogue_restores__>:
    1110:	2a 88       	ldd	r2, Y+18	; 0x12
    1112:	39 88       	ldd	r3, Y+17	; 0x11
    1114:	48 88       	ldd	r4, Y+16	; 0x10
    1116:	5f 84       	ldd	r5, Y+15	; 0x0f
    1118:	6e 84       	ldd	r6, Y+14	; 0x0e
    111a:	7d 84       	ldd	r7, Y+13	; 0x0d
    111c:	8c 84       	ldd	r8, Y+12	; 0x0c
    111e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1120:	aa 84       	ldd	r10, Y+10	; 0x0a
    1122:	b9 84       	ldd	r11, Y+9	; 0x09
    1124:	c8 84       	ldd	r12, Y+8	; 0x08
    1126:	df 80       	ldd	r13, Y+7	; 0x07
    1128:	ee 80       	ldd	r14, Y+6	; 0x06
    112a:	fd 80       	ldd	r15, Y+5	; 0x05
    112c:	0c 81       	ldd	r16, Y+4	; 0x04
    112e:	1b 81       	ldd	r17, Y+3	; 0x03
    1130:	aa 81       	ldd	r26, Y+2	; 0x02
    1132:	b9 81       	ldd	r27, Y+1	; 0x01
    1134:	ce 0f       	add	r28, r30
    1136:	d1 1d       	adc	r29, r1
    1138:	0f b6       	in	r0, 0x3f	; 63
    113a:	f8 94       	cli
    113c:	de bf       	out	0x3e, r29	; 62
    113e:	0f be       	out	0x3f, r0	; 63
    1140:	cd bf       	out	0x3d, r28	; 61
    1142:	ed 01       	movw	r28, r26
    1144:	08 95       	ret

00001146 <_exit>:
    1146:	f8 94       	cli

00001148 <__stop_program>:
    1148:	ff cf       	rjmp	.-2      	; 0x1148 <__stop_program>
