
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000c26  00000cba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c26  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800140  00800140  00000cfa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cfa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a6f  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d96  00000000  00000000  000029eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ed9  00000000  00000000  00003781  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  0000465c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f1  00000000  00000000  00004af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bc8  00000000  00000000  000052e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00005ead  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e2       	ldi	r30, 0x26	; 38
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 34       	cpi	r26, 0x40	; 64
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e4       	ldi	r26, 0x40	; 64
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ab 34       	cpi	r26, 0x4B	; 75
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 76 00 	call	0xec	; 0xec <main>
  a6:	0c 94 11 06 	jmp	0xc22	; 0xc22 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <__vector_1>:
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	8f 93       	push	r24
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
  e0:	8f 91       	pop	r24
  e2:	0f 90       	pop	r0
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	0f 90       	pop	r0
  e8:	1f 90       	pop	r1
  ea:	18 95       	reti

000000ec <main>:
#include "OLED/OLEDdrv.h"
#include "SPI/SPIdrv.h"
#include "MCP2515/MCP2515drv.h"

int main(void)
{
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	1f 92       	push	r1
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
	USART_Init(MYUBRR);
  f6:	8f e1       	ldi	r24, 0x1F	; 31
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 97 01 	call	0x32e	; 0x32e <USART_Init>
	XMEM_init();
  fe:	0e 94 88 01 	call	0x310	; 0x310 <XMEM_init>
	//Int_INIT();
	ADC_Init();
 102:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
	oled_init();
 106:	0e 94 26 01 	call	0x24c	; 0x24c <oled_init>
	mcp2515_init();
 10a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <mcp2515_init>
	
	uint8_t value;
    while (1) 
    {	
		//spi_write_char('a');
		mcp2515_read(MCP_CANSTAT, &value);
 10e:	be 01       	movw	r22, r28
 110:	6f 5f       	subi	r22, 0xFF	; 255
 112:	7f 4f       	sbci	r23, 0xFF	; 255
 114:	8e e0       	ldi	r24, 0x0E	; 14
 116:	0e 94 a4 00 	call	0x148	; 0x148 <mcp2515_read>
		printf("%d\n\r" ,value);
 11a:	89 81       	ldd	r24, Y+1	; 0x01
 11c:	1f 92       	push	r1
 11e:	8f 93       	push	r24
 120:	8d e0       	ldi	r24, 0x0D	; 13
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	9f 93       	push	r25
 126:	8f 93       	push	r24
 128:	0e 94 ef 01 	call	0x3de	; 0x3de <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12c:	2f ef       	ldi	r18, 0xFF	; 255
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	9e e0       	ldi	r25, 0x0E	; 14
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0x46>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0x50>
 13c:	00 00       	nop
 13e:	0f 90       	pop	r0
 140:	0f 90       	pop	r0
 142:	0f 90       	pop	r0
 144:	0f 90       	pop	r0
 146:	e3 cf       	rjmp	.-58     	; 0x10e <main+0x22>

00000148 <mcp2515_read>:
    status = spi_read_char();
    DDRB |= (1 << PB4); // Deselect CAN - controller

    return status;

}
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	18 2f       	mov	r17, r24
 150:	eb 01       	movw	r28, r22
 152:	87 b3       	in	r24, 0x17	; 23
 154:	8f 7e       	andi	r24, 0xEF	; 239
 156:	87 bb       	out	0x17, r24	; 23
 158:	83 e0       	ldi	r24, 0x03	; 3
 15a:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
 15e:	81 2f       	mov	r24, r17
 160:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
 164:	0e 94 74 01 	call	0x2e8	; 0x2e8 <spi_read_char>
 168:	88 83       	st	Y, r24
 16a:	87 b3       	in	r24, 0x17	; 23
 16c:	80 61       	ori	r24, 0x10	; 16
 16e:	87 bb       	out	0x17, r24	; 23
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	1f 91       	pop	r17
 176:	08 95       	ret

00000178 <mcp2515_reset>:
 178:	87 b3       	in	r24, 0x17	; 23
 17a:	8f 7e       	andi	r24, 0xEF	; 239
 17c:	87 bb       	out	0x17, r24	; 23
 17e:	80 ec       	ldi	r24, 0xC0	; 192
 180:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
 184:	87 b3       	in	r24, 0x17	; 23
 186:	80 61       	ori	r24, 0x10	; 16
 188:	87 bb       	out	0x17, r24	; 23
 18a:	08 95       	ret

0000018c <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
 18c:	1f 93       	push	r17
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	18 2f       	mov	r17, r24
 194:	d6 2f       	mov	r29, r22
 196:	c4 2f       	mov	r28, r20
    DDRB &= ~(1 << DD_SS); // Select CAN - controller
 198:	87 b3       	in	r24, 0x17	; 23
 19a:	8f 7e       	andi	r24, 0xEF	; 239
 19c:	87 bb       	out	0x17, r24	; 23
    spi_write_char(MCP_BITMOD);   //Write read_status bit to SPI
 19e:	85 e0       	ldi	r24, 0x05	; 5
 1a0:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
    spi_write_char(address); // Send address
 1a4:	81 2f       	mov	r24, r17
 1a6:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
    spi_write_char(mask); // Send mask
 1aa:	8d 2f       	mov	r24, r29
 1ac:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
    spi_write_char(data); // Send data
 1b0:	8c 2f       	mov	r24, r28
 1b2:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_write_char>
    DDRB |= (1 << DD_SS); // Deselect CAN - controller
 1b6:	87 b3       	in	r24, 0x17	; 23
 1b8:	80 61       	ori	r24, 0x10	; 16
 1ba:	87 bb       	out	0x17, r24	; 23
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	08 95       	ret

000001c4 <mcp2515_init>:
#include "../SPI/SPIdrv.h"




uint8_t mcp2515_init(){
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	1f 92       	push	r1
 1ca:	cd b7       	in	r28, 0x3d	; 61
 1cc:	de b7       	in	r29, 0x3e	; 62
    uint8_t value;
	spi_init_master(); // Initialize SPI
 1ce:	0e 94 7e 01 	call	0x2fc	; 0x2fc <spi_init_master>
    mcp2515_reset(); // end reset - command
 1d2:	0e 94 bc 00 	call	0x178	; 0x178 <mcp2515_reset>
    // Self - testS
	//mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_CONFIG);

    mcp2515_read(MCP_CANSTAT, &value);
 1d6:	be 01       	movw	r22, r28
 1d8:	6f 5f       	subi	r22, 0xFF	; 255
 1da:	7f 4f       	sbci	r23, 0xFF	; 255
 1dc:	8e e0       	ldi	r24, 0x0E	; 14
 1de:	0e 94 a4 00 	call	0x148	; 0x148 <mcp2515_read>
	printf("value: %d\n\r", value);
 1e2:	89 81       	ldd	r24, Y+1	; 0x01
 1e4:	1f 92       	push	r1
 1e6:	8f 93       	push	r24
 1e8:	86 e0       	ldi	r24, 0x06	; 6
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	9f 93       	push	r25
 1ee:	8f 93       	push	r24
 1f0:	0e 94 ef 01 	call	0x3de	; 0x3de <printf>
    if ((value & MODE_MASK) != MODE_CONFIG) {
 1f4:	89 81       	ldd	r24, Y+1	; 0x01
 1f6:	80 7e       	andi	r24, 0xE0	; 224
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	80 38       	cpi	r24, 0x80	; 128
 202:	51 f0       	breq	.+20     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
        printf ("MCP2515 is NOT in config mode after reset !\n\r");
 204:	82 e1       	ldi	r24, 0x12	; 18
 206:	91 e0       	ldi	r25, 0x01	; 1
 208:	9f 93       	push	r25
 20a:	8f 93       	push	r24
 20c:	0e 94 ef 01 	call	0x3de	; 0x3de <printf>
    return 1;
 210:	0f 90       	pop	r0
 212:	0f 90       	pop	r0
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	13 c0       	rjmp	.+38     	; 0x23e <__EEPROM_REGION_LENGTH__+0x3e>
    }
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_LOOPBACK);
 218:	40 e4       	ldi	r20, 0x40	; 64
 21a:	60 ee       	ldi	r22, 0xE0	; 224
 21c:	8f e0       	ldi	r24, 0x0F	; 15
 21e:	0e 94 c6 00 	call	0x18c	; 0x18c <mcp2515_bit_modify>
	printf("value: %d\n\r", value);
 222:	89 81       	ldd	r24, Y+1	; 0x01
 224:	1f 92       	push	r1
 226:	8f 93       	push	r24
 228:	86 e0       	ldi	r24, 0x06	; 6
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	9f 93       	push	r25
 22e:	8f 93       	push	r24
 230:	0e 94 ef 01 	call	0x3de	; 0x3de <printf>

    return 0;
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	80 e0       	ldi	r24, 0x00	; 0
}
 23e:	0f 90       	pop	r0
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <oled_write_command>:
	ext_mem[0]= data;
}

void oled_write_data(uint8_t data){
	volatile char *ext_mem = (char *) OLED_DATA_ADDRESS;
	ext_mem[0]= data;
 246:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xeb5>
 24a:	08 95       	ret

0000024c <oled_init>:
}

void oled_init(){
    //Set inits according to datasheet
    oled_write_command(0xae); // display off
 24c:	8e ea       	ldi	r24, 0xAE	; 174
 24e:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xa1); //segment remap
 252:	81 ea       	ldi	r24, 0xA1	; 161
 254:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xda); //common pads hardware: alternative
 258:	8a ed       	ldi	r24, 0xDA	; 218
 25a:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x12);
 25e:	82 e1       	ldi	r24, 0x12	; 18
 260:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xc8); //common output scan direction:com63~com0
 264:	88 ec       	ldi	r24, 0xC8	; 200
 266:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xa8); //multiplex ration mode:63
 26a:	88 ea       	ldi	r24, 0xA8	; 168
 26c:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x3f);
 270:	8f e3       	ldi	r24, 0x3F	; 63
 272:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xd5); //display divide ratio/osc. freq. mode
 276:	85 ed       	ldi	r24, 0xD5	; 213
 278:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x80);
 27c:	80 e8       	ldi	r24, 0x80	; 128
 27e:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x81); //contrast control
 282:	81 e8       	ldi	r24, 0x81	; 129
 284:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x50);
 288:	80 e5       	ldi	r24, 0x50	; 80
 28a:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xd9); //set pre-charge period
 28e:	89 ed       	ldi	r24, 0xD9	; 217
 290:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x21);
 294:	81 e2       	ldi	r24, 0x21	; 33
 296:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x20); //Set Memory Addressing Mode
 29a:	80 e2       	ldi	r24, 0x20	; 32
 29c:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x02);
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xdb); //VCOM deselect level mode
 2a6:	8b ed       	ldi	r24, 0xDB	; 219
 2a8:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x30);
 2ac:	80 e3       	ldi	r24, 0x30	; 48
 2ae:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xad); //master configuration
 2b2:	8d ea       	ldi	r24, 0xAD	; 173
 2b4:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0x00);
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xa4); //out follows RAM content
 2be:	84 ea       	ldi	r24, 0xA4	; 164
 2c0:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xa6); //set normal display
 2c4:	86 ea       	ldi	r24, 0xA6	; 166
 2c6:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
    oled_write_command(0xaf); // display on
 2ca:	8f ea       	ldi	r24, 0xAF	; 175
 2cc:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>

    //Set to page adressing mode
    oled_write_command(0x20);
 2d0:	80 e2       	ldi	r24, 0x20	; 32
 2d2:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
	oled_write_command(0b10);
 2d6:	82 e0       	ldi	r24, 0x02	; 2
 2d8:	0e 94 23 01 	call	0x246	; 0x246 <oled_write_command>
 2dc:	08 95       	ret

000002de <spi_write_char>:
	SPCR = (1<<SPE);
}
*/
void spi_write_char(char cData){
	char flushbuffer;
    SPDR = cData;
 2de:	8f b9       	out	0x0f, r24	; 15
    //Wait for send to complete

	loop_until_bit_is_set(SPSR, SPIF);
 2e0:	77 9b       	sbis	0x0e, 7	; 14
 2e2:	fe cf       	rjmp	.-4      	; 0x2e0 <spi_write_char+0x2>
	flushbuffer = SPDR;
 2e4:	8f b1       	in	r24, 0x0f	; 15
 2e6:	08 95       	ret

000002e8 <spi_read_char>:
}

char spi_read_char(){
    SPDR = 0xFF;
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	8f b9       	out	0x0f, r24	; 15
	// Wait for reception to complete

    loop_until_bit_is_set(SPSR, SPIF);
 2ec:	77 9b       	sbis	0x0e, 7	; 14
 2ee:	fe cf       	rjmp	.-4      	; 0x2ec <spi_read_char+0x4>
	// Return char in data register
	return SPDR;
 2f0:	8f b1       	in	r24, 0x0f	; 15

}
 2f2:	08 95       	ret

000002f4 <spi_set_ss_high>:

void spi_set_ss_high(){
    PORTB |= (1 << DD_SS);
 2f4:	88 b3       	in	r24, 0x18	; 24
 2f6:	80 61       	ori	r24, 0x10	; 16
 2f8:	88 bb       	out	0x18, r24	; 24
 2fa:	08 95       	ret

000002fc <spi_init_master>:
#include "SPIdrv.h"


void spi_init_master(){
    // Set MOSI and SCK - og SS - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
 2fc:	80 eb       	ldi	r24, 0xB0	; 176
 2fe:	87 bb       	out	0x17, r24	; 23
	
	DDR_SPI &= ~(1<<DD_MISO);
 300:	87 b3       	in	r24, 0x17	; 23
 302:	8f 7b       	andi	r24, 0xBF	; 191
 304:	87 bb       	out	0x17, r24	; 23
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);//|(1<<SPIE);
 306:	81 e5       	ldi	r24, 0x51	; 81
 308:	8d b9       	out	0x0d, r24	; 13
	//SPCR &= ~((1<<CPOL)|(1<<CPHA));
	spi_set_ss_high();
 30a:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <spi_set_ss_high>
 30e:	08 95       	ret

00000310 <XMEM_init>:
 310:	85 b7       	in	r24, 0x35	; 53
 312:	80 68       	ori	r24, 0x80	; 128
 314:	85 bf       	out	0x35, r24	; 53
 316:	80 b7       	in	r24, 0x30	; 48
 318:	80 62       	ori	r24, 0x20	; 32
 31a:	80 bf       	out	0x30, r24	; 48
 31c:	08 95       	ret

0000031e <USART_Transmit>:
 31e:	5d 9b       	sbis	0x0b, 5	; 11
 320:	fe cf       	rjmp	.-4      	; 0x31e <USART_Transmit>
 322:	8c b9       	out	0x0c, r24	; 12
 324:	08 95       	ret

00000326 <USART_Receive>:
 326:	5f 9b       	sbis	0x0b, 7	; 11
 328:	fe cf       	rjmp	.-4      	; 0x326 <USART_Receive>
 32a:	8c b1       	in	r24, 0x0c	; 12
 32c:	08 95       	ret

0000032e <USART_Init>:
 32e:	90 bd       	out	0x20, r25	; 32
 330:	89 b9       	out	0x09, r24	; 9
 332:	88 e1       	ldi	r24, 0x18	; 24
 334:	8a b9       	out	0x0a, r24	; 10
 336:	8e e8       	ldi	r24, 0x8E	; 142
 338:	80 bd       	out	0x20, r24	; 32
 33a:	63 e9       	ldi	r22, 0x93	; 147
 33c:	71 e0       	ldi	r23, 0x01	; 1
 33e:	8f e8       	ldi	r24, 0x8F	; 143
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 a4 01 	call	0x348	; 0x348 <fdevopen>
 346:	08 95       	ret

00000348 <fdevopen>:
 348:	0f 93       	push	r16
 34a:	1f 93       	push	r17
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	00 97       	sbiw	r24, 0x00	; 0
 352:	31 f4       	brne	.+12     	; 0x360 <fdevopen+0x18>
 354:	61 15       	cp	r22, r1
 356:	71 05       	cpc	r23, r1
 358:	19 f4       	brne	.+6      	; 0x360 <fdevopen+0x18>
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	3a c0       	rjmp	.+116    	; 0x3d4 <fdevopen+0x8c>
 360:	8b 01       	movw	r16, r22
 362:	ec 01       	movw	r28, r24
 364:	6e e0       	ldi	r22, 0x0E	; 14
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 e6 03 	call	0x7cc	; 0x7cc <calloc>
 370:	fc 01       	movw	r30, r24
 372:	89 2b       	or	r24, r25
 374:	91 f3       	breq	.-28     	; 0x35a <fdevopen+0x12>
 376:	80 e8       	ldi	r24, 0x80	; 128
 378:	83 83       	std	Z+3, r24	; 0x03
 37a:	01 15       	cp	r16, r1
 37c:	11 05       	cpc	r17, r1
 37e:	71 f0       	breq	.+28     	; 0x39c <fdevopen+0x54>
 380:	13 87       	std	Z+11, r17	; 0x0b
 382:	02 87       	std	Z+10, r16	; 0x0a
 384:	81 e8       	ldi	r24, 0x81	; 129
 386:	83 83       	std	Z+3, r24	; 0x03
 388:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__iob>
 38c:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <__iob+0x1>
 390:	89 2b       	or	r24, r25
 392:	21 f4       	brne	.+8      	; 0x39c <fdevopen+0x54>
 394:	f0 93 42 01 	sts	0x0142, r31	; 0x800142 <__iob+0x1>
 398:	e0 93 41 01 	sts	0x0141, r30	; 0x800141 <__iob>
 39c:	20 97       	sbiw	r28, 0x00	; 0
 39e:	c9 f0       	breq	.+50     	; 0x3d2 <fdevopen+0x8a>
 3a0:	d1 87       	std	Z+9, r29	; 0x09
 3a2:	c0 87       	std	Z+8, r28	; 0x08
 3a4:	83 81       	ldd	r24, Z+3	; 0x03
 3a6:	82 60       	ori	r24, 0x02	; 2
 3a8:	83 83       	std	Z+3, r24	; 0x03
 3aa:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 3ae:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 3b2:	89 2b       	or	r24, r25
 3b4:	71 f4       	brne	.+28     	; 0x3d2 <fdevopen+0x8a>
 3b6:	f0 93 44 01 	sts	0x0144, r31	; 0x800144 <__iob+0x3>
 3ba:	e0 93 43 01 	sts	0x0143, r30	; 0x800143 <__iob+0x2>
 3be:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__iob+0x4>
 3c2:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__iob+0x5>
 3c6:	89 2b       	or	r24, r25
 3c8:	21 f4       	brne	.+8      	; 0x3d2 <fdevopen+0x8a>
 3ca:	f0 93 46 01 	sts	0x0146, r31	; 0x800146 <__iob+0x5>
 3ce:	e0 93 45 01 	sts	0x0145, r30	; 0x800145 <__iob+0x4>
 3d2:	cf 01       	movw	r24, r30
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	1f 91       	pop	r17
 3da:	0f 91       	pop	r16
 3dc:	08 95       	ret

000003de <printf>:
 3de:	a0 e0       	ldi	r26, 0x00	; 0
 3e0:	b0 e0       	ldi	r27, 0x00	; 0
 3e2:	e5 ef       	ldi	r30, 0xF5	; 245
 3e4:	f1 e0       	ldi	r31, 0x01	; 1
 3e6:	0c 94 ea 05 	jmp	0xbd4	; 0xbd4 <__prologue_saves__+0x20>
 3ea:	ae 01       	movw	r20, r28
 3ec:	4b 5f       	subi	r20, 0xFB	; 251
 3ee:	5f 4f       	sbci	r21, 0xFF	; 255
 3f0:	fa 01       	movw	r30, r20
 3f2:	61 91       	ld	r22, Z+
 3f4:	71 91       	ld	r23, Z+
 3f6:	af 01       	movw	r20, r30
 3f8:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 3fc:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 400:	0e 94 05 02 	call	0x40a	; 0x40a <vfprintf>
 404:	e2 e0       	ldi	r30, 0x02	; 2
 406:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <__epilogue_restores__+0x20>

0000040a <vfprintf>:
 40a:	ab e0       	ldi	r26, 0x0B	; 11
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	eb e0       	ldi	r30, 0x0B	; 11
 410:	f2 e0       	ldi	r31, 0x02	; 2
 412:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <__prologue_saves__>
 416:	6c 01       	movw	r12, r24
 418:	7b 01       	movw	r14, r22
 41a:	8a 01       	movw	r16, r20
 41c:	fc 01       	movw	r30, r24
 41e:	17 82       	std	Z+7, r1	; 0x07
 420:	16 82       	std	Z+6, r1	; 0x06
 422:	83 81       	ldd	r24, Z+3	; 0x03
 424:	81 ff       	sbrs	r24, 1
 426:	cc c1       	rjmp	.+920    	; 0x7c0 <__stack+0x2c1>
 428:	ce 01       	movw	r24, r28
 42a:	01 96       	adiw	r24, 0x01	; 1
 42c:	3c 01       	movw	r6, r24
 42e:	f6 01       	movw	r30, r12
 430:	93 81       	ldd	r25, Z+3	; 0x03
 432:	f7 01       	movw	r30, r14
 434:	93 fd       	sbrc	r25, 3
 436:	85 91       	lpm	r24, Z+
 438:	93 ff       	sbrs	r25, 3
 43a:	81 91       	ld	r24, Z+
 43c:	7f 01       	movw	r14, r30
 43e:	88 23       	and	r24, r24
 440:	09 f4       	brne	.+2      	; 0x444 <vfprintf+0x3a>
 442:	ba c1       	rjmp	.+884    	; 0x7b8 <__stack+0x2b9>
 444:	85 32       	cpi	r24, 0x25	; 37
 446:	39 f4       	brne	.+14     	; 0x456 <vfprintf+0x4c>
 448:	93 fd       	sbrc	r25, 3
 44a:	85 91       	lpm	r24, Z+
 44c:	93 ff       	sbrs	r25, 3
 44e:	81 91       	ld	r24, Z+
 450:	7f 01       	movw	r14, r30
 452:	85 32       	cpi	r24, 0x25	; 37
 454:	29 f4       	brne	.+10     	; 0x460 <vfprintf+0x56>
 456:	b6 01       	movw	r22, r12
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 45e:	e7 cf       	rjmp	.-50     	; 0x42e <vfprintf+0x24>
 460:	91 2c       	mov	r9, r1
 462:	21 2c       	mov	r2, r1
 464:	31 2c       	mov	r3, r1
 466:	ff e1       	ldi	r31, 0x1F	; 31
 468:	f3 15       	cp	r31, r3
 46a:	d8 f0       	brcs	.+54     	; 0x4a2 <vfprintf+0x98>
 46c:	8b 32       	cpi	r24, 0x2B	; 43
 46e:	79 f0       	breq	.+30     	; 0x48e <vfprintf+0x84>
 470:	38 f4       	brcc	.+14     	; 0x480 <vfprintf+0x76>
 472:	80 32       	cpi	r24, 0x20	; 32
 474:	79 f0       	breq	.+30     	; 0x494 <vfprintf+0x8a>
 476:	83 32       	cpi	r24, 0x23	; 35
 478:	a1 f4       	brne	.+40     	; 0x4a2 <vfprintf+0x98>
 47a:	23 2d       	mov	r18, r3
 47c:	20 61       	ori	r18, 0x10	; 16
 47e:	1d c0       	rjmp	.+58     	; 0x4ba <vfprintf+0xb0>
 480:	8d 32       	cpi	r24, 0x2D	; 45
 482:	61 f0       	breq	.+24     	; 0x49c <vfprintf+0x92>
 484:	80 33       	cpi	r24, 0x30	; 48
 486:	69 f4       	brne	.+26     	; 0x4a2 <vfprintf+0x98>
 488:	23 2d       	mov	r18, r3
 48a:	21 60       	ori	r18, 0x01	; 1
 48c:	16 c0       	rjmp	.+44     	; 0x4ba <vfprintf+0xb0>
 48e:	83 2d       	mov	r24, r3
 490:	82 60       	ori	r24, 0x02	; 2
 492:	38 2e       	mov	r3, r24
 494:	e3 2d       	mov	r30, r3
 496:	e4 60       	ori	r30, 0x04	; 4
 498:	3e 2e       	mov	r3, r30
 49a:	2a c0       	rjmp	.+84     	; 0x4f0 <vfprintf+0xe6>
 49c:	f3 2d       	mov	r31, r3
 49e:	f8 60       	ori	r31, 0x08	; 8
 4a0:	1d c0       	rjmp	.+58     	; 0x4dc <vfprintf+0xd2>
 4a2:	37 fc       	sbrc	r3, 7
 4a4:	2d c0       	rjmp	.+90     	; 0x500 <__stack+0x1>
 4a6:	20 ed       	ldi	r18, 0xD0	; 208
 4a8:	28 0f       	add	r18, r24
 4aa:	2a 30       	cpi	r18, 0x0A	; 10
 4ac:	40 f0       	brcs	.+16     	; 0x4be <vfprintf+0xb4>
 4ae:	8e 32       	cpi	r24, 0x2E	; 46
 4b0:	b9 f4       	brne	.+46     	; 0x4e0 <vfprintf+0xd6>
 4b2:	36 fc       	sbrc	r3, 6
 4b4:	81 c1       	rjmp	.+770    	; 0x7b8 <__stack+0x2b9>
 4b6:	23 2d       	mov	r18, r3
 4b8:	20 64       	ori	r18, 0x40	; 64
 4ba:	32 2e       	mov	r3, r18
 4bc:	19 c0       	rjmp	.+50     	; 0x4f0 <vfprintf+0xe6>
 4be:	36 fe       	sbrs	r3, 6
 4c0:	06 c0       	rjmp	.+12     	; 0x4ce <vfprintf+0xc4>
 4c2:	8a e0       	ldi	r24, 0x0A	; 10
 4c4:	98 9e       	mul	r9, r24
 4c6:	20 0d       	add	r18, r0
 4c8:	11 24       	eor	r1, r1
 4ca:	92 2e       	mov	r9, r18
 4cc:	11 c0       	rjmp	.+34     	; 0x4f0 <vfprintf+0xe6>
 4ce:	ea e0       	ldi	r30, 0x0A	; 10
 4d0:	2e 9e       	mul	r2, r30
 4d2:	20 0d       	add	r18, r0
 4d4:	11 24       	eor	r1, r1
 4d6:	22 2e       	mov	r2, r18
 4d8:	f3 2d       	mov	r31, r3
 4da:	f0 62       	ori	r31, 0x20	; 32
 4dc:	3f 2e       	mov	r3, r31
 4de:	08 c0       	rjmp	.+16     	; 0x4f0 <vfprintf+0xe6>
 4e0:	8c 36       	cpi	r24, 0x6C	; 108
 4e2:	21 f4       	brne	.+8      	; 0x4ec <vfprintf+0xe2>
 4e4:	83 2d       	mov	r24, r3
 4e6:	80 68       	ori	r24, 0x80	; 128
 4e8:	38 2e       	mov	r3, r24
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <vfprintf+0xe6>
 4ec:	88 36       	cpi	r24, 0x68	; 104
 4ee:	41 f4       	brne	.+16     	; 0x500 <__stack+0x1>
 4f0:	f7 01       	movw	r30, r14
 4f2:	93 fd       	sbrc	r25, 3
 4f4:	85 91       	lpm	r24, Z+
 4f6:	93 ff       	sbrs	r25, 3
 4f8:	81 91       	ld	r24, Z+
 4fa:	7f 01       	movw	r14, r30
 4fc:	81 11       	cpse	r24, r1
 4fe:	b3 cf       	rjmp	.-154    	; 0x466 <vfprintf+0x5c>
 500:	98 2f       	mov	r25, r24
 502:	9f 7d       	andi	r25, 0xDF	; 223
 504:	95 54       	subi	r25, 0x45	; 69
 506:	93 30       	cpi	r25, 0x03	; 3
 508:	28 f4       	brcc	.+10     	; 0x514 <__stack+0x15>
 50a:	0c 5f       	subi	r16, 0xFC	; 252
 50c:	1f 4f       	sbci	r17, 0xFF	; 255
 50e:	9f e3       	ldi	r25, 0x3F	; 63
 510:	99 83       	std	Y+1, r25	; 0x01
 512:	0d c0       	rjmp	.+26     	; 0x52e <__stack+0x2f>
 514:	83 36       	cpi	r24, 0x63	; 99
 516:	31 f0       	breq	.+12     	; 0x524 <__stack+0x25>
 518:	83 37       	cpi	r24, 0x73	; 115
 51a:	71 f0       	breq	.+28     	; 0x538 <__stack+0x39>
 51c:	83 35       	cpi	r24, 0x53	; 83
 51e:	09 f0       	breq	.+2      	; 0x522 <__stack+0x23>
 520:	59 c0       	rjmp	.+178    	; 0x5d4 <__stack+0xd5>
 522:	21 c0       	rjmp	.+66     	; 0x566 <__stack+0x67>
 524:	f8 01       	movw	r30, r16
 526:	80 81       	ld	r24, Z
 528:	89 83       	std	Y+1, r24	; 0x01
 52a:	0e 5f       	subi	r16, 0xFE	; 254
 52c:	1f 4f       	sbci	r17, 0xFF	; 255
 52e:	88 24       	eor	r8, r8
 530:	83 94       	inc	r8
 532:	91 2c       	mov	r9, r1
 534:	53 01       	movw	r10, r6
 536:	13 c0       	rjmp	.+38     	; 0x55e <__stack+0x5f>
 538:	28 01       	movw	r4, r16
 53a:	f2 e0       	ldi	r31, 0x02	; 2
 53c:	4f 0e       	add	r4, r31
 53e:	51 1c       	adc	r5, r1
 540:	f8 01       	movw	r30, r16
 542:	a0 80       	ld	r10, Z
 544:	b1 80       	ldd	r11, Z+1	; 0x01
 546:	36 fe       	sbrs	r3, 6
 548:	03 c0       	rjmp	.+6      	; 0x550 <__stack+0x51>
 54a:	69 2d       	mov	r22, r9
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <__stack+0x55>
 550:	6f ef       	ldi	r22, 0xFF	; 255
 552:	7f ef       	ldi	r23, 0xFF	; 255
 554:	c5 01       	movw	r24, r10
 556:	0e 94 35 05 	call	0xa6a	; 0xa6a <strnlen>
 55a:	4c 01       	movw	r8, r24
 55c:	82 01       	movw	r16, r4
 55e:	f3 2d       	mov	r31, r3
 560:	ff 77       	andi	r31, 0x7F	; 127
 562:	3f 2e       	mov	r3, r31
 564:	16 c0       	rjmp	.+44     	; 0x592 <__stack+0x93>
 566:	28 01       	movw	r4, r16
 568:	22 e0       	ldi	r18, 0x02	; 2
 56a:	42 0e       	add	r4, r18
 56c:	51 1c       	adc	r5, r1
 56e:	f8 01       	movw	r30, r16
 570:	a0 80       	ld	r10, Z
 572:	b1 80       	ldd	r11, Z+1	; 0x01
 574:	36 fe       	sbrs	r3, 6
 576:	03 c0       	rjmp	.+6      	; 0x57e <__stack+0x7f>
 578:	69 2d       	mov	r22, r9
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	02 c0       	rjmp	.+4      	; 0x582 <__stack+0x83>
 57e:	6f ef       	ldi	r22, 0xFF	; 255
 580:	7f ef       	ldi	r23, 0xFF	; 255
 582:	c5 01       	movw	r24, r10
 584:	0e 94 23 05 	call	0xa46	; 0xa46 <strnlen_P>
 588:	4c 01       	movw	r8, r24
 58a:	f3 2d       	mov	r31, r3
 58c:	f0 68       	ori	r31, 0x80	; 128
 58e:	3f 2e       	mov	r3, r31
 590:	82 01       	movw	r16, r4
 592:	33 fc       	sbrc	r3, 3
 594:	1b c0       	rjmp	.+54     	; 0x5cc <__stack+0xcd>
 596:	82 2d       	mov	r24, r2
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	88 16       	cp	r8, r24
 59c:	99 06       	cpc	r9, r25
 59e:	b0 f4       	brcc	.+44     	; 0x5cc <__stack+0xcd>
 5a0:	b6 01       	movw	r22, r12
 5a2:	80 e2       	ldi	r24, 0x20	; 32
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 5aa:	2a 94       	dec	r2
 5ac:	f4 cf       	rjmp	.-24     	; 0x596 <__stack+0x97>
 5ae:	f5 01       	movw	r30, r10
 5b0:	37 fc       	sbrc	r3, 7
 5b2:	85 91       	lpm	r24, Z+
 5b4:	37 fe       	sbrs	r3, 7
 5b6:	81 91       	ld	r24, Z+
 5b8:	5f 01       	movw	r10, r30
 5ba:	b6 01       	movw	r22, r12
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 5c2:	21 10       	cpse	r2, r1
 5c4:	2a 94       	dec	r2
 5c6:	21 e0       	ldi	r18, 0x01	; 1
 5c8:	82 1a       	sub	r8, r18
 5ca:	91 08       	sbc	r9, r1
 5cc:	81 14       	cp	r8, r1
 5ce:	91 04       	cpc	r9, r1
 5d0:	71 f7       	brne	.-36     	; 0x5ae <__stack+0xaf>
 5d2:	e8 c0       	rjmp	.+464    	; 0x7a4 <__stack+0x2a5>
 5d4:	84 36       	cpi	r24, 0x64	; 100
 5d6:	11 f0       	breq	.+4      	; 0x5dc <__stack+0xdd>
 5d8:	89 36       	cpi	r24, 0x69	; 105
 5da:	41 f5       	brne	.+80     	; 0x62c <__stack+0x12d>
 5dc:	f8 01       	movw	r30, r16
 5de:	37 fe       	sbrs	r3, 7
 5e0:	07 c0       	rjmp	.+14     	; 0x5f0 <__stack+0xf1>
 5e2:	60 81       	ld	r22, Z
 5e4:	71 81       	ldd	r23, Z+1	; 0x01
 5e6:	82 81       	ldd	r24, Z+2	; 0x02
 5e8:	93 81       	ldd	r25, Z+3	; 0x03
 5ea:	0c 5f       	subi	r16, 0xFC	; 252
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	08 c0       	rjmp	.+16     	; 0x600 <__stack+0x101>
 5f0:	60 81       	ld	r22, Z
 5f2:	71 81       	ldd	r23, Z+1	; 0x01
 5f4:	07 2e       	mov	r0, r23
 5f6:	00 0c       	add	r0, r0
 5f8:	88 0b       	sbc	r24, r24
 5fa:	99 0b       	sbc	r25, r25
 5fc:	0e 5f       	subi	r16, 0xFE	; 254
 5fe:	1f 4f       	sbci	r17, 0xFF	; 255
 600:	f3 2d       	mov	r31, r3
 602:	ff 76       	andi	r31, 0x6F	; 111
 604:	3f 2e       	mov	r3, r31
 606:	97 ff       	sbrs	r25, 7
 608:	09 c0       	rjmp	.+18     	; 0x61c <__stack+0x11d>
 60a:	90 95       	com	r25
 60c:	80 95       	com	r24
 60e:	70 95       	com	r23
 610:	61 95       	neg	r22
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	8f 4f       	sbci	r24, 0xFF	; 255
 616:	9f 4f       	sbci	r25, 0xFF	; 255
 618:	f0 68       	ori	r31, 0x80	; 128
 61a:	3f 2e       	mov	r3, r31
 61c:	2a e0       	ldi	r18, 0x0A	; 10
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	a3 01       	movw	r20, r6
 622:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__ultoa_invert>
 626:	88 2e       	mov	r8, r24
 628:	86 18       	sub	r8, r6
 62a:	45 c0       	rjmp	.+138    	; 0x6b6 <__stack+0x1b7>
 62c:	85 37       	cpi	r24, 0x75	; 117
 62e:	31 f4       	brne	.+12     	; 0x63c <__stack+0x13d>
 630:	23 2d       	mov	r18, r3
 632:	2f 7e       	andi	r18, 0xEF	; 239
 634:	b2 2e       	mov	r11, r18
 636:	2a e0       	ldi	r18, 0x0A	; 10
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	25 c0       	rjmp	.+74     	; 0x686 <__stack+0x187>
 63c:	93 2d       	mov	r25, r3
 63e:	99 7f       	andi	r25, 0xF9	; 249
 640:	b9 2e       	mov	r11, r25
 642:	8f 36       	cpi	r24, 0x6F	; 111
 644:	c1 f0       	breq	.+48     	; 0x676 <__stack+0x177>
 646:	18 f4       	brcc	.+6      	; 0x64e <__stack+0x14f>
 648:	88 35       	cpi	r24, 0x58	; 88
 64a:	79 f0       	breq	.+30     	; 0x66a <__stack+0x16b>
 64c:	b5 c0       	rjmp	.+362    	; 0x7b8 <__stack+0x2b9>
 64e:	80 37       	cpi	r24, 0x70	; 112
 650:	19 f0       	breq	.+6      	; 0x658 <__stack+0x159>
 652:	88 37       	cpi	r24, 0x78	; 120
 654:	21 f0       	breq	.+8      	; 0x65e <__stack+0x15f>
 656:	b0 c0       	rjmp	.+352    	; 0x7b8 <__stack+0x2b9>
 658:	e9 2f       	mov	r30, r25
 65a:	e0 61       	ori	r30, 0x10	; 16
 65c:	be 2e       	mov	r11, r30
 65e:	b4 fe       	sbrs	r11, 4
 660:	0d c0       	rjmp	.+26     	; 0x67c <__stack+0x17d>
 662:	fb 2d       	mov	r31, r11
 664:	f4 60       	ori	r31, 0x04	; 4
 666:	bf 2e       	mov	r11, r31
 668:	09 c0       	rjmp	.+18     	; 0x67c <__stack+0x17d>
 66a:	34 fe       	sbrs	r3, 4
 66c:	0a c0       	rjmp	.+20     	; 0x682 <__stack+0x183>
 66e:	29 2f       	mov	r18, r25
 670:	26 60       	ori	r18, 0x06	; 6
 672:	b2 2e       	mov	r11, r18
 674:	06 c0       	rjmp	.+12     	; 0x682 <__stack+0x183>
 676:	28 e0       	ldi	r18, 0x08	; 8
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	05 c0       	rjmp	.+10     	; 0x686 <__stack+0x187>
 67c:	20 e1       	ldi	r18, 0x10	; 16
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	02 c0       	rjmp	.+4      	; 0x686 <__stack+0x187>
 682:	20 e1       	ldi	r18, 0x10	; 16
 684:	32 e0       	ldi	r19, 0x02	; 2
 686:	f8 01       	movw	r30, r16
 688:	b7 fe       	sbrs	r11, 7
 68a:	07 c0       	rjmp	.+14     	; 0x69a <__stack+0x19b>
 68c:	60 81       	ld	r22, Z
 68e:	71 81       	ldd	r23, Z+1	; 0x01
 690:	82 81       	ldd	r24, Z+2	; 0x02
 692:	93 81       	ldd	r25, Z+3	; 0x03
 694:	0c 5f       	subi	r16, 0xFC	; 252
 696:	1f 4f       	sbci	r17, 0xFF	; 255
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <__stack+0x1a7>
 69a:	60 81       	ld	r22, Z
 69c:	71 81       	ldd	r23, Z+1	; 0x01
 69e:	80 e0       	ldi	r24, 0x00	; 0
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 5f       	subi	r16, 0xFE	; 254
 6a4:	1f 4f       	sbci	r17, 0xFF	; 255
 6a6:	a3 01       	movw	r20, r6
 6a8:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__ultoa_invert>
 6ac:	88 2e       	mov	r8, r24
 6ae:	86 18       	sub	r8, r6
 6b0:	fb 2d       	mov	r31, r11
 6b2:	ff 77       	andi	r31, 0x7F	; 127
 6b4:	3f 2e       	mov	r3, r31
 6b6:	36 fe       	sbrs	r3, 6
 6b8:	0d c0       	rjmp	.+26     	; 0x6d4 <__stack+0x1d5>
 6ba:	23 2d       	mov	r18, r3
 6bc:	2e 7f       	andi	r18, 0xFE	; 254
 6be:	a2 2e       	mov	r10, r18
 6c0:	89 14       	cp	r8, r9
 6c2:	58 f4       	brcc	.+22     	; 0x6da <__stack+0x1db>
 6c4:	34 fe       	sbrs	r3, 4
 6c6:	0b c0       	rjmp	.+22     	; 0x6de <__stack+0x1df>
 6c8:	32 fc       	sbrc	r3, 2
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <__stack+0x1df>
 6cc:	83 2d       	mov	r24, r3
 6ce:	8e 7e       	andi	r24, 0xEE	; 238
 6d0:	a8 2e       	mov	r10, r24
 6d2:	05 c0       	rjmp	.+10     	; 0x6de <__stack+0x1df>
 6d4:	b8 2c       	mov	r11, r8
 6d6:	a3 2c       	mov	r10, r3
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <__stack+0x1e1>
 6da:	b8 2c       	mov	r11, r8
 6dc:	01 c0       	rjmp	.+2      	; 0x6e0 <__stack+0x1e1>
 6de:	b9 2c       	mov	r11, r9
 6e0:	a4 fe       	sbrs	r10, 4
 6e2:	0f c0       	rjmp	.+30     	; 0x702 <__stack+0x203>
 6e4:	fe 01       	movw	r30, r28
 6e6:	e8 0d       	add	r30, r8
 6e8:	f1 1d       	adc	r31, r1
 6ea:	80 81       	ld	r24, Z
 6ec:	80 33       	cpi	r24, 0x30	; 48
 6ee:	21 f4       	brne	.+8      	; 0x6f8 <__stack+0x1f9>
 6f0:	9a 2d       	mov	r25, r10
 6f2:	99 7e       	andi	r25, 0xE9	; 233
 6f4:	a9 2e       	mov	r10, r25
 6f6:	09 c0       	rjmp	.+18     	; 0x70a <__stack+0x20b>
 6f8:	a2 fe       	sbrs	r10, 2
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <__stack+0x209>
 6fc:	b3 94       	inc	r11
 6fe:	b3 94       	inc	r11
 700:	04 c0       	rjmp	.+8      	; 0x70a <__stack+0x20b>
 702:	8a 2d       	mov	r24, r10
 704:	86 78       	andi	r24, 0x86	; 134
 706:	09 f0       	breq	.+2      	; 0x70a <__stack+0x20b>
 708:	b3 94       	inc	r11
 70a:	a3 fc       	sbrc	r10, 3
 70c:	11 c0       	rjmp	.+34     	; 0x730 <__stack+0x231>
 70e:	a0 fe       	sbrs	r10, 0
 710:	06 c0       	rjmp	.+12     	; 0x71e <__stack+0x21f>
 712:	b2 14       	cp	r11, r2
 714:	88 f4       	brcc	.+34     	; 0x738 <__stack+0x239>
 716:	28 0c       	add	r2, r8
 718:	92 2c       	mov	r9, r2
 71a:	9b 18       	sub	r9, r11
 71c:	0e c0       	rjmp	.+28     	; 0x73a <__stack+0x23b>
 71e:	b2 14       	cp	r11, r2
 720:	60 f4       	brcc	.+24     	; 0x73a <__stack+0x23b>
 722:	b6 01       	movw	r22, r12
 724:	80 e2       	ldi	r24, 0x20	; 32
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 72c:	b3 94       	inc	r11
 72e:	f7 cf       	rjmp	.-18     	; 0x71e <__stack+0x21f>
 730:	b2 14       	cp	r11, r2
 732:	18 f4       	brcc	.+6      	; 0x73a <__stack+0x23b>
 734:	2b 18       	sub	r2, r11
 736:	02 c0       	rjmp	.+4      	; 0x73c <__stack+0x23d>
 738:	98 2c       	mov	r9, r8
 73a:	21 2c       	mov	r2, r1
 73c:	a4 fe       	sbrs	r10, 4
 73e:	10 c0       	rjmp	.+32     	; 0x760 <__stack+0x261>
 740:	b6 01       	movw	r22, r12
 742:	80 e3       	ldi	r24, 0x30	; 48
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 74a:	a2 fe       	sbrs	r10, 2
 74c:	17 c0       	rjmp	.+46     	; 0x77c <__stack+0x27d>
 74e:	a1 fc       	sbrc	r10, 1
 750:	03 c0       	rjmp	.+6      	; 0x758 <__stack+0x259>
 752:	88 e7       	ldi	r24, 0x78	; 120
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <__stack+0x25d>
 758:	88 e5       	ldi	r24, 0x58	; 88
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	b6 01       	movw	r22, r12
 75e:	0c c0       	rjmp	.+24     	; 0x778 <__stack+0x279>
 760:	8a 2d       	mov	r24, r10
 762:	86 78       	andi	r24, 0x86	; 134
 764:	59 f0       	breq	.+22     	; 0x77c <__stack+0x27d>
 766:	a1 fe       	sbrs	r10, 1
 768:	02 c0       	rjmp	.+4      	; 0x76e <__stack+0x26f>
 76a:	8b e2       	ldi	r24, 0x2B	; 43
 76c:	01 c0       	rjmp	.+2      	; 0x770 <__stack+0x271>
 76e:	80 e2       	ldi	r24, 0x20	; 32
 770:	a7 fc       	sbrc	r10, 7
 772:	8d e2       	ldi	r24, 0x2D	; 45
 774:	b6 01       	movw	r22, r12
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 77c:	89 14       	cp	r8, r9
 77e:	38 f4       	brcc	.+14     	; 0x78e <__stack+0x28f>
 780:	b6 01       	movw	r22, r12
 782:	80 e3       	ldi	r24, 0x30	; 48
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 78a:	9a 94       	dec	r9
 78c:	f7 cf       	rjmp	.-18     	; 0x77c <__stack+0x27d>
 78e:	8a 94       	dec	r8
 790:	f3 01       	movw	r30, r6
 792:	e8 0d       	add	r30, r8
 794:	f1 1d       	adc	r31, r1
 796:	80 81       	ld	r24, Z
 798:	b6 01       	movw	r22, r12
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 7a0:	81 10       	cpse	r8, r1
 7a2:	f5 cf       	rjmp	.-22     	; 0x78e <__stack+0x28f>
 7a4:	22 20       	and	r2, r2
 7a6:	09 f4       	brne	.+2      	; 0x7aa <__stack+0x2ab>
 7a8:	42 ce       	rjmp	.-892    	; 0x42e <vfprintf+0x24>
 7aa:	b6 01       	movw	r22, r12
 7ac:	80 e2       	ldi	r24, 0x20	; 32
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	0e 94 40 05 	call	0xa80	; 0xa80 <fputc>
 7b4:	2a 94       	dec	r2
 7b6:	f6 cf       	rjmp	.-20     	; 0x7a4 <__stack+0x2a5>
 7b8:	f6 01       	movw	r30, r12
 7ba:	86 81       	ldd	r24, Z+6	; 0x06
 7bc:	97 81       	ldd	r25, Z+7	; 0x07
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <__stack+0x2c5>
 7c0:	8f ef       	ldi	r24, 0xFF	; 255
 7c2:	9f ef       	ldi	r25, 0xFF	; 255
 7c4:	2b 96       	adiw	r28, 0x0b	; 11
 7c6:	e2 e1       	ldi	r30, 0x12	; 18
 7c8:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__epilogue_restores__>

000007cc <calloc>:
 7cc:	0f 93       	push	r16
 7ce:	1f 93       	push	r17
 7d0:	cf 93       	push	r28
 7d2:	df 93       	push	r29
 7d4:	86 9f       	mul	r24, r22
 7d6:	80 01       	movw	r16, r0
 7d8:	87 9f       	mul	r24, r23
 7da:	10 0d       	add	r17, r0
 7dc:	96 9f       	mul	r25, r22
 7de:	10 0d       	add	r17, r0
 7e0:	11 24       	eor	r1, r1
 7e2:	c8 01       	movw	r24, r16
 7e4:	0e 94 02 04 	call	0x804	; 0x804 <malloc>
 7e8:	ec 01       	movw	r28, r24
 7ea:	00 97       	sbiw	r24, 0x00	; 0
 7ec:	29 f0       	breq	.+10     	; 0x7f8 <calloc+0x2c>
 7ee:	a8 01       	movw	r20, r16
 7f0:	60 e0       	ldi	r22, 0x00	; 0
 7f2:	70 e0       	ldi	r23, 0x00	; 0
 7f4:	0e 94 2e 05 	call	0xa5c	; 0xa5c <memset>
 7f8:	ce 01       	movw	r24, r28
 7fa:	df 91       	pop	r29
 7fc:	cf 91       	pop	r28
 7fe:	1f 91       	pop	r17
 800:	0f 91       	pop	r16
 802:	08 95       	ret

00000804 <malloc>:
 804:	0f 93       	push	r16
 806:	1f 93       	push	r17
 808:	cf 93       	push	r28
 80a:	df 93       	push	r29
 80c:	82 30       	cpi	r24, 0x02	; 2
 80e:	91 05       	cpc	r25, r1
 810:	10 f4       	brcc	.+4      	; 0x816 <malloc+0x12>
 812:	82 e0       	ldi	r24, 0x02	; 2
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	e0 91 49 01 	lds	r30, 0x0149	; 0x800149 <__flp>
 81a:	f0 91 4a 01 	lds	r31, 0x014A	; 0x80014a <__flp+0x1>
 81e:	20 e0       	ldi	r18, 0x00	; 0
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	a0 e0       	ldi	r26, 0x00	; 0
 824:	b0 e0       	ldi	r27, 0x00	; 0
 826:	30 97       	sbiw	r30, 0x00	; 0
 828:	19 f1       	breq	.+70     	; 0x870 <malloc+0x6c>
 82a:	40 81       	ld	r20, Z
 82c:	51 81       	ldd	r21, Z+1	; 0x01
 82e:	02 81       	ldd	r16, Z+2	; 0x02
 830:	13 81       	ldd	r17, Z+3	; 0x03
 832:	48 17       	cp	r20, r24
 834:	59 07       	cpc	r21, r25
 836:	c8 f0       	brcs	.+50     	; 0x86a <malloc+0x66>
 838:	84 17       	cp	r24, r20
 83a:	95 07       	cpc	r25, r21
 83c:	69 f4       	brne	.+26     	; 0x858 <malloc+0x54>
 83e:	10 97       	sbiw	r26, 0x00	; 0
 840:	31 f0       	breq	.+12     	; 0x84e <malloc+0x4a>
 842:	12 96       	adiw	r26, 0x02	; 2
 844:	0c 93       	st	X, r16
 846:	12 97       	sbiw	r26, 0x02	; 2
 848:	13 96       	adiw	r26, 0x03	; 3
 84a:	1c 93       	st	X, r17
 84c:	27 c0       	rjmp	.+78     	; 0x89c <malloc+0x98>
 84e:	00 93 49 01 	sts	0x0149, r16	; 0x800149 <__flp>
 852:	10 93 4a 01 	sts	0x014A, r17	; 0x80014a <__flp+0x1>
 856:	22 c0       	rjmp	.+68     	; 0x89c <malloc+0x98>
 858:	21 15       	cp	r18, r1
 85a:	31 05       	cpc	r19, r1
 85c:	19 f0       	breq	.+6      	; 0x864 <malloc+0x60>
 85e:	42 17       	cp	r20, r18
 860:	53 07       	cpc	r21, r19
 862:	18 f4       	brcc	.+6      	; 0x86a <malloc+0x66>
 864:	9a 01       	movw	r18, r20
 866:	bd 01       	movw	r22, r26
 868:	ef 01       	movw	r28, r30
 86a:	df 01       	movw	r26, r30
 86c:	f8 01       	movw	r30, r16
 86e:	db cf       	rjmp	.-74     	; 0x826 <malloc+0x22>
 870:	21 15       	cp	r18, r1
 872:	31 05       	cpc	r19, r1
 874:	f9 f0       	breq	.+62     	; 0x8b4 <malloc+0xb0>
 876:	28 1b       	sub	r18, r24
 878:	39 0b       	sbc	r19, r25
 87a:	24 30       	cpi	r18, 0x04	; 4
 87c:	31 05       	cpc	r19, r1
 87e:	80 f4       	brcc	.+32     	; 0x8a0 <malloc+0x9c>
 880:	8a 81       	ldd	r24, Y+2	; 0x02
 882:	9b 81       	ldd	r25, Y+3	; 0x03
 884:	61 15       	cp	r22, r1
 886:	71 05       	cpc	r23, r1
 888:	21 f0       	breq	.+8      	; 0x892 <malloc+0x8e>
 88a:	fb 01       	movw	r30, r22
 88c:	93 83       	std	Z+3, r25	; 0x03
 88e:	82 83       	std	Z+2, r24	; 0x02
 890:	04 c0       	rjmp	.+8      	; 0x89a <malloc+0x96>
 892:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <__flp+0x1>
 896:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <__flp>
 89a:	fe 01       	movw	r30, r28
 89c:	32 96       	adiw	r30, 0x02	; 2
 89e:	44 c0       	rjmp	.+136    	; 0x928 <malloc+0x124>
 8a0:	fe 01       	movw	r30, r28
 8a2:	e2 0f       	add	r30, r18
 8a4:	f3 1f       	adc	r31, r19
 8a6:	81 93       	st	Z+, r24
 8a8:	91 93       	st	Z+, r25
 8aa:	22 50       	subi	r18, 0x02	; 2
 8ac:	31 09       	sbc	r19, r1
 8ae:	39 83       	std	Y+1, r19	; 0x01
 8b0:	28 83       	st	Y, r18
 8b2:	3a c0       	rjmp	.+116    	; 0x928 <malloc+0x124>
 8b4:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 8b8:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 8bc:	23 2b       	or	r18, r19
 8be:	41 f4       	brne	.+16     	; 0x8d0 <malloc+0xcc>
 8c0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 8c4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 8c8:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <__brkval+0x1>
 8cc:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <__brkval>
 8d0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8d4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8d8:	21 15       	cp	r18, r1
 8da:	31 05       	cpc	r19, r1
 8dc:	41 f4       	brne	.+16     	; 0x8ee <malloc+0xea>
 8de:	2d b7       	in	r18, 0x3d	; 61
 8e0:	3e b7       	in	r19, 0x3e	; 62
 8e2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 8e6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 8ea:	24 1b       	sub	r18, r20
 8ec:	35 0b       	sbc	r19, r21
 8ee:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <__brkval>
 8f2:	f0 91 48 01 	lds	r31, 0x0148	; 0x800148 <__brkval+0x1>
 8f6:	e2 17       	cp	r30, r18
 8f8:	f3 07       	cpc	r31, r19
 8fa:	a0 f4       	brcc	.+40     	; 0x924 <malloc+0x120>
 8fc:	2e 1b       	sub	r18, r30
 8fe:	3f 0b       	sbc	r19, r31
 900:	28 17       	cp	r18, r24
 902:	39 07       	cpc	r19, r25
 904:	78 f0       	brcs	.+30     	; 0x924 <malloc+0x120>
 906:	ac 01       	movw	r20, r24
 908:	4e 5f       	subi	r20, 0xFE	; 254
 90a:	5f 4f       	sbci	r21, 0xFF	; 255
 90c:	24 17       	cp	r18, r20
 90e:	35 07       	cpc	r19, r21
 910:	48 f0       	brcs	.+18     	; 0x924 <malloc+0x120>
 912:	4e 0f       	add	r20, r30
 914:	5f 1f       	adc	r21, r31
 916:	50 93 48 01 	sts	0x0148, r21	; 0x800148 <__brkval+0x1>
 91a:	40 93 47 01 	sts	0x0147, r20	; 0x800147 <__brkval>
 91e:	81 93       	st	Z+, r24
 920:	91 93       	st	Z+, r25
 922:	02 c0       	rjmp	.+4      	; 0x928 <malloc+0x124>
 924:	e0 e0       	ldi	r30, 0x00	; 0
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	cf 01       	movw	r24, r30
 92a:	df 91       	pop	r29
 92c:	cf 91       	pop	r28
 92e:	1f 91       	pop	r17
 930:	0f 91       	pop	r16
 932:	08 95       	ret

00000934 <free>:
 934:	cf 93       	push	r28
 936:	df 93       	push	r29
 938:	00 97       	sbiw	r24, 0x00	; 0
 93a:	09 f4       	brne	.+2      	; 0x93e <free+0xa>
 93c:	81 c0       	rjmp	.+258    	; 0xa40 <free+0x10c>
 93e:	fc 01       	movw	r30, r24
 940:	32 97       	sbiw	r30, 0x02	; 2
 942:	13 82       	std	Z+3, r1	; 0x03
 944:	12 82       	std	Z+2, r1	; 0x02
 946:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <__flp>
 94a:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <__flp+0x1>
 94e:	10 97       	sbiw	r26, 0x00	; 0
 950:	81 f4       	brne	.+32     	; 0x972 <free+0x3e>
 952:	20 81       	ld	r18, Z
 954:	31 81       	ldd	r19, Z+1	; 0x01
 956:	82 0f       	add	r24, r18
 958:	93 1f       	adc	r25, r19
 95a:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 95e:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 962:	28 17       	cp	r18, r24
 964:	39 07       	cpc	r19, r25
 966:	51 f5       	brne	.+84     	; 0x9bc <free+0x88>
 968:	f0 93 48 01 	sts	0x0148, r31	; 0x800148 <__brkval+0x1>
 96c:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <__brkval>
 970:	67 c0       	rjmp	.+206    	; 0xa40 <free+0x10c>
 972:	ed 01       	movw	r28, r26
 974:	20 e0       	ldi	r18, 0x00	; 0
 976:	30 e0       	ldi	r19, 0x00	; 0
 978:	ce 17       	cp	r28, r30
 97a:	df 07       	cpc	r29, r31
 97c:	40 f4       	brcc	.+16     	; 0x98e <free+0x5a>
 97e:	4a 81       	ldd	r20, Y+2	; 0x02
 980:	5b 81       	ldd	r21, Y+3	; 0x03
 982:	9e 01       	movw	r18, r28
 984:	41 15       	cp	r20, r1
 986:	51 05       	cpc	r21, r1
 988:	f1 f0       	breq	.+60     	; 0x9c6 <free+0x92>
 98a:	ea 01       	movw	r28, r20
 98c:	f5 cf       	rjmp	.-22     	; 0x978 <free+0x44>
 98e:	d3 83       	std	Z+3, r29	; 0x03
 990:	c2 83       	std	Z+2, r28	; 0x02
 992:	40 81       	ld	r20, Z
 994:	51 81       	ldd	r21, Z+1	; 0x01
 996:	84 0f       	add	r24, r20
 998:	95 1f       	adc	r25, r21
 99a:	c8 17       	cp	r28, r24
 99c:	d9 07       	cpc	r29, r25
 99e:	59 f4       	brne	.+22     	; 0x9b6 <free+0x82>
 9a0:	88 81       	ld	r24, Y
 9a2:	99 81       	ldd	r25, Y+1	; 0x01
 9a4:	84 0f       	add	r24, r20
 9a6:	95 1f       	adc	r25, r21
 9a8:	02 96       	adiw	r24, 0x02	; 2
 9aa:	91 83       	std	Z+1, r25	; 0x01
 9ac:	80 83       	st	Z, r24
 9ae:	8a 81       	ldd	r24, Y+2	; 0x02
 9b0:	9b 81       	ldd	r25, Y+3	; 0x03
 9b2:	93 83       	std	Z+3, r25	; 0x03
 9b4:	82 83       	std	Z+2, r24	; 0x02
 9b6:	21 15       	cp	r18, r1
 9b8:	31 05       	cpc	r19, r1
 9ba:	29 f4       	brne	.+10     	; 0x9c6 <free+0x92>
 9bc:	f0 93 4a 01 	sts	0x014A, r31	; 0x80014a <__flp+0x1>
 9c0:	e0 93 49 01 	sts	0x0149, r30	; 0x800149 <__flp>
 9c4:	3d c0       	rjmp	.+122    	; 0xa40 <free+0x10c>
 9c6:	e9 01       	movw	r28, r18
 9c8:	fb 83       	std	Y+3, r31	; 0x03
 9ca:	ea 83       	std	Y+2, r30	; 0x02
 9cc:	49 91       	ld	r20, Y+
 9ce:	59 91       	ld	r21, Y+
 9d0:	c4 0f       	add	r28, r20
 9d2:	d5 1f       	adc	r29, r21
 9d4:	ec 17       	cp	r30, r28
 9d6:	fd 07       	cpc	r31, r29
 9d8:	61 f4       	brne	.+24     	; 0x9f2 <free+0xbe>
 9da:	80 81       	ld	r24, Z
 9dc:	91 81       	ldd	r25, Z+1	; 0x01
 9de:	84 0f       	add	r24, r20
 9e0:	95 1f       	adc	r25, r21
 9e2:	02 96       	adiw	r24, 0x02	; 2
 9e4:	e9 01       	movw	r28, r18
 9e6:	99 83       	std	Y+1, r25	; 0x01
 9e8:	88 83       	st	Y, r24
 9ea:	82 81       	ldd	r24, Z+2	; 0x02
 9ec:	93 81       	ldd	r25, Z+3	; 0x03
 9ee:	9b 83       	std	Y+3, r25	; 0x03
 9f0:	8a 83       	std	Y+2, r24	; 0x02
 9f2:	e0 e0       	ldi	r30, 0x00	; 0
 9f4:	f0 e0       	ldi	r31, 0x00	; 0
 9f6:	12 96       	adiw	r26, 0x02	; 2
 9f8:	8d 91       	ld	r24, X+
 9fa:	9c 91       	ld	r25, X
 9fc:	13 97       	sbiw	r26, 0x03	; 3
 9fe:	00 97       	sbiw	r24, 0x00	; 0
 a00:	19 f0       	breq	.+6      	; 0xa08 <free+0xd4>
 a02:	fd 01       	movw	r30, r26
 a04:	dc 01       	movw	r26, r24
 a06:	f7 cf       	rjmp	.-18     	; 0x9f6 <free+0xc2>
 a08:	8d 91       	ld	r24, X+
 a0a:	9c 91       	ld	r25, X
 a0c:	11 97       	sbiw	r26, 0x01	; 1
 a0e:	9d 01       	movw	r18, r26
 a10:	2e 5f       	subi	r18, 0xFE	; 254
 a12:	3f 4f       	sbci	r19, 0xFF	; 255
 a14:	82 0f       	add	r24, r18
 a16:	93 1f       	adc	r25, r19
 a18:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 a1c:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 a20:	28 17       	cp	r18, r24
 a22:	39 07       	cpc	r19, r25
 a24:	69 f4       	brne	.+26     	; 0xa40 <free+0x10c>
 a26:	30 97       	sbiw	r30, 0x00	; 0
 a28:	29 f4       	brne	.+10     	; 0xa34 <free+0x100>
 a2a:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__flp+0x1>
 a2e:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__flp>
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <free+0x104>
 a34:	13 82       	std	Z+3, r1	; 0x03
 a36:	12 82       	std	Z+2, r1	; 0x02
 a38:	b0 93 48 01 	sts	0x0148, r27	; 0x800148 <__brkval+0x1>
 a3c:	a0 93 47 01 	sts	0x0147, r26	; 0x800147 <__brkval>
 a40:	df 91       	pop	r29
 a42:	cf 91       	pop	r28
 a44:	08 95       	ret

00000a46 <strnlen_P>:
 a46:	fc 01       	movw	r30, r24
 a48:	05 90       	lpm	r0, Z+
 a4a:	61 50       	subi	r22, 0x01	; 1
 a4c:	70 40       	sbci	r23, 0x00	; 0
 a4e:	01 10       	cpse	r0, r1
 a50:	d8 f7       	brcc	.-10     	; 0xa48 <strnlen_P+0x2>
 a52:	80 95       	com	r24
 a54:	90 95       	com	r25
 a56:	8e 0f       	add	r24, r30
 a58:	9f 1f       	adc	r25, r31
 a5a:	08 95       	ret

00000a5c <memset>:
 a5c:	dc 01       	movw	r26, r24
 a5e:	01 c0       	rjmp	.+2      	; 0xa62 <memset+0x6>
 a60:	6d 93       	st	X+, r22
 a62:	41 50       	subi	r20, 0x01	; 1
 a64:	50 40       	sbci	r21, 0x00	; 0
 a66:	e0 f7       	brcc	.-8      	; 0xa60 <memset+0x4>
 a68:	08 95       	ret

00000a6a <strnlen>:
 a6a:	fc 01       	movw	r30, r24
 a6c:	61 50       	subi	r22, 0x01	; 1
 a6e:	70 40       	sbci	r23, 0x00	; 0
 a70:	01 90       	ld	r0, Z+
 a72:	01 10       	cpse	r0, r1
 a74:	d8 f7       	brcc	.-10     	; 0xa6c <strnlen+0x2>
 a76:	80 95       	com	r24
 a78:	90 95       	com	r25
 a7a:	8e 0f       	add	r24, r30
 a7c:	9f 1f       	adc	r25, r31
 a7e:	08 95       	ret

00000a80 <fputc>:
 a80:	0f 93       	push	r16
 a82:	1f 93       	push	r17
 a84:	cf 93       	push	r28
 a86:	df 93       	push	r29
 a88:	fb 01       	movw	r30, r22
 a8a:	23 81       	ldd	r18, Z+3	; 0x03
 a8c:	21 fd       	sbrc	r18, 1
 a8e:	03 c0       	rjmp	.+6      	; 0xa96 <fputc+0x16>
 a90:	8f ef       	ldi	r24, 0xFF	; 255
 a92:	9f ef       	ldi	r25, 0xFF	; 255
 a94:	2c c0       	rjmp	.+88     	; 0xaee <fputc+0x6e>
 a96:	22 ff       	sbrs	r18, 2
 a98:	16 c0       	rjmp	.+44     	; 0xac6 <fputc+0x46>
 a9a:	46 81       	ldd	r20, Z+6	; 0x06
 a9c:	57 81       	ldd	r21, Z+7	; 0x07
 a9e:	24 81       	ldd	r18, Z+4	; 0x04
 aa0:	35 81       	ldd	r19, Z+5	; 0x05
 aa2:	42 17       	cp	r20, r18
 aa4:	53 07       	cpc	r21, r19
 aa6:	44 f4       	brge	.+16     	; 0xab8 <fputc+0x38>
 aa8:	a0 81       	ld	r26, Z
 aaa:	b1 81       	ldd	r27, Z+1	; 0x01
 aac:	9d 01       	movw	r18, r26
 aae:	2f 5f       	subi	r18, 0xFF	; 255
 ab0:	3f 4f       	sbci	r19, 0xFF	; 255
 ab2:	31 83       	std	Z+1, r19	; 0x01
 ab4:	20 83       	st	Z, r18
 ab6:	8c 93       	st	X, r24
 ab8:	26 81       	ldd	r18, Z+6	; 0x06
 aba:	37 81       	ldd	r19, Z+7	; 0x07
 abc:	2f 5f       	subi	r18, 0xFF	; 255
 abe:	3f 4f       	sbci	r19, 0xFF	; 255
 ac0:	37 83       	std	Z+7, r19	; 0x07
 ac2:	26 83       	std	Z+6, r18	; 0x06
 ac4:	14 c0       	rjmp	.+40     	; 0xaee <fputc+0x6e>
 ac6:	8b 01       	movw	r16, r22
 ac8:	ec 01       	movw	r28, r24
 aca:	fb 01       	movw	r30, r22
 acc:	00 84       	ldd	r0, Z+8	; 0x08
 ace:	f1 85       	ldd	r31, Z+9	; 0x09
 ad0:	e0 2d       	mov	r30, r0
 ad2:	09 95       	icall
 ad4:	89 2b       	or	r24, r25
 ad6:	e1 f6       	brne	.-72     	; 0xa90 <fputc+0x10>
 ad8:	d8 01       	movw	r26, r16
 ada:	16 96       	adiw	r26, 0x06	; 6
 adc:	8d 91       	ld	r24, X+
 ade:	9c 91       	ld	r25, X
 ae0:	17 97       	sbiw	r26, 0x07	; 7
 ae2:	01 96       	adiw	r24, 0x01	; 1
 ae4:	17 96       	adiw	r26, 0x07	; 7
 ae6:	9c 93       	st	X, r25
 ae8:	8e 93       	st	-X, r24
 aea:	16 97       	sbiw	r26, 0x06	; 6
 aec:	ce 01       	movw	r24, r28
 aee:	df 91       	pop	r29
 af0:	cf 91       	pop	r28
 af2:	1f 91       	pop	r17
 af4:	0f 91       	pop	r16
 af6:	08 95       	ret

00000af8 <__ultoa_invert>:
 af8:	fa 01       	movw	r30, r20
 afa:	aa 27       	eor	r26, r26
 afc:	28 30       	cpi	r18, 0x08	; 8
 afe:	51 f1       	breq	.+84     	; 0xb54 <__ultoa_invert+0x5c>
 b00:	20 31       	cpi	r18, 0x10	; 16
 b02:	81 f1       	breq	.+96     	; 0xb64 <__ultoa_invert+0x6c>
 b04:	e8 94       	clt
 b06:	6f 93       	push	r22
 b08:	6e 7f       	andi	r22, 0xFE	; 254
 b0a:	6e 5f       	subi	r22, 0xFE	; 254
 b0c:	7f 4f       	sbci	r23, 0xFF	; 255
 b0e:	8f 4f       	sbci	r24, 0xFF	; 255
 b10:	9f 4f       	sbci	r25, 0xFF	; 255
 b12:	af 4f       	sbci	r26, 0xFF	; 255
 b14:	b1 e0       	ldi	r27, 0x01	; 1
 b16:	3e d0       	rcall	.+124    	; 0xb94 <__ultoa_invert+0x9c>
 b18:	b4 e0       	ldi	r27, 0x04	; 4
 b1a:	3c d0       	rcall	.+120    	; 0xb94 <__ultoa_invert+0x9c>
 b1c:	67 0f       	add	r22, r23
 b1e:	78 1f       	adc	r23, r24
 b20:	89 1f       	adc	r24, r25
 b22:	9a 1f       	adc	r25, r26
 b24:	a1 1d       	adc	r26, r1
 b26:	68 0f       	add	r22, r24
 b28:	79 1f       	adc	r23, r25
 b2a:	8a 1f       	adc	r24, r26
 b2c:	91 1d       	adc	r25, r1
 b2e:	a1 1d       	adc	r26, r1
 b30:	6a 0f       	add	r22, r26
 b32:	71 1d       	adc	r23, r1
 b34:	81 1d       	adc	r24, r1
 b36:	91 1d       	adc	r25, r1
 b38:	a1 1d       	adc	r26, r1
 b3a:	20 d0       	rcall	.+64     	; 0xb7c <__ultoa_invert+0x84>
 b3c:	09 f4       	brne	.+2      	; 0xb40 <__ultoa_invert+0x48>
 b3e:	68 94       	set
 b40:	3f 91       	pop	r19
 b42:	2a e0       	ldi	r18, 0x0A	; 10
 b44:	26 9f       	mul	r18, r22
 b46:	11 24       	eor	r1, r1
 b48:	30 19       	sub	r19, r0
 b4a:	30 5d       	subi	r19, 0xD0	; 208
 b4c:	31 93       	st	Z+, r19
 b4e:	de f6       	brtc	.-74     	; 0xb06 <__ultoa_invert+0xe>
 b50:	cf 01       	movw	r24, r30
 b52:	08 95       	ret
 b54:	46 2f       	mov	r20, r22
 b56:	47 70       	andi	r20, 0x07	; 7
 b58:	40 5d       	subi	r20, 0xD0	; 208
 b5a:	41 93       	st	Z+, r20
 b5c:	b3 e0       	ldi	r27, 0x03	; 3
 b5e:	0f d0       	rcall	.+30     	; 0xb7e <__ultoa_invert+0x86>
 b60:	c9 f7       	brne	.-14     	; 0xb54 <__ultoa_invert+0x5c>
 b62:	f6 cf       	rjmp	.-20     	; 0xb50 <__ultoa_invert+0x58>
 b64:	46 2f       	mov	r20, r22
 b66:	4f 70       	andi	r20, 0x0F	; 15
 b68:	40 5d       	subi	r20, 0xD0	; 208
 b6a:	4a 33       	cpi	r20, 0x3A	; 58
 b6c:	18 f0       	brcs	.+6      	; 0xb74 <__ultoa_invert+0x7c>
 b6e:	49 5d       	subi	r20, 0xD9	; 217
 b70:	31 fd       	sbrc	r19, 1
 b72:	40 52       	subi	r20, 0x20	; 32
 b74:	41 93       	st	Z+, r20
 b76:	02 d0       	rcall	.+4      	; 0xb7c <__ultoa_invert+0x84>
 b78:	a9 f7       	brne	.-22     	; 0xb64 <__ultoa_invert+0x6c>
 b7a:	ea cf       	rjmp	.-44     	; 0xb50 <__ultoa_invert+0x58>
 b7c:	b4 e0       	ldi	r27, 0x04	; 4
 b7e:	a6 95       	lsr	r26
 b80:	97 95       	ror	r25
 b82:	87 95       	ror	r24
 b84:	77 95       	ror	r23
 b86:	67 95       	ror	r22
 b88:	ba 95       	dec	r27
 b8a:	c9 f7       	brne	.-14     	; 0xb7e <__ultoa_invert+0x86>
 b8c:	00 97       	sbiw	r24, 0x00	; 0
 b8e:	61 05       	cpc	r22, r1
 b90:	71 05       	cpc	r23, r1
 b92:	08 95       	ret
 b94:	9b 01       	movw	r18, r22
 b96:	ac 01       	movw	r20, r24
 b98:	0a 2e       	mov	r0, r26
 b9a:	06 94       	lsr	r0
 b9c:	57 95       	ror	r21
 b9e:	47 95       	ror	r20
 ba0:	37 95       	ror	r19
 ba2:	27 95       	ror	r18
 ba4:	ba 95       	dec	r27
 ba6:	c9 f7       	brne	.-14     	; 0xb9a <__ultoa_invert+0xa2>
 ba8:	62 0f       	add	r22, r18
 baa:	73 1f       	adc	r23, r19
 bac:	84 1f       	adc	r24, r20
 bae:	95 1f       	adc	r25, r21
 bb0:	a0 1d       	adc	r26, r0
 bb2:	08 95       	ret

00000bb4 <__prologue_saves__>:
 bb4:	2f 92       	push	r2
 bb6:	3f 92       	push	r3
 bb8:	4f 92       	push	r4
 bba:	5f 92       	push	r5
 bbc:	6f 92       	push	r6
 bbe:	7f 92       	push	r7
 bc0:	8f 92       	push	r8
 bc2:	9f 92       	push	r9
 bc4:	af 92       	push	r10
 bc6:	bf 92       	push	r11
 bc8:	cf 92       	push	r12
 bca:	df 92       	push	r13
 bcc:	ef 92       	push	r14
 bce:	ff 92       	push	r15
 bd0:	0f 93       	push	r16
 bd2:	1f 93       	push	r17
 bd4:	cf 93       	push	r28
 bd6:	df 93       	push	r29
 bd8:	cd b7       	in	r28, 0x3d	; 61
 bda:	de b7       	in	r29, 0x3e	; 62
 bdc:	ca 1b       	sub	r28, r26
 bde:	db 0b       	sbc	r29, r27
 be0:	0f b6       	in	r0, 0x3f	; 63
 be2:	f8 94       	cli
 be4:	de bf       	out	0x3e, r29	; 62
 be6:	0f be       	out	0x3f, r0	; 63
 be8:	cd bf       	out	0x3d, r28	; 61
 bea:	09 94       	ijmp

00000bec <__epilogue_restores__>:
 bec:	2a 88       	ldd	r2, Y+18	; 0x12
 bee:	39 88       	ldd	r3, Y+17	; 0x11
 bf0:	48 88       	ldd	r4, Y+16	; 0x10
 bf2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bf4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bf6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bfa:	9b 84       	ldd	r9, Y+11	; 0x0b
 bfc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bfe:	b9 84       	ldd	r11, Y+9	; 0x09
 c00:	c8 84       	ldd	r12, Y+8	; 0x08
 c02:	df 80       	ldd	r13, Y+7	; 0x07
 c04:	ee 80       	ldd	r14, Y+6	; 0x06
 c06:	fd 80       	ldd	r15, Y+5	; 0x05
 c08:	0c 81       	ldd	r16, Y+4	; 0x04
 c0a:	1b 81       	ldd	r17, Y+3	; 0x03
 c0c:	aa 81       	ldd	r26, Y+2	; 0x02
 c0e:	b9 81       	ldd	r27, Y+1	; 0x01
 c10:	ce 0f       	add	r28, r30
 c12:	d1 1d       	adc	r29, r1
 c14:	0f b6       	in	r0, 0x3f	; 63
 c16:	f8 94       	cli
 c18:	de bf       	out	0x3e, r29	; 62
 c1a:	0f be       	out	0x3f, r0	; 63
 c1c:	cd bf       	out	0x3d, r28	; 61
 c1e:	ed 01       	movw	r28, r26
 c20:	08 95       	ret

00000c22 <_exit>:
 c22:	f8 94       	cli

00000c24 <__stop_program>:
 c24:	ff cf       	rjmp	.-2      	; 0xc24 <__stop_program>
