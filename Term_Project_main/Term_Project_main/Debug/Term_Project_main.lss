
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000c38  00000ccc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800150  00800150  00000d1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b95  00000000  00000000  00000f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e69  00000000  00000000  00002b31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f6a  00000000  00000000  0000399a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004b4  00000000  00000000  00004904  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f1  00000000  00000000  00004db8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cc4  00000000  00000000  000055a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  0000626d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e3       	ldi	r30, 0x38	; 56
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 35       	cpi	r26, 0x50	; 80
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e5       	ldi	r26, 0x50	; 80
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ab 35       	cpi	r26, 0x5B	; 91
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 81 00 	call	0x102	; 0x102 <main>
  a6:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <Int_INIT>:
  ce:	8b b7       	in	r24, 0x3b	; 59
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	8b bf       	out	0x3b, r24	; 59
  d4:	85 b7       	in	r24, 0x35	; 53
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	85 bf       	out	0x35, r24	; 53
  da:	85 b7       	in	r24, 0x35	; 53
  dc:	82 60       	ori	r24, 0x02	; 2
  de:	85 bf       	out	0x35, r24	; 53
  e0:	78 94       	sei
  e2:	08 95       	ret

000000e4 <__vector_1>:
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	8f 93       	push	r24
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
  f6:	8f 91       	pop	r24
  f8:	0f 90       	pop	r0
  fa:	0f be       	out	0x3f, r0	; 63
  fc:	0f 90       	pop	r0
  fe:	1f 90       	pop	r1
 100:	18 95       	reti

00000102 <main>:
#include "SPI/SPIdrv.h"
#include "MCP2515/MCP2515drv.h"

int main(void)
{
	USART_Init(MYUBRR);
 102:	8f e1       	ldi	r24, 0x1F	; 31
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 a0 01 	call	0x340	; 0x340 <USART_Init>
	XMEM_init();
 10a:	0e 94 91 01 	call	0x322	; 0x322 <XMEM_init>
	Int_INIT();
 10e:	0e 94 67 00 	call	0xce	; 0xce <Int_INIT>
	ADC_Init();
 112:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
	oled_init();
 116:	0e 94 32 01 	call	0x264	; 0x264 <oled_init>
	printf("her\n\r");
 11a:	8f e0       	ldi	r24, 0x0F	; 15
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	9f 93       	push	r25
 120:	8f 93       	push	r24
 122:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <printf>
	mcp2515_init();
 126:	0e 94 f6 00 	call	0x1ec	; 0x1ec <mcp2515_init>
	printf("men ikke her\n\r");
 12a:	86 e0       	ldi	r24, 0x06	; 6
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	9f 93       	push	r25
 130:	8f 93       	push	r24
 132:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <printf>
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
	adc_pos pos;
	adc_dir dir;
    while (1) 
    {	
		//spi_write_char('a');
		PORTB &= ~(1 << DD_SS); // Select CAN - controller
 13e:	88 b3       	in	r24, 0x18	; 24
 140:	8f 7e       	andi	r24, 0xEF	; 239
 142:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 144:	2f ef       	ldi	r18, 0xFF	; 255
 146:	8f e7       	ldi	r24, 0x7F	; 127
 148:	91 e0       	ldi	r25, 0x01	; 1
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <main+0x48>
 152:	00 c0       	rjmp	.+0      	; 0x154 <main+0x52>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0x54>
		_delay_ms(100);
		PORTB |= (1 << DD_SS); // Select CAN - controller
 156:	88 b3       	in	r24, 0x18	; 24
 158:	80 61       	ori	r24, 0x10	; 16
 15a:	88 bb       	out	0x18, r24	; 24
 15c:	2f ef       	ldi	r18, 0xFF	; 255
 15e:	8f e7       	ldi	r24, 0x7F	; 127
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	21 50       	subi	r18, 0x01	; 1
 164:	80 40       	sbci	r24, 0x00	; 0
 166:	90 40       	sbci	r25, 0x00	; 0
 168:	e1 f7       	brne	.-8      	; 0x162 <main+0x60>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <main+0x6a>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x6c>
 16e:	e7 cf       	rjmp	.-50     	; 0x13e <main+0x3c>

00000170 <mcp2515_read>:
    status = spi_read_char();
    DDR_SPI |= (1 << DD_SS); // Deselect CAN - controller

    return status;

}
 170:	cf 93       	push	r28
 172:	c8 2f       	mov	r28, r24
 174:	87 b3       	in	r24, 0x17	; 23
 176:	8f 7e       	andi	r24, 0xEF	; 239
 178:	87 bb       	out	0x17, r24	; 23
 17a:	83 e0       	ldi	r24, 0x03	; 3
 17c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
 180:	8c 2f       	mov	r24, r28
 182:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
 186:	0e 94 80 01 	call	0x300	; 0x300 <spi_read_char>
 18a:	97 b3       	in	r25, 0x17	; 23
 18c:	90 61       	ori	r25, 0x10	; 16
 18e:	97 bb       	out	0x17, r25	; 23
 190:	cf 91       	pop	r28
 192:	08 95       	ret

00000194 <mcp2515_reset>:
 194:	87 b3       	in	r24, 0x17	; 23
 196:	8f 7e       	andi	r24, 0xEF	; 239
 198:	87 bb       	out	0x17, r24	; 23
 19a:	80 ec       	ldi	r24, 0xC0	; 192
 19c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
 1a0:	87 b3       	in	r24, 0x17	; 23
 1a2:	80 61       	ori	r24, 0x10	; 16
 1a4:	87 bb       	out	0x17, r24	; 23
 1a6:	8f e3       	ldi	r24, 0x3F	; 63
 1a8:	9c e9       	ldi	r25, 0x9C	; 156
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <mcp2515_reset+0x16>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <mcp2515_reset+0x1c>
 1b0:	00 00       	nop
 1b2:	08 95       	ret

000001b4 <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
 1b4:	1f 93       	push	r17
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	18 2f       	mov	r17, r24
 1bc:	d6 2f       	mov	r29, r22
 1be:	c4 2f       	mov	r28, r20
    DDR_SPI &= ~(1 << DD_SS); // Select CAN - controller
 1c0:	87 b3       	in	r24, 0x17	; 23
 1c2:	8f 7e       	andi	r24, 0xEF	; 239
 1c4:	87 bb       	out	0x17, r24	; 23
    spi_write_char(MCP_BITMOD);   //Write read_status bit to SPI
 1c6:	85 e0       	ldi	r24, 0x05	; 5
 1c8:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
    spi_write_char(address); // Send address
 1cc:	81 2f       	mov	r24, r17
 1ce:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
    spi_write_char(mask); // Send mask
 1d2:	8d 2f       	mov	r24, r29
 1d4:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
    spi_write_char(data); // Send data
 1d8:	8c 2f       	mov	r24, r28
 1da:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <spi_write_char>
    DDR_SPI |= (1 << DD_SS); // Deselect CAN - controller
 1de:	87 b3       	in	r24, 0x17	; 23
 1e0:	80 61       	ori	r24, 0x10	; 16
 1e2:	87 bb       	out	0x17, r24	; 23
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	1f 91       	pop	r17
 1ea:	08 95       	ret

000001ec <mcp2515_init>:
#include "../SPI/SPIdrv.h"




uint8_t mcp2515_init(){
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
    uint8_t value;
	spi_init_master(); // Initialize SPI
 1f0:	0e 94 8a 01 	call	0x314	; 0x314 <spi_init_master>
    mcp2515_reset(); // end reset - command
 1f4:	0e 94 ca 00 	call	0x194	; 0x194 <mcp2515_reset>
    // Self - testS
    value = mcp2515_read(MCP_CANSTAT);//, &value);
 1f8:	8e e0       	ldi	r24, 0x0E	; 14
 1fa:	0e 94 b8 00 	call	0x170	; 0x170 <mcp2515_read>
 1fe:	d8 2f       	mov	r29, r24
 200:	c8 2f       	mov	r28, r24
 202:	c0 7e       	andi	r28, 0xE0	; 224
	printf("value: %d\n\r", (value & MODE_MASK));
 204:	1f 92       	push	r1
 206:	cf 93       	push	r28
 208:	85 e1       	ldi	r24, 0x15	; 21
 20a:	91 e0       	ldi	r25, 0x01	; 1
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <printf>
    if ((value & MODE_MASK) != MODE_CONFIG) {
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	c0 38       	cpi	r28, 0x80	; 128
 21e:	51 f0       	breq	.+20     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
        printf ("MCP2515 is NOT in config mode after reset !\n\r");
 220:	81 e2       	ldi	r24, 0x21	; 33
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	9f 93       	push	r25
 226:	8f 93       	push	r24
 228:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <printf>
    return 1;
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	12 c0       	rjmp	.+36     	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
    }
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_LOOPBACK);
 234:	40 e4       	ldi	r20, 0x40	; 64
 236:	60 ee       	ldi	r22, 0xE0	; 224
 238:	8f e0       	ldi	r24, 0x0F	; 15
 23a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_bit_modify>
	printf("value: %d\n\r", value);
 23e:	1f 92       	push	r1
 240:	df 93       	push	r29
 242:	85 e1       	ldi	r24, 0x15	; 21
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <printf>

    return 0;
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
 256:	80 e0       	ldi	r24, 0x00	; 0
}
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <oled_write_command>:
	ext_mem[0]= data;
}

void oled_write_data(uint8_t data){
	volatile char *ext_mem = (char *) OLED_DATA_ADDRESS;
	ext_mem[0]= data;
 25e:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xea5>
 262:	08 95       	ret

00000264 <oled_init>:
}

void oled_init(){
    //Set inits according to datasheet
    oled_write_command(0xae); // display off
 264:	8e ea       	ldi	r24, 0xAE	; 174
 266:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xa1); //segment remap
 26a:	81 ea       	ldi	r24, 0xA1	; 161
 26c:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xda); //common pads hardware: alternative
 270:	8a ed       	ldi	r24, 0xDA	; 218
 272:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x12);
 276:	82 e1       	ldi	r24, 0x12	; 18
 278:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xc8); //common output scan direction:com63~com0
 27c:	88 ec       	ldi	r24, 0xC8	; 200
 27e:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xa8); //multiplex ration mode:63
 282:	88 ea       	ldi	r24, 0xA8	; 168
 284:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x3f);
 288:	8f e3       	ldi	r24, 0x3F	; 63
 28a:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xd5); //display divide ratio/osc. freq. mode
 28e:	85 ed       	ldi	r24, 0xD5	; 213
 290:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x80);
 294:	80 e8       	ldi	r24, 0x80	; 128
 296:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x81); //contrast control
 29a:	81 e8       	ldi	r24, 0x81	; 129
 29c:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x50);
 2a0:	80 e5       	ldi	r24, 0x50	; 80
 2a2:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xd9); //set pre-charge period
 2a6:	89 ed       	ldi	r24, 0xD9	; 217
 2a8:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x21);
 2ac:	81 e2       	ldi	r24, 0x21	; 33
 2ae:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x20); //Set Memory Addressing Mode
 2b2:	80 e2       	ldi	r24, 0x20	; 32
 2b4:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x02);
 2b8:	82 e0       	ldi	r24, 0x02	; 2
 2ba:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xdb); //VCOM deselect level mode
 2be:	8b ed       	ldi	r24, 0xDB	; 219
 2c0:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x30);
 2c4:	80 e3       	ldi	r24, 0x30	; 48
 2c6:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xad); //master configuration
 2ca:	8d ea       	ldi	r24, 0xAD	; 173
 2cc:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0x00);
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xa4); //out follows RAM content
 2d6:	84 ea       	ldi	r24, 0xA4	; 164
 2d8:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xa6); //set normal display
 2dc:	86 ea       	ldi	r24, 0xA6	; 166
 2de:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
    oled_write_command(0xaf); // display on
 2e2:	8f ea       	ldi	r24, 0xAF	; 175
 2e4:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>

    //Set to page adressing mode
    oled_write_command(0x20);
 2e8:	80 e2       	ldi	r24, 0x20	; 32
 2ea:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
	oled_write_command(0b10);
 2ee:	82 e0       	ldi	r24, 0x02	; 2
 2f0:	0e 94 2f 01 	call	0x25e	; 0x25e <oled_write_command>
 2f4:	08 95       	ret

000002f6 <spi_write_char>:
	SPCR = (1<<SPE);
}
*/
void spi_write_char(char cData){
	char flushbuffer;
    SPDR = cData;
 2f6:	8f b9       	out	0x0f, r24	; 15
    //Wait for send to complete

	loop_until_bit_is_set(SPSR, SPIF);
 2f8:	77 9b       	sbis	0x0e, 7	; 14
 2fa:	fe cf       	rjmp	.-4      	; 0x2f8 <spi_write_char+0x2>
	flushbuffer = SPDR;
 2fc:	8f b1       	in	r24, 0x0f	; 15
 2fe:	08 95       	ret

00000300 <spi_read_char>:
}

char spi_read_char(){
    SPDR = 0xFF;
 300:	8f ef       	ldi	r24, 0xFF	; 255
 302:	8f b9       	out	0x0f, r24	; 15
	// Wait for reception to complete

    loop_until_bit_is_set(SPSR, SPIF);
 304:	77 9b       	sbis	0x0e, 7	; 14
 306:	fe cf       	rjmp	.-4      	; 0x304 <spi_read_char+0x4>
	// Return char in data register
	return SPDR;
 308:	8f b1       	in	r24, 0x0f	; 15

}
 30a:	08 95       	ret

0000030c <spi_set_ss_high>:

void spi_set_ss_high(){
    PORTB |= (1 << DD_SS);
 30c:	88 b3       	in	r24, 0x18	; 24
 30e:	80 61       	ori	r24, 0x10	; 16
 310:	88 bb       	out	0x18, r24	; 24
 312:	08 95       	ret

00000314 <spi_init_master>:
#include "SPIdrv.h"


void spi_init_master(){
    // Set MOSI and SCK - og SS - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
 314:	80 eb       	ldi	r24, 0xB0	; 176
 316:	87 bb       	out	0x17, r24	; 23
	//DDR_SPI &= ~(1<<DD_MISO);
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);//|(1<<SPIE);
 318:	81 e5       	ldi	r24, 0x51	; 81
 31a:	8d b9       	out	0x0d, r24	; 13
	//SPCR &= ~((1<<CPOL)|(1<<CPHA));
	spi_set_ss_high();
 31c:	0e 94 86 01 	call	0x30c	; 0x30c <spi_set_ss_high>
 320:	08 95       	ret

00000322 <XMEM_init>:
 322:	85 b7       	in	r24, 0x35	; 53
 324:	80 68       	ori	r24, 0x80	; 128
 326:	85 bf       	out	0x35, r24	; 53
 328:	80 b7       	in	r24, 0x30	; 48
 32a:	80 62       	ori	r24, 0x20	; 32
 32c:	80 bf       	out	0x30, r24	; 48
 32e:	08 95       	ret

00000330 <USART_Transmit>:
 330:	5d 9b       	sbis	0x0b, 5	; 11
 332:	fe cf       	rjmp	.-4      	; 0x330 <USART_Transmit>
 334:	8c b9       	out	0x0c, r24	; 12
 336:	08 95       	ret

00000338 <USART_Receive>:
 338:	5f 9b       	sbis	0x0b, 7	; 11
 33a:	fe cf       	rjmp	.-4      	; 0x338 <USART_Receive>
 33c:	8c b1       	in	r24, 0x0c	; 12
 33e:	08 95       	ret

00000340 <USART_Init>:
 340:	90 bd       	out	0x20, r25	; 32
 342:	89 b9       	out	0x09, r24	; 9
 344:	88 e1       	ldi	r24, 0x18	; 24
 346:	8a b9       	out	0x0a, r24	; 10
 348:	8e e8       	ldi	r24, 0x8E	; 142
 34a:	80 bd       	out	0x20, r24	; 32
 34c:	6c e9       	ldi	r22, 0x9C	; 156
 34e:	71 e0       	ldi	r23, 0x01	; 1
 350:	88 e9       	ldi	r24, 0x98	; 152
 352:	91 e0       	ldi	r25, 0x01	; 1
 354:	0e 94 ad 01 	call	0x35a	; 0x35a <fdevopen>
 358:	08 95       	ret

0000035a <fdevopen>:
 35a:	0f 93       	push	r16
 35c:	1f 93       	push	r17
 35e:	cf 93       	push	r28
 360:	df 93       	push	r29
 362:	00 97       	sbiw	r24, 0x00	; 0
 364:	31 f4       	brne	.+12     	; 0x372 <fdevopen+0x18>
 366:	61 15       	cp	r22, r1
 368:	71 05       	cpc	r23, r1
 36a:	19 f4       	brne	.+6      	; 0x372 <fdevopen+0x18>
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	3a c0       	rjmp	.+116    	; 0x3e6 <fdevopen+0x8c>
 372:	8b 01       	movw	r16, r22
 374:	ec 01       	movw	r28, r24
 376:	6e e0       	ldi	r22, 0x0E	; 14
 378:	70 e0       	ldi	r23, 0x00	; 0
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	0e 94 ef 03 	call	0x7de	; 0x7de <calloc>
 382:	fc 01       	movw	r30, r24
 384:	89 2b       	or	r24, r25
 386:	91 f3       	breq	.-28     	; 0x36c <fdevopen+0x12>
 388:	80 e8       	ldi	r24, 0x80	; 128
 38a:	83 83       	std	Z+3, r24	; 0x03
 38c:	01 15       	cp	r16, r1
 38e:	11 05       	cpc	r17, r1
 390:	71 f0       	breq	.+28     	; 0x3ae <fdevopen+0x54>
 392:	13 87       	std	Z+11, r17	; 0x0b
 394:	02 87       	std	Z+10, r16	; 0x0a
 396:	81 e8       	ldi	r24, 0x81	; 129
 398:	83 83       	std	Z+3, r24	; 0x03
 39a:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <__iob>
 39e:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <__iob+0x1>
 3a2:	89 2b       	or	r24, r25
 3a4:	21 f4       	brne	.+8      	; 0x3ae <fdevopen+0x54>
 3a6:	f0 93 52 01 	sts	0x0152, r31	; 0x800152 <__iob+0x1>
 3aa:	e0 93 51 01 	sts	0x0151, r30	; 0x800151 <__iob>
 3ae:	20 97       	sbiw	r28, 0x00	; 0
 3b0:	c9 f0       	breq	.+50     	; 0x3e4 <fdevopen+0x8a>
 3b2:	d1 87       	std	Z+9, r29	; 0x09
 3b4:	c0 87       	std	Z+8, r28	; 0x08
 3b6:	83 81       	ldd	r24, Z+3	; 0x03
 3b8:	82 60       	ori	r24, 0x02	; 2
 3ba:	83 83       	std	Z+3, r24	; 0x03
 3bc:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <__iob+0x2>
 3c0:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <__iob+0x3>
 3c4:	89 2b       	or	r24, r25
 3c6:	71 f4       	brne	.+28     	; 0x3e4 <fdevopen+0x8a>
 3c8:	f0 93 54 01 	sts	0x0154, r31	; 0x800154 <__iob+0x3>
 3cc:	e0 93 53 01 	sts	0x0153, r30	; 0x800153 <__iob+0x2>
 3d0:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <__iob+0x4>
 3d4:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <__iob+0x5>
 3d8:	89 2b       	or	r24, r25
 3da:	21 f4       	brne	.+8      	; 0x3e4 <fdevopen+0x8a>
 3dc:	f0 93 56 01 	sts	0x0156, r31	; 0x800156 <__iob+0x5>
 3e0:	e0 93 55 01 	sts	0x0155, r30	; 0x800155 <__iob+0x4>
 3e4:	cf 01       	movw	r24, r30
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <printf>:
 3f0:	a0 e0       	ldi	r26, 0x00	; 0
 3f2:	b0 e0       	ldi	r27, 0x00	; 0
 3f4:	ee ef       	ldi	r30, 0xFE	; 254
 3f6:	f1 e0       	ldi	r31, 0x01	; 1
 3f8:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <__prologue_saves__+0x20>
 3fc:	ae 01       	movw	r20, r28
 3fe:	4b 5f       	subi	r20, 0xFB	; 251
 400:	5f 4f       	sbci	r21, 0xFF	; 255
 402:	fa 01       	movw	r30, r20
 404:	61 91       	ld	r22, Z+
 406:	71 91       	ld	r23, Z+
 408:	af 01       	movw	r20, r30
 40a:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <__iob+0x2>
 40e:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <__iob+0x3>
 412:	0e 94 0e 02 	call	0x41c	; 0x41c <vfprintf>
 416:	e2 e0       	ldi	r30, 0x02	; 2
 418:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__epilogue_restores__+0x20>

0000041c <vfprintf>:
 41c:	ab e0       	ldi	r26, 0x0B	; 11
 41e:	b0 e0       	ldi	r27, 0x00	; 0
 420:	e4 e1       	ldi	r30, 0x14	; 20
 422:	f2 e0       	ldi	r31, 0x02	; 2
 424:	0c 94 e3 05 	jmp	0xbc6	; 0xbc6 <__prologue_saves__>
 428:	6c 01       	movw	r12, r24
 42a:	7b 01       	movw	r14, r22
 42c:	8a 01       	movw	r16, r20
 42e:	fc 01       	movw	r30, r24
 430:	17 82       	std	Z+7, r1	; 0x07
 432:	16 82       	std	Z+6, r1	; 0x06
 434:	83 81       	ldd	r24, Z+3	; 0x03
 436:	81 ff       	sbrs	r24, 1
 438:	cc c1       	rjmp	.+920    	; 0x7d2 <__stack+0x2d3>
 43a:	ce 01       	movw	r24, r28
 43c:	01 96       	adiw	r24, 0x01	; 1
 43e:	3c 01       	movw	r6, r24
 440:	f6 01       	movw	r30, r12
 442:	93 81       	ldd	r25, Z+3	; 0x03
 444:	f7 01       	movw	r30, r14
 446:	93 fd       	sbrc	r25, 3
 448:	85 91       	lpm	r24, Z+
 44a:	93 ff       	sbrs	r25, 3
 44c:	81 91       	ld	r24, Z+
 44e:	7f 01       	movw	r14, r30
 450:	88 23       	and	r24, r24
 452:	09 f4       	brne	.+2      	; 0x456 <vfprintf+0x3a>
 454:	ba c1       	rjmp	.+884    	; 0x7ca <__stack+0x2cb>
 456:	85 32       	cpi	r24, 0x25	; 37
 458:	39 f4       	brne	.+14     	; 0x468 <vfprintf+0x4c>
 45a:	93 fd       	sbrc	r25, 3
 45c:	85 91       	lpm	r24, Z+
 45e:	93 ff       	sbrs	r25, 3
 460:	81 91       	ld	r24, Z+
 462:	7f 01       	movw	r14, r30
 464:	85 32       	cpi	r24, 0x25	; 37
 466:	29 f4       	brne	.+10     	; 0x472 <vfprintf+0x56>
 468:	b6 01       	movw	r22, r12
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 470:	e7 cf       	rjmp	.-50     	; 0x440 <vfprintf+0x24>
 472:	91 2c       	mov	r9, r1
 474:	21 2c       	mov	r2, r1
 476:	31 2c       	mov	r3, r1
 478:	ff e1       	ldi	r31, 0x1F	; 31
 47a:	f3 15       	cp	r31, r3
 47c:	d8 f0       	brcs	.+54     	; 0x4b4 <vfprintf+0x98>
 47e:	8b 32       	cpi	r24, 0x2B	; 43
 480:	79 f0       	breq	.+30     	; 0x4a0 <vfprintf+0x84>
 482:	38 f4       	brcc	.+14     	; 0x492 <vfprintf+0x76>
 484:	80 32       	cpi	r24, 0x20	; 32
 486:	79 f0       	breq	.+30     	; 0x4a6 <vfprintf+0x8a>
 488:	83 32       	cpi	r24, 0x23	; 35
 48a:	a1 f4       	brne	.+40     	; 0x4b4 <vfprintf+0x98>
 48c:	23 2d       	mov	r18, r3
 48e:	20 61       	ori	r18, 0x10	; 16
 490:	1d c0       	rjmp	.+58     	; 0x4cc <vfprintf+0xb0>
 492:	8d 32       	cpi	r24, 0x2D	; 45
 494:	61 f0       	breq	.+24     	; 0x4ae <vfprintf+0x92>
 496:	80 33       	cpi	r24, 0x30	; 48
 498:	69 f4       	brne	.+26     	; 0x4b4 <vfprintf+0x98>
 49a:	23 2d       	mov	r18, r3
 49c:	21 60       	ori	r18, 0x01	; 1
 49e:	16 c0       	rjmp	.+44     	; 0x4cc <vfprintf+0xb0>
 4a0:	83 2d       	mov	r24, r3
 4a2:	82 60       	ori	r24, 0x02	; 2
 4a4:	38 2e       	mov	r3, r24
 4a6:	e3 2d       	mov	r30, r3
 4a8:	e4 60       	ori	r30, 0x04	; 4
 4aa:	3e 2e       	mov	r3, r30
 4ac:	2a c0       	rjmp	.+84     	; 0x502 <__stack+0x3>
 4ae:	f3 2d       	mov	r31, r3
 4b0:	f8 60       	ori	r31, 0x08	; 8
 4b2:	1d c0       	rjmp	.+58     	; 0x4ee <vfprintf+0xd2>
 4b4:	37 fc       	sbrc	r3, 7
 4b6:	2d c0       	rjmp	.+90     	; 0x512 <__stack+0x13>
 4b8:	20 ed       	ldi	r18, 0xD0	; 208
 4ba:	28 0f       	add	r18, r24
 4bc:	2a 30       	cpi	r18, 0x0A	; 10
 4be:	40 f0       	brcs	.+16     	; 0x4d0 <vfprintf+0xb4>
 4c0:	8e 32       	cpi	r24, 0x2E	; 46
 4c2:	b9 f4       	brne	.+46     	; 0x4f2 <vfprintf+0xd6>
 4c4:	36 fc       	sbrc	r3, 6
 4c6:	81 c1       	rjmp	.+770    	; 0x7ca <__stack+0x2cb>
 4c8:	23 2d       	mov	r18, r3
 4ca:	20 64       	ori	r18, 0x40	; 64
 4cc:	32 2e       	mov	r3, r18
 4ce:	19 c0       	rjmp	.+50     	; 0x502 <__stack+0x3>
 4d0:	36 fe       	sbrs	r3, 6
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <vfprintf+0xc4>
 4d4:	8a e0       	ldi	r24, 0x0A	; 10
 4d6:	98 9e       	mul	r9, r24
 4d8:	20 0d       	add	r18, r0
 4da:	11 24       	eor	r1, r1
 4dc:	92 2e       	mov	r9, r18
 4de:	11 c0       	rjmp	.+34     	; 0x502 <__stack+0x3>
 4e0:	ea e0       	ldi	r30, 0x0A	; 10
 4e2:	2e 9e       	mul	r2, r30
 4e4:	20 0d       	add	r18, r0
 4e6:	11 24       	eor	r1, r1
 4e8:	22 2e       	mov	r2, r18
 4ea:	f3 2d       	mov	r31, r3
 4ec:	f0 62       	ori	r31, 0x20	; 32
 4ee:	3f 2e       	mov	r3, r31
 4f0:	08 c0       	rjmp	.+16     	; 0x502 <__stack+0x3>
 4f2:	8c 36       	cpi	r24, 0x6C	; 108
 4f4:	21 f4       	brne	.+8      	; 0x4fe <vfprintf+0xe2>
 4f6:	83 2d       	mov	r24, r3
 4f8:	80 68       	ori	r24, 0x80	; 128
 4fa:	38 2e       	mov	r3, r24
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <__stack+0x3>
 4fe:	88 36       	cpi	r24, 0x68	; 104
 500:	41 f4       	brne	.+16     	; 0x512 <__stack+0x13>
 502:	f7 01       	movw	r30, r14
 504:	93 fd       	sbrc	r25, 3
 506:	85 91       	lpm	r24, Z+
 508:	93 ff       	sbrs	r25, 3
 50a:	81 91       	ld	r24, Z+
 50c:	7f 01       	movw	r14, r30
 50e:	81 11       	cpse	r24, r1
 510:	b3 cf       	rjmp	.-154    	; 0x478 <vfprintf+0x5c>
 512:	98 2f       	mov	r25, r24
 514:	9f 7d       	andi	r25, 0xDF	; 223
 516:	95 54       	subi	r25, 0x45	; 69
 518:	93 30       	cpi	r25, 0x03	; 3
 51a:	28 f4       	brcc	.+10     	; 0x526 <__stack+0x27>
 51c:	0c 5f       	subi	r16, 0xFC	; 252
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	9f e3       	ldi	r25, 0x3F	; 63
 522:	99 83       	std	Y+1, r25	; 0x01
 524:	0d c0       	rjmp	.+26     	; 0x540 <__stack+0x41>
 526:	83 36       	cpi	r24, 0x63	; 99
 528:	31 f0       	breq	.+12     	; 0x536 <__stack+0x37>
 52a:	83 37       	cpi	r24, 0x73	; 115
 52c:	71 f0       	breq	.+28     	; 0x54a <__stack+0x4b>
 52e:	83 35       	cpi	r24, 0x53	; 83
 530:	09 f0       	breq	.+2      	; 0x534 <__stack+0x35>
 532:	59 c0       	rjmp	.+178    	; 0x5e6 <__stack+0xe7>
 534:	21 c0       	rjmp	.+66     	; 0x578 <__stack+0x79>
 536:	f8 01       	movw	r30, r16
 538:	80 81       	ld	r24, Z
 53a:	89 83       	std	Y+1, r24	; 0x01
 53c:	0e 5f       	subi	r16, 0xFE	; 254
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	88 24       	eor	r8, r8
 542:	83 94       	inc	r8
 544:	91 2c       	mov	r9, r1
 546:	53 01       	movw	r10, r6
 548:	13 c0       	rjmp	.+38     	; 0x570 <__stack+0x71>
 54a:	28 01       	movw	r4, r16
 54c:	f2 e0       	ldi	r31, 0x02	; 2
 54e:	4f 0e       	add	r4, r31
 550:	51 1c       	adc	r5, r1
 552:	f8 01       	movw	r30, r16
 554:	a0 80       	ld	r10, Z
 556:	b1 80       	ldd	r11, Z+1	; 0x01
 558:	36 fe       	sbrs	r3, 6
 55a:	03 c0       	rjmp	.+6      	; 0x562 <__stack+0x63>
 55c:	69 2d       	mov	r22, r9
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	02 c0       	rjmp	.+4      	; 0x566 <__stack+0x67>
 562:	6f ef       	ldi	r22, 0xFF	; 255
 564:	7f ef       	ldi	r23, 0xFF	; 255
 566:	c5 01       	movw	r24, r10
 568:	0e 94 3e 05 	call	0xa7c	; 0xa7c <strnlen>
 56c:	4c 01       	movw	r8, r24
 56e:	82 01       	movw	r16, r4
 570:	f3 2d       	mov	r31, r3
 572:	ff 77       	andi	r31, 0x7F	; 127
 574:	3f 2e       	mov	r3, r31
 576:	16 c0       	rjmp	.+44     	; 0x5a4 <__stack+0xa5>
 578:	28 01       	movw	r4, r16
 57a:	22 e0       	ldi	r18, 0x02	; 2
 57c:	42 0e       	add	r4, r18
 57e:	51 1c       	adc	r5, r1
 580:	f8 01       	movw	r30, r16
 582:	a0 80       	ld	r10, Z
 584:	b1 80       	ldd	r11, Z+1	; 0x01
 586:	36 fe       	sbrs	r3, 6
 588:	03 c0       	rjmp	.+6      	; 0x590 <__stack+0x91>
 58a:	69 2d       	mov	r22, r9
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <__stack+0x95>
 590:	6f ef       	ldi	r22, 0xFF	; 255
 592:	7f ef       	ldi	r23, 0xFF	; 255
 594:	c5 01       	movw	r24, r10
 596:	0e 94 2c 05 	call	0xa58	; 0xa58 <strnlen_P>
 59a:	4c 01       	movw	r8, r24
 59c:	f3 2d       	mov	r31, r3
 59e:	f0 68       	ori	r31, 0x80	; 128
 5a0:	3f 2e       	mov	r3, r31
 5a2:	82 01       	movw	r16, r4
 5a4:	33 fc       	sbrc	r3, 3
 5a6:	1b c0       	rjmp	.+54     	; 0x5de <__stack+0xdf>
 5a8:	82 2d       	mov	r24, r2
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	88 16       	cp	r8, r24
 5ae:	99 06       	cpc	r9, r25
 5b0:	b0 f4       	brcc	.+44     	; 0x5de <__stack+0xdf>
 5b2:	b6 01       	movw	r22, r12
 5b4:	80 e2       	ldi	r24, 0x20	; 32
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 5bc:	2a 94       	dec	r2
 5be:	f4 cf       	rjmp	.-24     	; 0x5a8 <__stack+0xa9>
 5c0:	f5 01       	movw	r30, r10
 5c2:	37 fc       	sbrc	r3, 7
 5c4:	85 91       	lpm	r24, Z+
 5c6:	37 fe       	sbrs	r3, 7
 5c8:	81 91       	ld	r24, Z+
 5ca:	5f 01       	movw	r10, r30
 5cc:	b6 01       	movw	r22, r12
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 5d4:	21 10       	cpse	r2, r1
 5d6:	2a 94       	dec	r2
 5d8:	21 e0       	ldi	r18, 0x01	; 1
 5da:	82 1a       	sub	r8, r18
 5dc:	91 08       	sbc	r9, r1
 5de:	81 14       	cp	r8, r1
 5e0:	91 04       	cpc	r9, r1
 5e2:	71 f7       	brne	.-36     	; 0x5c0 <__stack+0xc1>
 5e4:	e8 c0       	rjmp	.+464    	; 0x7b6 <__stack+0x2b7>
 5e6:	84 36       	cpi	r24, 0x64	; 100
 5e8:	11 f0       	breq	.+4      	; 0x5ee <__stack+0xef>
 5ea:	89 36       	cpi	r24, 0x69	; 105
 5ec:	41 f5       	brne	.+80     	; 0x63e <__stack+0x13f>
 5ee:	f8 01       	movw	r30, r16
 5f0:	37 fe       	sbrs	r3, 7
 5f2:	07 c0       	rjmp	.+14     	; 0x602 <__stack+0x103>
 5f4:	60 81       	ld	r22, Z
 5f6:	71 81       	ldd	r23, Z+1	; 0x01
 5f8:	82 81       	ldd	r24, Z+2	; 0x02
 5fa:	93 81       	ldd	r25, Z+3	; 0x03
 5fc:	0c 5f       	subi	r16, 0xFC	; 252
 5fe:	1f 4f       	sbci	r17, 0xFF	; 255
 600:	08 c0       	rjmp	.+16     	; 0x612 <__stack+0x113>
 602:	60 81       	ld	r22, Z
 604:	71 81       	ldd	r23, Z+1	; 0x01
 606:	07 2e       	mov	r0, r23
 608:	00 0c       	add	r0, r0
 60a:	88 0b       	sbc	r24, r24
 60c:	99 0b       	sbc	r25, r25
 60e:	0e 5f       	subi	r16, 0xFE	; 254
 610:	1f 4f       	sbci	r17, 0xFF	; 255
 612:	f3 2d       	mov	r31, r3
 614:	ff 76       	andi	r31, 0x6F	; 111
 616:	3f 2e       	mov	r3, r31
 618:	97 ff       	sbrs	r25, 7
 61a:	09 c0       	rjmp	.+18     	; 0x62e <__stack+0x12f>
 61c:	90 95       	com	r25
 61e:	80 95       	com	r24
 620:	70 95       	com	r23
 622:	61 95       	neg	r22
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	8f 4f       	sbci	r24, 0xFF	; 255
 628:	9f 4f       	sbci	r25, 0xFF	; 255
 62a:	f0 68       	ori	r31, 0x80	; 128
 62c:	3f 2e       	mov	r3, r31
 62e:	2a e0       	ldi	r18, 0x0A	; 10
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	a3 01       	movw	r20, r6
 634:	0e 94 85 05 	call	0xb0a	; 0xb0a <__ultoa_invert>
 638:	88 2e       	mov	r8, r24
 63a:	86 18       	sub	r8, r6
 63c:	45 c0       	rjmp	.+138    	; 0x6c8 <__stack+0x1c9>
 63e:	85 37       	cpi	r24, 0x75	; 117
 640:	31 f4       	brne	.+12     	; 0x64e <__stack+0x14f>
 642:	23 2d       	mov	r18, r3
 644:	2f 7e       	andi	r18, 0xEF	; 239
 646:	b2 2e       	mov	r11, r18
 648:	2a e0       	ldi	r18, 0x0A	; 10
 64a:	30 e0       	ldi	r19, 0x00	; 0
 64c:	25 c0       	rjmp	.+74     	; 0x698 <__stack+0x199>
 64e:	93 2d       	mov	r25, r3
 650:	99 7f       	andi	r25, 0xF9	; 249
 652:	b9 2e       	mov	r11, r25
 654:	8f 36       	cpi	r24, 0x6F	; 111
 656:	c1 f0       	breq	.+48     	; 0x688 <__stack+0x189>
 658:	18 f4       	brcc	.+6      	; 0x660 <__stack+0x161>
 65a:	88 35       	cpi	r24, 0x58	; 88
 65c:	79 f0       	breq	.+30     	; 0x67c <__stack+0x17d>
 65e:	b5 c0       	rjmp	.+362    	; 0x7ca <__stack+0x2cb>
 660:	80 37       	cpi	r24, 0x70	; 112
 662:	19 f0       	breq	.+6      	; 0x66a <__stack+0x16b>
 664:	88 37       	cpi	r24, 0x78	; 120
 666:	21 f0       	breq	.+8      	; 0x670 <__stack+0x171>
 668:	b0 c0       	rjmp	.+352    	; 0x7ca <__stack+0x2cb>
 66a:	e9 2f       	mov	r30, r25
 66c:	e0 61       	ori	r30, 0x10	; 16
 66e:	be 2e       	mov	r11, r30
 670:	b4 fe       	sbrs	r11, 4
 672:	0d c0       	rjmp	.+26     	; 0x68e <__stack+0x18f>
 674:	fb 2d       	mov	r31, r11
 676:	f4 60       	ori	r31, 0x04	; 4
 678:	bf 2e       	mov	r11, r31
 67a:	09 c0       	rjmp	.+18     	; 0x68e <__stack+0x18f>
 67c:	34 fe       	sbrs	r3, 4
 67e:	0a c0       	rjmp	.+20     	; 0x694 <__stack+0x195>
 680:	29 2f       	mov	r18, r25
 682:	26 60       	ori	r18, 0x06	; 6
 684:	b2 2e       	mov	r11, r18
 686:	06 c0       	rjmp	.+12     	; 0x694 <__stack+0x195>
 688:	28 e0       	ldi	r18, 0x08	; 8
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	05 c0       	rjmp	.+10     	; 0x698 <__stack+0x199>
 68e:	20 e1       	ldi	r18, 0x10	; 16
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	02 c0       	rjmp	.+4      	; 0x698 <__stack+0x199>
 694:	20 e1       	ldi	r18, 0x10	; 16
 696:	32 e0       	ldi	r19, 0x02	; 2
 698:	f8 01       	movw	r30, r16
 69a:	b7 fe       	sbrs	r11, 7
 69c:	07 c0       	rjmp	.+14     	; 0x6ac <__stack+0x1ad>
 69e:	60 81       	ld	r22, Z
 6a0:	71 81       	ldd	r23, Z+1	; 0x01
 6a2:	82 81       	ldd	r24, Z+2	; 0x02
 6a4:	93 81       	ldd	r25, Z+3	; 0x03
 6a6:	0c 5f       	subi	r16, 0xFC	; 252
 6a8:	1f 4f       	sbci	r17, 0xFF	; 255
 6aa:	06 c0       	rjmp	.+12     	; 0x6b8 <__stack+0x1b9>
 6ac:	60 81       	ld	r22, Z
 6ae:	71 81       	ldd	r23, Z+1	; 0x01
 6b0:	80 e0       	ldi	r24, 0x00	; 0
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 5f       	subi	r16, 0xFE	; 254
 6b6:	1f 4f       	sbci	r17, 0xFF	; 255
 6b8:	a3 01       	movw	r20, r6
 6ba:	0e 94 85 05 	call	0xb0a	; 0xb0a <__ultoa_invert>
 6be:	88 2e       	mov	r8, r24
 6c0:	86 18       	sub	r8, r6
 6c2:	fb 2d       	mov	r31, r11
 6c4:	ff 77       	andi	r31, 0x7F	; 127
 6c6:	3f 2e       	mov	r3, r31
 6c8:	36 fe       	sbrs	r3, 6
 6ca:	0d c0       	rjmp	.+26     	; 0x6e6 <__stack+0x1e7>
 6cc:	23 2d       	mov	r18, r3
 6ce:	2e 7f       	andi	r18, 0xFE	; 254
 6d0:	a2 2e       	mov	r10, r18
 6d2:	89 14       	cp	r8, r9
 6d4:	58 f4       	brcc	.+22     	; 0x6ec <__stack+0x1ed>
 6d6:	34 fe       	sbrs	r3, 4
 6d8:	0b c0       	rjmp	.+22     	; 0x6f0 <__stack+0x1f1>
 6da:	32 fc       	sbrc	r3, 2
 6dc:	09 c0       	rjmp	.+18     	; 0x6f0 <__stack+0x1f1>
 6de:	83 2d       	mov	r24, r3
 6e0:	8e 7e       	andi	r24, 0xEE	; 238
 6e2:	a8 2e       	mov	r10, r24
 6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <__stack+0x1f1>
 6e6:	b8 2c       	mov	r11, r8
 6e8:	a3 2c       	mov	r10, r3
 6ea:	03 c0       	rjmp	.+6      	; 0x6f2 <__stack+0x1f3>
 6ec:	b8 2c       	mov	r11, r8
 6ee:	01 c0       	rjmp	.+2      	; 0x6f2 <__stack+0x1f3>
 6f0:	b9 2c       	mov	r11, r9
 6f2:	a4 fe       	sbrs	r10, 4
 6f4:	0f c0       	rjmp	.+30     	; 0x714 <__stack+0x215>
 6f6:	fe 01       	movw	r30, r28
 6f8:	e8 0d       	add	r30, r8
 6fa:	f1 1d       	adc	r31, r1
 6fc:	80 81       	ld	r24, Z
 6fe:	80 33       	cpi	r24, 0x30	; 48
 700:	21 f4       	brne	.+8      	; 0x70a <__stack+0x20b>
 702:	9a 2d       	mov	r25, r10
 704:	99 7e       	andi	r25, 0xE9	; 233
 706:	a9 2e       	mov	r10, r25
 708:	09 c0       	rjmp	.+18     	; 0x71c <__stack+0x21d>
 70a:	a2 fe       	sbrs	r10, 2
 70c:	06 c0       	rjmp	.+12     	; 0x71a <__stack+0x21b>
 70e:	b3 94       	inc	r11
 710:	b3 94       	inc	r11
 712:	04 c0       	rjmp	.+8      	; 0x71c <__stack+0x21d>
 714:	8a 2d       	mov	r24, r10
 716:	86 78       	andi	r24, 0x86	; 134
 718:	09 f0       	breq	.+2      	; 0x71c <__stack+0x21d>
 71a:	b3 94       	inc	r11
 71c:	a3 fc       	sbrc	r10, 3
 71e:	11 c0       	rjmp	.+34     	; 0x742 <__stack+0x243>
 720:	a0 fe       	sbrs	r10, 0
 722:	06 c0       	rjmp	.+12     	; 0x730 <__stack+0x231>
 724:	b2 14       	cp	r11, r2
 726:	88 f4       	brcc	.+34     	; 0x74a <__stack+0x24b>
 728:	28 0c       	add	r2, r8
 72a:	92 2c       	mov	r9, r2
 72c:	9b 18       	sub	r9, r11
 72e:	0e c0       	rjmp	.+28     	; 0x74c <__stack+0x24d>
 730:	b2 14       	cp	r11, r2
 732:	60 f4       	brcc	.+24     	; 0x74c <__stack+0x24d>
 734:	b6 01       	movw	r22, r12
 736:	80 e2       	ldi	r24, 0x20	; 32
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 73e:	b3 94       	inc	r11
 740:	f7 cf       	rjmp	.-18     	; 0x730 <__stack+0x231>
 742:	b2 14       	cp	r11, r2
 744:	18 f4       	brcc	.+6      	; 0x74c <__stack+0x24d>
 746:	2b 18       	sub	r2, r11
 748:	02 c0       	rjmp	.+4      	; 0x74e <__stack+0x24f>
 74a:	98 2c       	mov	r9, r8
 74c:	21 2c       	mov	r2, r1
 74e:	a4 fe       	sbrs	r10, 4
 750:	10 c0       	rjmp	.+32     	; 0x772 <__stack+0x273>
 752:	b6 01       	movw	r22, r12
 754:	80 e3       	ldi	r24, 0x30	; 48
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 75c:	a2 fe       	sbrs	r10, 2
 75e:	17 c0       	rjmp	.+46     	; 0x78e <__stack+0x28f>
 760:	a1 fc       	sbrc	r10, 1
 762:	03 c0       	rjmp	.+6      	; 0x76a <__stack+0x26b>
 764:	88 e7       	ldi	r24, 0x78	; 120
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	02 c0       	rjmp	.+4      	; 0x76e <__stack+0x26f>
 76a:	88 e5       	ldi	r24, 0x58	; 88
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	b6 01       	movw	r22, r12
 770:	0c c0       	rjmp	.+24     	; 0x78a <__stack+0x28b>
 772:	8a 2d       	mov	r24, r10
 774:	86 78       	andi	r24, 0x86	; 134
 776:	59 f0       	breq	.+22     	; 0x78e <__stack+0x28f>
 778:	a1 fe       	sbrs	r10, 1
 77a:	02 c0       	rjmp	.+4      	; 0x780 <__stack+0x281>
 77c:	8b e2       	ldi	r24, 0x2B	; 43
 77e:	01 c0       	rjmp	.+2      	; 0x782 <__stack+0x283>
 780:	80 e2       	ldi	r24, 0x20	; 32
 782:	a7 fc       	sbrc	r10, 7
 784:	8d e2       	ldi	r24, 0x2D	; 45
 786:	b6 01       	movw	r22, r12
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 78e:	89 14       	cp	r8, r9
 790:	38 f4       	brcc	.+14     	; 0x7a0 <__stack+0x2a1>
 792:	b6 01       	movw	r22, r12
 794:	80 e3       	ldi	r24, 0x30	; 48
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 79c:	9a 94       	dec	r9
 79e:	f7 cf       	rjmp	.-18     	; 0x78e <__stack+0x28f>
 7a0:	8a 94       	dec	r8
 7a2:	f3 01       	movw	r30, r6
 7a4:	e8 0d       	add	r30, r8
 7a6:	f1 1d       	adc	r31, r1
 7a8:	80 81       	ld	r24, Z
 7aa:	b6 01       	movw	r22, r12
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 7b2:	81 10       	cpse	r8, r1
 7b4:	f5 cf       	rjmp	.-22     	; 0x7a0 <__stack+0x2a1>
 7b6:	22 20       	and	r2, r2
 7b8:	09 f4       	brne	.+2      	; 0x7bc <__stack+0x2bd>
 7ba:	42 ce       	rjmp	.-892    	; 0x440 <vfprintf+0x24>
 7bc:	b6 01       	movw	r22, r12
 7be:	80 e2       	ldi	r24, 0x20	; 32
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	0e 94 49 05 	call	0xa92	; 0xa92 <fputc>
 7c6:	2a 94       	dec	r2
 7c8:	f6 cf       	rjmp	.-20     	; 0x7b6 <__stack+0x2b7>
 7ca:	f6 01       	movw	r30, r12
 7cc:	86 81       	ldd	r24, Z+6	; 0x06
 7ce:	97 81       	ldd	r25, Z+7	; 0x07
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <__stack+0x2d7>
 7d2:	8f ef       	ldi	r24, 0xFF	; 255
 7d4:	9f ef       	ldi	r25, 0xFF	; 255
 7d6:	2b 96       	adiw	r28, 0x0b	; 11
 7d8:	e2 e1       	ldi	r30, 0x12	; 18
 7da:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__epilogue_restores__>

000007de <calloc>:
 7de:	0f 93       	push	r16
 7e0:	1f 93       	push	r17
 7e2:	cf 93       	push	r28
 7e4:	df 93       	push	r29
 7e6:	86 9f       	mul	r24, r22
 7e8:	80 01       	movw	r16, r0
 7ea:	87 9f       	mul	r24, r23
 7ec:	10 0d       	add	r17, r0
 7ee:	96 9f       	mul	r25, r22
 7f0:	10 0d       	add	r17, r0
 7f2:	11 24       	eor	r1, r1
 7f4:	c8 01       	movw	r24, r16
 7f6:	0e 94 0b 04 	call	0x816	; 0x816 <malloc>
 7fa:	ec 01       	movw	r28, r24
 7fc:	00 97       	sbiw	r24, 0x00	; 0
 7fe:	29 f0       	breq	.+10     	; 0x80a <calloc+0x2c>
 800:	a8 01       	movw	r20, r16
 802:	60 e0       	ldi	r22, 0x00	; 0
 804:	70 e0       	ldi	r23, 0x00	; 0
 806:	0e 94 37 05 	call	0xa6e	; 0xa6e <memset>
 80a:	ce 01       	movw	r24, r28
 80c:	df 91       	pop	r29
 80e:	cf 91       	pop	r28
 810:	1f 91       	pop	r17
 812:	0f 91       	pop	r16
 814:	08 95       	ret

00000816 <malloc>:
 816:	0f 93       	push	r16
 818:	1f 93       	push	r17
 81a:	cf 93       	push	r28
 81c:	df 93       	push	r29
 81e:	82 30       	cpi	r24, 0x02	; 2
 820:	91 05       	cpc	r25, r1
 822:	10 f4       	brcc	.+4      	; 0x828 <malloc+0x12>
 824:	82 e0       	ldi	r24, 0x02	; 2
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	e0 91 59 01 	lds	r30, 0x0159	; 0x800159 <__flp>
 82c:	f0 91 5a 01 	lds	r31, 0x015A	; 0x80015a <__flp+0x1>
 830:	20 e0       	ldi	r18, 0x00	; 0
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	a0 e0       	ldi	r26, 0x00	; 0
 836:	b0 e0       	ldi	r27, 0x00	; 0
 838:	30 97       	sbiw	r30, 0x00	; 0
 83a:	19 f1       	breq	.+70     	; 0x882 <malloc+0x6c>
 83c:	40 81       	ld	r20, Z
 83e:	51 81       	ldd	r21, Z+1	; 0x01
 840:	02 81       	ldd	r16, Z+2	; 0x02
 842:	13 81       	ldd	r17, Z+3	; 0x03
 844:	48 17       	cp	r20, r24
 846:	59 07       	cpc	r21, r25
 848:	c8 f0       	brcs	.+50     	; 0x87c <malloc+0x66>
 84a:	84 17       	cp	r24, r20
 84c:	95 07       	cpc	r25, r21
 84e:	69 f4       	brne	.+26     	; 0x86a <malloc+0x54>
 850:	10 97       	sbiw	r26, 0x00	; 0
 852:	31 f0       	breq	.+12     	; 0x860 <malloc+0x4a>
 854:	12 96       	adiw	r26, 0x02	; 2
 856:	0c 93       	st	X, r16
 858:	12 97       	sbiw	r26, 0x02	; 2
 85a:	13 96       	adiw	r26, 0x03	; 3
 85c:	1c 93       	st	X, r17
 85e:	27 c0       	rjmp	.+78     	; 0x8ae <malloc+0x98>
 860:	00 93 59 01 	sts	0x0159, r16	; 0x800159 <__flp>
 864:	10 93 5a 01 	sts	0x015A, r17	; 0x80015a <__flp+0x1>
 868:	22 c0       	rjmp	.+68     	; 0x8ae <malloc+0x98>
 86a:	21 15       	cp	r18, r1
 86c:	31 05       	cpc	r19, r1
 86e:	19 f0       	breq	.+6      	; 0x876 <malloc+0x60>
 870:	42 17       	cp	r20, r18
 872:	53 07       	cpc	r21, r19
 874:	18 f4       	brcc	.+6      	; 0x87c <malloc+0x66>
 876:	9a 01       	movw	r18, r20
 878:	bd 01       	movw	r22, r26
 87a:	ef 01       	movw	r28, r30
 87c:	df 01       	movw	r26, r30
 87e:	f8 01       	movw	r30, r16
 880:	db cf       	rjmp	.-74     	; 0x838 <malloc+0x22>
 882:	21 15       	cp	r18, r1
 884:	31 05       	cpc	r19, r1
 886:	f9 f0       	breq	.+62     	; 0x8c6 <malloc+0xb0>
 888:	28 1b       	sub	r18, r24
 88a:	39 0b       	sbc	r19, r25
 88c:	24 30       	cpi	r18, 0x04	; 4
 88e:	31 05       	cpc	r19, r1
 890:	80 f4       	brcc	.+32     	; 0x8b2 <malloc+0x9c>
 892:	8a 81       	ldd	r24, Y+2	; 0x02
 894:	9b 81       	ldd	r25, Y+3	; 0x03
 896:	61 15       	cp	r22, r1
 898:	71 05       	cpc	r23, r1
 89a:	21 f0       	breq	.+8      	; 0x8a4 <malloc+0x8e>
 89c:	fb 01       	movw	r30, r22
 89e:	93 83       	std	Z+3, r25	; 0x03
 8a0:	82 83       	std	Z+2, r24	; 0x02
 8a2:	04 c0       	rjmp	.+8      	; 0x8ac <malloc+0x96>
 8a4:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <__flp+0x1>
 8a8:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <__flp>
 8ac:	fe 01       	movw	r30, r28
 8ae:	32 96       	adiw	r30, 0x02	; 2
 8b0:	44 c0       	rjmp	.+136    	; 0x93a <malloc+0x124>
 8b2:	fe 01       	movw	r30, r28
 8b4:	e2 0f       	add	r30, r18
 8b6:	f3 1f       	adc	r31, r19
 8b8:	81 93       	st	Z+, r24
 8ba:	91 93       	st	Z+, r25
 8bc:	22 50       	subi	r18, 0x02	; 2
 8be:	31 09       	sbc	r19, r1
 8c0:	39 83       	std	Y+1, r19	; 0x01
 8c2:	28 83       	st	Y, r18
 8c4:	3a c0       	rjmp	.+116    	; 0x93a <malloc+0x124>
 8c6:	20 91 57 01 	lds	r18, 0x0157	; 0x800157 <__brkval>
 8ca:	30 91 58 01 	lds	r19, 0x0158	; 0x800158 <__brkval+0x1>
 8ce:	23 2b       	or	r18, r19
 8d0:	41 f4       	brne	.+16     	; 0x8e2 <malloc+0xcc>
 8d2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 8d6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 8da:	30 93 58 01 	sts	0x0158, r19	; 0x800158 <__brkval+0x1>
 8de:	20 93 57 01 	sts	0x0157, r18	; 0x800157 <__brkval>
 8e2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8e6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8ea:	21 15       	cp	r18, r1
 8ec:	31 05       	cpc	r19, r1
 8ee:	41 f4       	brne	.+16     	; 0x900 <malloc+0xea>
 8f0:	2d b7       	in	r18, 0x3d	; 61
 8f2:	3e b7       	in	r19, 0x3e	; 62
 8f4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 8f8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 8fc:	24 1b       	sub	r18, r20
 8fe:	35 0b       	sbc	r19, r21
 900:	e0 91 57 01 	lds	r30, 0x0157	; 0x800157 <__brkval>
 904:	f0 91 58 01 	lds	r31, 0x0158	; 0x800158 <__brkval+0x1>
 908:	e2 17       	cp	r30, r18
 90a:	f3 07       	cpc	r31, r19
 90c:	a0 f4       	brcc	.+40     	; 0x936 <malloc+0x120>
 90e:	2e 1b       	sub	r18, r30
 910:	3f 0b       	sbc	r19, r31
 912:	28 17       	cp	r18, r24
 914:	39 07       	cpc	r19, r25
 916:	78 f0       	brcs	.+30     	; 0x936 <malloc+0x120>
 918:	ac 01       	movw	r20, r24
 91a:	4e 5f       	subi	r20, 0xFE	; 254
 91c:	5f 4f       	sbci	r21, 0xFF	; 255
 91e:	24 17       	cp	r18, r20
 920:	35 07       	cpc	r19, r21
 922:	48 f0       	brcs	.+18     	; 0x936 <malloc+0x120>
 924:	4e 0f       	add	r20, r30
 926:	5f 1f       	adc	r21, r31
 928:	50 93 58 01 	sts	0x0158, r21	; 0x800158 <__brkval+0x1>
 92c:	40 93 57 01 	sts	0x0157, r20	; 0x800157 <__brkval>
 930:	81 93       	st	Z+, r24
 932:	91 93       	st	Z+, r25
 934:	02 c0       	rjmp	.+4      	; 0x93a <malloc+0x124>
 936:	e0 e0       	ldi	r30, 0x00	; 0
 938:	f0 e0       	ldi	r31, 0x00	; 0
 93a:	cf 01       	movw	r24, r30
 93c:	df 91       	pop	r29
 93e:	cf 91       	pop	r28
 940:	1f 91       	pop	r17
 942:	0f 91       	pop	r16
 944:	08 95       	ret

00000946 <free>:
 946:	cf 93       	push	r28
 948:	df 93       	push	r29
 94a:	00 97       	sbiw	r24, 0x00	; 0
 94c:	09 f4       	brne	.+2      	; 0x950 <free+0xa>
 94e:	81 c0       	rjmp	.+258    	; 0xa52 <free+0x10c>
 950:	fc 01       	movw	r30, r24
 952:	32 97       	sbiw	r30, 0x02	; 2
 954:	13 82       	std	Z+3, r1	; 0x03
 956:	12 82       	std	Z+2, r1	; 0x02
 958:	a0 91 59 01 	lds	r26, 0x0159	; 0x800159 <__flp>
 95c:	b0 91 5a 01 	lds	r27, 0x015A	; 0x80015a <__flp+0x1>
 960:	10 97       	sbiw	r26, 0x00	; 0
 962:	81 f4       	brne	.+32     	; 0x984 <free+0x3e>
 964:	20 81       	ld	r18, Z
 966:	31 81       	ldd	r19, Z+1	; 0x01
 968:	82 0f       	add	r24, r18
 96a:	93 1f       	adc	r25, r19
 96c:	20 91 57 01 	lds	r18, 0x0157	; 0x800157 <__brkval>
 970:	30 91 58 01 	lds	r19, 0x0158	; 0x800158 <__brkval+0x1>
 974:	28 17       	cp	r18, r24
 976:	39 07       	cpc	r19, r25
 978:	51 f5       	brne	.+84     	; 0x9ce <free+0x88>
 97a:	f0 93 58 01 	sts	0x0158, r31	; 0x800158 <__brkval+0x1>
 97e:	e0 93 57 01 	sts	0x0157, r30	; 0x800157 <__brkval>
 982:	67 c0       	rjmp	.+206    	; 0xa52 <free+0x10c>
 984:	ed 01       	movw	r28, r26
 986:	20 e0       	ldi	r18, 0x00	; 0
 988:	30 e0       	ldi	r19, 0x00	; 0
 98a:	ce 17       	cp	r28, r30
 98c:	df 07       	cpc	r29, r31
 98e:	40 f4       	brcc	.+16     	; 0x9a0 <free+0x5a>
 990:	4a 81       	ldd	r20, Y+2	; 0x02
 992:	5b 81       	ldd	r21, Y+3	; 0x03
 994:	9e 01       	movw	r18, r28
 996:	41 15       	cp	r20, r1
 998:	51 05       	cpc	r21, r1
 99a:	f1 f0       	breq	.+60     	; 0x9d8 <free+0x92>
 99c:	ea 01       	movw	r28, r20
 99e:	f5 cf       	rjmp	.-22     	; 0x98a <free+0x44>
 9a0:	d3 83       	std	Z+3, r29	; 0x03
 9a2:	c2 83       	std	Z+2, r28	; 0x02
 9a4:	40 81       	ld	r20, Z
 9a6:	51 81       	ldd	r21, Z+1	; 0x01
 9a8:	84 0f       	add	r24, r20
 9aa:	95 1f       	adc	r25, r21
 9ac:	c8 17       	cp	r28, r24
 9ae:	d9 07       	cpc	r29, r25
 9b0:	59 f4       	brne	.+22     	; 0x9c8 <free+0x82>
 9b2:	88 81       	ld	r24, Y
 9b4:	99 81       	ldd	r25, Y+1	; 0x01
 9b6:	84 0f       	add	r24, r20
 9b8:	95 1f       	adc	r25, r21
 9ba:	02 96       	adiw	r24, 0x02	; 2
 9bc:	91 83       	std	Z+1, r25	; 0x01
 9be:	80 83       	st	Z, r24
 9c0:	8a 81       	ldd	r24, Y+2	; 0x02
 9c2:	9b 81       	ldd	r25, Y+3	; 0x03
 9c4:	93 83       	std	Z+3, r25	; 0x03
 9c6:	82 83       	std	Z+2, r24	; 0x02
 9c8:	21 15       	cp	r18, r1
 9ca:	31 05       	cpc	r19, r1
 9cc:	29 f4       	brne	.+10     	; 0x9d8 <free+0x92>
 9ce:	f0 93 5a 01 	sts	0x015A, r31	; 0x80015a <__flp+0x1>
 9d2:	e0 93 59 01 	sts	0x0159, r30	; 0x800159 <__flp>
 9d6:	3d c0       	rjmp	.+122    	; 0xa52 <free+0x10c>
 9d8:	e9 01       	movw	r28, r18
 9da:	fb 83       	std	Y+3, r31	; 0x03
 9dc:	ea 83       	std	Y+2, r30	; 0x02
 9de:	49 91       	ld	r20, Y+
 9e0:	59 91       	ld	r21, Y+
 9e2:	c4 0f       	add	r28, r20
 9e4:	d5 1f       	adc	r29, r21
 9e6:	ec 17       	cp	r30, r28
 9e8:	fd 07       	cpc	r31, r29
 9ea:	61 f4       	brne	.+24     	; 0xa04 <free+0xbe>
 9ec:	80 81       	ld	r24, Z
 9ee:	91 81       	ldd	r25, Z+1	; 0x01
 9f0:	84 0f       	add	r24, r20
 9f2:	95 1f       	adc	r25, r21
 9f4:	02 96       	adiw	r24, 0x02	; 2
 9f6:	e9 01       	movw	r28, r18
 9f8:	99 83       	std	Y+1, r25	; 0x01
 9fa:	88 83       	st	Y, r24
 9fc:	82 81       	ldd	r24, Z+2	; 0x02
 9fe:	93 81       	ldd	r25, Z+3	; 0x03
 a00:	9b 83       	std	Y+3, r25	; 0x03
 a02:	8a 83       	std	Y+2, r24	; 0x02
 a04:	e0 e0       	ldi	r30, 0x00	; 0
 a06:	f0 e0       	ldi	r31, 0x00	; 0
 a08:	12 96       	adiw	r26, 0x02	; 2
 a0a:	8d 91       	ld	r24, X+
 a0c:	9c 91       	ld	r25, X
 a0e:	13 97       	sbiw	r26, 0x03	; 3
 a10:	00 97       	sbiw	r24, 0x00	; 0
 a12:	19 f0       	breq	.+6      	; 0xa1a <free+0xd4>
 a14:	fd 01       	movw	r30, r26
 a16:	dc 01       	movw	r26, r24
 a18:	f7 cf       	rjmp	.-18     	; 0xa08 <free+0xc2>
 a1a:	8d 91       	ld	r24, X+
 a1c:	9c 91       	ld	r25, X
 a1e:	11 97       	sbiw	r26, 0x01	; 1
 a20:	9d 01       	movw	r18, r26
 a22:	2e 5f       	subi	r18, 0xFE	; 254
 a24:	3f 4f       	sbci	r19, 0xFF	; 255
 a26:	82 0f       	add	r24, r18
 a28:	93 1f       	adc	r25, r19
 a2a:	20 91 57 01 	lds	r18, 0x0157	; 0x800157 <__brkval>
 a2e:	30 91 58 01 	lds	r19, 0x0158	; 0x800158 <__brkval+0x1>
 a32:	28 17       	cp	r18, r24
 a34:	39 07       	cpc	r19, r25
 a36:	69 f4       	brne	.+26     	; 0xa52 <free+0x10c>
 a38:	30 97       	sbiw	r30, 0x00	; 0
 a3a:	29 f4       	brne	.+10     	; 0xa46 <free+0x100>
 a3c:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <__flp+0x1>
 a40:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <__flp>
 a44:	02 c0       	rjmp	.+4      	; 0xa4a <free+0x104>
 a46:	13 82       	std	Z+3, r1	; 0x03
 a48:	12 82       	std	Z+2, r1	; 0x02
 a4a:	b0 93 58 01 	sts	0x0158, r27	; 0x800158 <__brkval+0x1>
 a4e:	a0 93 57 01 	sts	0x0157, r26	; 0x800157 <__brkval>
 a52:	df 91       	pop	r29
 a54:	cf 91       	pop	r28
 a56:	08 95       	ret

00000a58 <strnlen_P>:
 a58:	fc 01       	movw	r30, r24
 a5a:	05 90       	lpm	r0, Z+
 a5c:	61 50       	subi	r22, 0x01	; 1
 a5e:	70 40       	sbci	r23, 0x00	; 0
 a60:	01 10       	cpse	r0, r1
 a62:	d8 f7       	brcc	.-10     	; 0xa5a <strnlen_P+0x2>
 a64:	80 95       	com	r24
 a66:	90 95       	com	r25
 a68:	8e 0f       	add	r24, r30
 a6a:	9f 1f       	adc	r25, r31
 a6c:	08 95       	ret

00000a6e <memset>:
 a6e:	dc 01       	movw	r26, r24
 a70:	01 c0       	rjmp	.+2      	; 0xa74 <memset+0x6>
 a72:	6d 93       	st	X+, r22
 a74:	41 50       	subi	r20, 0x01	; 1
 a76:	50 40       	sbci	r21, 0x00	; 0
 a78:	e0 f7       	brcc	.-8      	; 0xa72 <memset+0x4>
 a7a:	08 95       	ret

00000a7c <strnlen>:
 a7c:	fc 01       	movw	r30, r24
 a7e:	61 50       	subi	r22, 0x01	; 1
 a80:	70 40       	sbci	r23, 0x00	; 0
 a82:	01 90       	ld	r0, Z+
 a84:	01 10       	cpse	r0, r1
 a86:	d8 f7       	brcc	.-10     	; 0xa7e <strnlen+0x2>
 a88:	80 95       	com	r24
 a8a:	90 95       	com	r25
 a8c:	8e 0f       	add	r24, r30
 a8e:	9f 1f       	adc	r25, r31
 a90:	08 95       	ret

00000a92 <fputc>:
 a92:	0f 93       	push	r16
 a94:	1f 93       	push	r17
 a96:	cf 93       	push	r28
 a98:	df 93       	push	r29
 a9a:	fb 01       	movw	r30, r22
 a9c:	23 81       	ldd	r18, Z+3	; 0x03
 a9e:	21 fd       	sbrc	r18, 1
 aa0:	03 c0       	rjmp	.+6      	; 0xaa8 <fputc+0x16>
 aa2:	8f ef       	ldi	r24, 0xFF	; 255
 aa4:	9f ef       	ldi	r25, 0xFF	; 255
 aa6:	2c c0       	rjmp	.+88     	; 0xb00 <fputc+0x6e>
 aa8:	22 ff       	sbrs	r18, 2
 aaa:	16 c0       	rjmp	.+44     	; 0xad8 <fputc+0x46>
 aac:	46 81       	ldd	r20, Z+6	; 0x06
 aae:	57 81       	ldd	r21, Z+7	; 0x07
 ab0:	24 81       	ldd	r18, Z+4	; 0x04
 ab2:	35 81       	ldd	r19, Z+5	; 0x05
 ab4:	42 17       	cp	r20, r18
 ab6:	53 07       	cpc	r21, r19
 ab8:	44 f4       	brge	.+16     	; 0xaca <fputc+0x38>
 aba:	a0 81       	ld	r26, Z
 abc:	b1 81       	ldd	r27, Z+1	; 0x01
 abe:	9d 01       	movw	r18, r26
 ac0:	2f 5f       	subi	r18, 0xFF	; 255
 ac2:	3f 4f       	sbci	r19, 0xFF	; 255
 ac4:	31 83       	std	Z+1, r19	; 0x01
 ac6:	20 83       	st	Z, r18
 ac8:	8c 93       	st	X, r24
 aca:	26 81       	ldd	r18, Z+6	; 0x06
 acc:	37 81       	ldd	r19, Z+7	; 0x07
 ace:	2f 5f       	subi	r18, 0xFF	; 255
 ad0:	3f 4f       	sbci	r19, 0xFF	; 255
 ad2:	37 83       	std	Z+7, r19	; 0x07
 ad4:	26 83       	std	Z+6, r18	; 0x06
 ad6:	14 c0       	rjmp	.+40     	; 0xb00 <fputc+0x6e>
 ad8:	8b 01       	movw	r16, r22
 ada:	ec 01       	movw	r28, r24
 adc:	fb 01       	movw	r30, r22
 ade:	00 84       	ldd	r0, Z+8	; 0x08
 ae0:	f1 85       	ldd	r31, Z+9	; 0x09
 ae2:	e0 2d       	mov	r30, r0
 ae4:	09 95       	icall
 ae6:	89 2b       	or	r24, r25
 ae8:	e1 f6       	brne	.-72     	; 0xaa2 <fputc+0x10>
 aea:	d8 01       	movw	r26, r16
 aec:	16 96       	adiw	r26, 0x06	; 6
 aee:	8d 91       	ld	r24, X+
 af0:	9c 91       	ld	r25, X
 af2:	17 97       	sbiw	r26, 0x07	; 7
 af4:	01 96       	adiw	r24, 0x01	; 1
 af6:	17 96       	adiw	r26, 0x07	; 7
 af8:	9c 93       	st	X, r25
 afa:	8e 93       	st	-X, r24
 afc:	16 97       	sbiw	r26, 0x06	; 6
 afe:	ce 01       	movw	r24, r28
 b00:	df 91       	pop	r29
 b02:	cf 91       	pop	r28
 b04:	1f 91       	pop	r17
 b06:	0f 91       	pop	r16
 b08:	08 95       	ret

00000b0a <__ultoa_invert>:
 b0a:	fa 01       	movw	r30, r20
 b0c:	aa 27       	eor	r26, r26
 b0e:	28 30       	cpi	r18, 0x08	; 8
 b10:	51 f1       	breq	.+84     	; 0xb66 <__ultoa_invert+0x5c>
 b12:	20 31       	cpi	r18, 0x10	; 16
 b14:	81 f1       	breq	.+96     	; 0xb76 <__ultoa_invert+0x6c>
 b16:	e8 94       	clt
 b18:	6f 93       	push	r22
 b1a:	6e 7f       	andi	r22, 0xFE	; 254
 b1c:	6e 5f       	subi	r22, 0xFE	; 254
 b1e:	7f 4f       	sbci	r23, 0xFF	; 255
 b20:	8f 4f       	sbci	r24, 0xFF	; 255
 b22:	9f 4f       	sbci	r25, 0xFF	; 255
 b24:	af 4f       	sbci	r26, 0xFF	; 255
 b26:	b1 e0       	ldi	r27, 0x01	; 1
 b28:	3e d0       	rcall	.+124    	; 0xba6 <__ultoa_invert+0x9c>
 b2a:	b4 e0       	ldi	r27, 0x04	; 4
 b2c:	3c d0       	rcall	.+120    	; 0xba6 <__ultoa_invert+0x9c>
 b2e:	67 0f       	add	r22, r23
 b30:	78 1f       	adc	r23, r24
 b32:	89 1f       	adc	r24, r25
 b34:	9a 1f       	adc	r25, r26
 b36:	a1 1d       	adc	r26, r1
 b38:	68 0f       	add	r22, r24
 b3a:	79 1f       	adc	r23, r25
 b3c:	8a 1f       	adc	r24, r26
 b3e:	91 1d       	adc	r25, r1
 b40:	a1 1d       	adc	r26, r1
 b42:	6a 0f       	add	r22, r26
 b44:	71 1d       	adc	r23, r1
 b46:	81 1d       	adc	r24, r1
 b48:	91 1d       	adc	r25, r1
 b4a:	a1 1d       	adc	r26, r1
 b4c:	20 d0       	rcall	.+64     	; 0xb8e <__ultoa_invert+0x84>
 b4e:	09 f4       	brne	.+2      	; 0xb52 <__ultoa_invert+0x48>
 b50:	68 94       	set
 b52:	3f 91       	pop	r19
 b54:	2a e0       	ldi	r18, 0x0A	; 10
 b56:	26 9f       	mul	r18, r22
 b58:	11 24       	eor	r1, r1
 b5a:	30 19       	sub	r19, r0
 b5c:	30 5d       	subi	r19, 0xD0	; 208
 b5e:	31 93       	st	Z+, r19
 b60:	de f6       	brtc	.-74     	; 0xb18 <__ultoa_invert+0xe>
 b62:	cf 01       	movw	r24, r30
 b64:	08 95       	ret
 b66:	46 2f       	mov	r20, r22
 b68:	47 70       	andi	r20, 0x07	; 7
 b6a:	40 5d       	subi	r20, 0xD0	; 208
 b6c:	41 93       	st	Z+, r20
 b6e:	b3 e0       	ldi	r27, 0x03	; 3
 b70:	0f d0       	rcall	.+30     	; 0xb90 <__ultoa_invert+0x86>
 b72:	c9 f7       	brne	.-14     	; 0xb66 <__ultoa_invert+0x5c>
 b74:	f6 cf       	rjmp	.-20     	; 0xb62 <__ultoa_invert+0x58>
 b76:	46 2f       	mov	r20, r22
 b78:	4f 70       	andi	r20, 0x0F	; 15
 b7a:	40 5d       	subi	r20, 0xD0	; 208
 b7c:	4a 33       	cpi	r20, 0x3A	; 58
 b7e:	18 f0       	brcs	.+6      	; 0xb86 <__ultoa_invert+0x7c>
 b80:	49 5d       	subi	r20, 0xD9	; 217
 b82:	31 fd       	sbrc	r19, 1
 b84:	40 52       	subi	r20, 0x20	; 32
 b86:	41 93       	st	Z+, r20
 b88:	02 d0       	rcall	.+4      	; 0xb8e <__ultoa_invert+0x84>
 b8a:	a9 f7       	brne	.-22     	; 0xb76 <__ultoa_invert+0x6c>
 b8c:	ea cf       	rjmp	.-44     	; 0xb62 <__ultoa_invert+0x58>
 b8e:	b4 e0       	ldi	r27, 0x04	; 4
 b90:	a6 95       	lsr	r26
 b92:	97 95       	ror	r25
 b94:	87 95       	ror	r24
 b96:	77 95       	ror	r23
 b98:	67 95       	ror	r22
 b9a:	ba 95       	dec	r27
 b9c:	c9 f7       	brne	.-14     	; 0xb90 <__ultoa_invert+0x86>
 b9e:	00 97       	sbiw	r24, 0x00	; 0
 ba0:	61 05       	cpc	r22, r1
 ba2:	71 05       	cpc	r23, r1
 ba4:	08 95       	ret
 ba6:	9b 01       	movw	r18, r22
 ba8:	ac 01       	movw	r20, r24
 baa:	0a 2e       	mov	r0, r26
 bac:	06 94       	lsr	r0
 bae:	57 95       	ror	r21
 bb0:	47 95       	ror	r20
 bb2:	37 95       	ror	r19
 bb4:	27 95       	ror	r18
 bb6:	ba 95       	dec	r27
 bb8:	c9 f7       	brne	.-14     	; 0xbac <__ultoa_invert+0xa2>
 bba:	62 0f       	add	r22, r18
 bbc:	73 1f       	adc	r23, r19
 bbe:	84 1f       	adc	r24, r20
 bc0:	95 1f       	adc	r25, r21
 bc2:	a0 1d       	adc	r26, r0
 bc4:	08 95       	ret

00000bc6 <__prologue_saves__>:
 bc6:	2f 92       	push	r2
 bc8:	3f 92       	push	r3
 bca:	4f 92       	push	r4
 bcc:	5f 92       	push	r5
 bce:	6f 92       	push	r6
 bd0:	7f 92       	push	r7
 bd2:	8f 92       	push	r8
 bd4:	9f 92       	push	r9
 bd6:	af 92       	push	r10
 bd8:	bf 92       	push	r11
 bda:	cf 92       	push	r12
 bdc:	df 92       	push	r13
 bde:	ef 92       	push	r14
 be0:	ff 92       	push	r15
 be2:	0f 93       	push	r16
 be4:	1f 93       	push	r17
 be6:	cf 93       	push	r28
 be8:	df 93       	push	r29
 bea:	cd b7       	in	r28, 0x3d	; 61
 bec:	de b7       	in	r29, 0x3e	; 62
 bee:	ca 1b       	sub	r28, r26
 bf0:	db 0b       	sbc	r29, r27
 bf2:	0f b6       	in	r0, 0x3f	; 63
 bf4:	f8 94       	cli
 bf6:	de bf       	out	0x3e, r29	; 62
 bf8:	0f be       	out	0x3f, r0	; 63
 bfa:	cd bf       	out	0x3d, r28	; 61
 bfc:	09 94       	ijmp

00000bfe <__epilogue_restores__>:
 bfe:	2a 88       	ldd	r2, Y+18	; 0x12
 c00:	39 88       	ldd	r3, Y+17	; 0x11
 c02:	48 88       	ldd	r4, Y+16	; 0x10
 c04:	5f 84       	ldd	r5, Y+15	; 0x0f
 c06:	6e 84       	ldd	r6, Y+14	; 0x0e
 c08:	7d 84       	ldd	r7, Y+13	; 0x0d
 c0a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c0c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c0e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c10:	b9 84       	ldd	r11, Y+9	; 0x09
 c12:	c8 84       	ldd	r12, Y+8	; 0x08
 c14:	df 80       	ldd	r13, Y+7	; 0x07
 c16:	ee 80       	ldd	r14, Y+6	; 0x06
 c18:	fd 80       	ldd	r15, Y+5	; 0x05
 c1a:	0c 81       	ldd	r16, Y+4	; 0x04
 c1c:	1b 81       	ldd	r17, Y+3	; 0x03
 c1e:	aa 81       	ldd	r26, Y+2	; 0x02
 c20:	b9 81       	ldd	r27, Y+1	; 0x01
 c22:	ce 0f       	add	r28, r30
 c24:	d1 1d       	adc	r29, r1
 c26:	0f b6       	in	r0, 0x3f	; 63
 c28:	f8 94       	cli
 c2a:	de bf       	out	0x3e, r29	; 62
 c2c:	0f be       	out	0x3f, r0	; 63
 c2e:	cd bf       	out	0x3d, r28	; 61
 c30:	ed 01       	movw	r28, r26
 c32:	08 95       	ret

00000c34 <_exit>:
 c34:	f8 94       	cli

00000c36 <__stop_program>:
 c36:	ff cf       	rjmp	.-2      	; 0xc36 <__stop_program>
