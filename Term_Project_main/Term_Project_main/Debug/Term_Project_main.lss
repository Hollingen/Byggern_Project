
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000bb0  00000c44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800140  00800140  00000c84  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001341  00000000  00000000  00000e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c9e  00000000  00000000  000021cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b5c  00000000  00000000  00002e6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  000039c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068d  00000000  00000000  00003d08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006cc  00000000  00000000  00004395  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00004a61  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 97 00 	jmp	0x12e	; 0x12e <__vector_16>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 eb       	ldi	r30, 0xB0	; 176
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 34       	cpi	r26, 0x40	; 64
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e4       	ldi	r26, 0x40	; 64
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ab 34       	cpi	r26, 0x4B	; 75
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 80 00 	call	0x100	; 0x100 <main>
  a6:	0c 94 d6 05 	jmp	0xbac	; 0xbac <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:
			return LEFT;
		}
	}else{
		return NEUTRAL;
	}
}
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <Int_INIT>:
  ce:	8b b7       	in	r24, 0x3b	; 59
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	8b bf       	out	0x3b, r24	; 59
  d4:	85 b7       	in	r24, 0x35	; 53
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	85 bf       	out	0x35, r24	; 53
  da:	85 b7       	in	r24, 0x35	; 53
  dc:	82 60       	ori	r24, 0x02	; 2
  de:	85 bf       	out	0x35, r24	; 53
  e0:	08 95       	ret

000000e2 <__vector_1>:

ISR(INT0_vect){
  e2:	1f 92       	push	r1
  e4:	0f 92       	push	r0
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	0f 92       	push	r0
  ea:	11 24       	eor	r1, r1
  ec:	8f 93       	push	r24
    BUSY_flag = 1;
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
}
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <main>:
#include "SPI/SPIdrv.h"
#include "MCP2515/MCP2515drv.h"

int main(void)
{
	USART_Init(MYUBRR);
 100:	8f e1       	ldi	r24, 0x1F	; 31
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <USART_Init>
	XMEM_init();
 108:	0e 94 4d 01 	call	0x29a	; 0x29a <XMEM_init>
	Int_INIT();
 10c:	0e 94 67 00 	call	0xce	; 0xce <Int_INIT>
	ADC_Init();
 110:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
	//oled_init();
	//printf("her\n\r");
	//spi_init_master();
	//oled_refresh_rate_init();
	sei();	
 114:	78 94       	sei
	//oled_home();
	//oled_print("kisen,1234567891");
	adc_pos pos;
	adc_dir dir;
	int value;
	mcp2515_init();
 116:	0e 94 df 00 	call	0x1be	; 0x1be <mcp2515_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	2f ef       	ldi	r18, 0xFF	; 255
 11c:	8f ef       	ldi	r24, 0xFF	; 255
 11e:	9e e0       	ldi	r25, 0x0E	; 14
 120:	21 50       	subi	r18, 0x01	; 1
 122:	80 40       	sbci	r24, 0x00	; 0
 124:	90 40       	sbci	r25, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0x20>
 128:	00 c0       	rjmp	.+0      	; 0x12a <main+0x2a>
 12a:	00 00       	nop
 12c:	f6 cf       	rjmp	.-20     	; 0x11a <main+0x1a>

0000012e <__vector_16>:
		
    }
}


ISR(TIMER0_COMP_vect){
 12e:	1f 92       	push	r1
 130:	0f 92       	push	r0
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	0f 92       	push	r0
 136:	11 24       	eor	r1, r1
	
	
 138:	0f 90       	pop	r0
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

00000142 <mcp2515_read>:
    status = spi_read_char();
	PORTB |= (1 << PB4); // Deselect CAN - controller

    return status;

}
 142:	1f 93       	push	r17
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	18 2f       	mov	r17, r24
 14a:	eb 01       	movw	r28, r22
 14c:	88 b3       	in	r24, 0x18	; 24
 14e:	8f 7e       	andi	r24, 0xEF	; 239
 150:	88 bb       	out	0x18, r24	; 24
 152:	83 e0       	ldi	r24, 0x03	; 3
 154:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
 158:	81 2f       	mov	r24, r17
 15a:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
 15e:	0e 94 39 01 	call	0x272	; 0x272 <spi_read_char>
 162:	88 83       	st	Y, r24
 164:	88 b3       	in	r24, 0x18	; 24
 166:	80 61       	ori	r24, 0x10	; 16
 168:	88 bb       	out	0x18, r24	; 24
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	08 95       	ret

00000172 <mcp2515_reset>:
 172:	88 b3       	in	r24, 0x18	; 24
 174:	8f 7e       	andi	r24, 0xEF	; 239
 176:	88 bb       	out	0x18, r24	; 24
 178:	80 ec       	ldi	r24, 0xC0	; 192
 17a:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
 17e:	88 b3       	in	r24, 0x18	; 24
 180:	80 61       	ori	r24, 0x10	; 16
 182:	88 bb       	out	0x18, r24	; 24
 184:	08 95       	ret

00000186 <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
 186:	1f 93       	push	r17
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
 18c:	18 2f       	mov	r17, r24
 18e:	d6 2f       	mov	r29, r22
 190:	c4 2f       	mov	r28, r20
    PORTB &= ~(1 << DD_SS); // Select CAN - controller
 192:	88 b3       	in	r24, 0x18	; 24
 194:	8f 7e       	andi	r24, 0xEF	; 239
 196:	88 bb       	out	0x18, r24	; 24
    spi_write_char(MCP_BITMOD);   //Write read_status bit to SPI
 198:	85 e0       	ldi	r24, 0x05	; 5
 19a:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
    spi_write_char(address); // Send address
 19e:	81 2f       	mov	r24, r17
 1a0:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
    spi_write_char(mask); // Send mask
 1a4:	8d 2f       	mov	r24, r29
 1a6:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
    spi_write_char(data); // Send data
 1aa:	8c 2f       	mov	r24, r28
 1ac:	0e 94 34 01 	call	0x268	; 0x268 <spi_write_char>
    PORTB |= (1 << DD_SS); // Deselect CAN - controller
 1b0:	88 b3       	in	r24, 0x18	; 24
 1b2:	80 61       	ori	r24, 0x10	; 16
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	1f 91       	pop	r17
 1bc:	08 95       	ret

000001be <mcp2515_init>:
#include "../SPI/SPIdrv.h"




uint8_t mcp2515_init(){
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	1f 92       	push	r1
 1c4:	cd b7       	in	r28, 0x3d	; 61
 1c6:	de b7       	in	r29, 0x3e	; 62
    uint8_t value;
	spi_init_master(); // Initialize SPI
 1c8:	0e 94 43 01 	call	0x286	; 0x286 <spi_init_master>
    mcp2515_reset(); // end reset - command
 1cc:	0e 94 b9 00 	call	0x172	; 0x172 <mcp2515_reset>
    // Self - testS
	//mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_CONFIG);

    mcp2515_read(MCP_CANSTAT, &value);
 1d0:	be 01       	movw	r22, r28
 1d2:	6f 5f       	subi	r22, 0xFF	; 255
 1d4:	7f 4f       	sbci	r23, 0xFF	; 255
 1d6:	8e e0       	ldi	r24, 0x0E	; 14
 1d8:	0e 94 a1 00 	call	0x142	; 0x142 <mcp2515_read>
	printf("value: %d\n\r", value);
 1dc:	89 81       	ldd	r24, Y+1	; 0x01
 1de:	1f 92       	push	r1
 1e0:	8f 93       	push	r24
 1e2:	86 e0       	ldi	r24, 0x06	; 6
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
    if ((value & MODE_MASK) != MODE_CONFIG) {
 1ee:	89 81       	ldd	r24, Y+1	; 0x01
 1f0:	80 7e       	andi	r24, 0xE0	; 224
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	80 38       	cpi	r24, 0x80	; 128
 1fc:	51 f0       	breq	.+20     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
        printf ("MCP2515 is NOT in config mode after reset !\n\r");
 1fe:	82 e1       	ldi	r24, 0x12	; 18
 200:	91 e0       	ldi	r25, 0x01	; 1
 202:	9f 93       	push	r25
 204:	8f 93       	push	r24
 206:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
		return 1;
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	27 c0       	rjmp	.+78     	; 0x260 <__EEPROM_REGION_LENGTH__+0x60>
    }
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_LOOPBACK);
 212:	40 e4       	ldi	r20, 0x40	; 64
 214:	60 ee       	ldi	r22, 0xE0	; 224
 216:	8f e0       	ldi	r24, 0x0F	; 15
 218:	0e 94 c3 00 	call	0x186	; 0x186 <mcp2515_bit_modify>
	mcp2515_read(MCP_CANSTAT, &value);
 21c:	be 01       	movw	r22, r28
 21e:	6f 5f       	subi	r22, 0xFF	; 255
 220:	7f 4f       	sbci	r23, 0xFF	; 255
 222:	8e e0       	ldi	r24, 0x0E	; 14
 224:	0e 94 a1 00 	call	0x142	; 0x142 <mcp2515_read>
	printf("value: %d\n\r", value);
 228:	89 81       	ldd	r24, Y+1	; 0x01
 22a:	1f 92       	push	r1
 22c:	8f 93       	push	r24
 22e:	86 e0       	ldi	r24, 0x06	; 6
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	9f 93       	push	r25
 234:	8f 93       	push	r24
 236:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
	if ((value & MODE_MASK) != MODE_LOOPBACK) {
 23a:	89 81       	ldd	r24, Y+1	; 0x01
 23c:	80 7e       	andi	r24, 0xE0	; 224
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	80 34       	cpi	r24, 0x40	; 64
 248:	51 f0       	breq	.+20     	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
        printf ("MCP2515 is NOT in config mode after reset !\n\r");
 24a:	82 e1       	ldi	r24, 0x12	; 18
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	9f 93       	push	r25
 250:	8f 93       	push	r24
 252:	0e 94 b4 01 	call	0x368	; 0x368 <printf>
		return 1;
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	01 c0       	rjmp	.+2      	; 0x260 <__EEPROM_REGION_LENGTH__+0x60>
    }

    return 0;
 25e:	80 e0       	ldi	r24, 0x00	; 0
}
 260:	0f 90       	pop	r0
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	08 95       	ret

00000268 <spi_write_char>:
	SPCR = (1<<SPE);
}
*/
void spi_write_char(char cData){
	char flushbuffer;
    SPDR = cData;
 268:	8f b9       	out	0x0f, r24	; 15
    //Wait for send to complete

	loop_until_bit_is_set(SPSR, SPIF);
 26a:	77 9b       	sbis	0x0e, 7	; 14
 26c:	fe cf       	rjmp	.-4      	; 0x26a <spi_write_char+0x2>
	flushbuffer = SPDR;
 26e:	8f b1       	in	r24, 0x0f	; 15
 270:	08 95       	ret

00000272 <spi_read_char>:
}

char spi_read_char(){
    SPDR = 0xFF;
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	8f b9       	out	0x0f, r24	; 15
	// Wait for reception to complete

    loop_until_bit_is_set(SPSR, SPIF);
 276:	77 9b       	sbis	0x0e, 7	; 14
 278:	fe cf       	rjmp	.-4      	; 0x276 <spi_read_char+0x4>
	// Return char in data register
	return SPDR;
 27a:	8f b1       	in	r24, 0x0f	; 15

}
 27c:	08 95       	ret

0000027e <spi_set_ss_high>:

void spi_set_ss_high(){
    PORTB |= (1 << DD_SS);
 27e:	88 b3       	in	r24, 0x18	; 24
 280:	80 61       	ori	r24, 0x10	; 16
 282:	88 bb       	out	0x18, r24	; 24
 284:	08 95       	ret

00000286 <spi_init_master>:
#include "SPIdrv.h"


void spi_init_master(){
    // Set MOSI and SCK - og SS - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
 286:	80 eb       	ldi	r24, 0xB0	; 176
 288:	87 bb       	out	0x17, r24	; 23
	
	DDR_SPI &= ~(1<<DD_MISO);
 28a:	87 b3       	in	r24, 0x17	; 23
 28c:	8f 7b       	andi	r24, 0xBF	; 191
 28e:	87 bb       	out	0x17, r24	; 23
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);//|(1<<SPIE);
 290:	81 e5       	ldi	r24, 0x51	; 81
 292:	8d b9       	out	0x0d, r24	; 13
	//SPCR &= ~((1<<CPOL)|(1<<CPHA));
	spi_set_ss_high();
 294:	0e 94 3f 01 	call	0x27e	; 0x27e <spi_set_ss_high>
 298:	08 95       	ret

0000029a <XMEM_init>:
#include "SRAMdrv.h"

void XMEM_init(void){
	MCUCR |= (1<<SRE); //enable XMEM
 29a:	85 b7       	in	r24, 0x35	; 53
 29c:	80 68       	ori	r24, 0x80	; 128
 29e:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2); // Masking P7-P4
 2a0:	80 b7       	in	r24, 0x30	; 48
 2a2:	80 62       	ori	r24, 0x20	; 32
 2a4:	80 bf       	out	0x30, r24	; 48
 2a6:	08 95       	ret

000002a8 <USART_Transmit>:
#include "UARTdrv.h"

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 2a8:	5d 9b       	sbis	0x0b, 5	; 11
 2aa:	fe cf       	rjmp	.-4      	; 0x2a8 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 2ac:	8c b9       	out	0x0c, r24	; 12
 2ae:	08 95       	ret

000002b0 <USART_Receive>:
}
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 2b0:	5f 9b       	sbis	0x0b, 7	; 11
 2b2:	fe cf       	rjmp	.-4      	; 0x2b0 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 2b4:	8c b1       	in	r24, 0x0c	; 12
}
 2b6:	08 95       	ret

000002b8 <USART_Init>:
void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 2b8:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 2ba:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 2bc:	88 e1       	ldi	r24, 0x18	; 24
 2be:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 2c0:	8e e8       	ldi	r24, 0x8E	; 142
 2c2:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit,USART_Receive);
 2c4:	68 e5       	ldi	r22, 0x58	; 88
 2c6:	71 e0       	ldi	r23, 0x01	; 1
 2c8:	84 e5       	ldi	r24, 0x54	; 84
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <fdevopen>
 2d0:	08 95       	ret

000002d2 <fdevopen>:
 2d2:	0f 93       	push	r16
 2d4:	1f 93       	push	r17
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	00 97       	sbiw	r24, 0x00	; 0
 2dc:	31 f4       	brne	.+12     	; 0x2ea <fdevopen+0x18>
 2de:	61 15       	cp	r22, r1
 2e0:	71 05       	cpc	r23, r1
 2e2:	19 f4       	brne	.+6      	; 0x2ea <fdevopen+0x18>
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	3a c0       	rjmp	.+116    	; 0x35e <fdevopen+0x8c>
 2ea:	8b 01       	movw	r16, r22
 2ec:	ec 01       	movw	r28, r24
 2ee:	6e e0       	ldi	r22, 0x0E	; 14
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	0e 94 ab 03 	call	0x756	; 0x756 <calloc>
 2fa:	fc 01       	movw	r30, r24
 2fc:	89 2b       	or	r24, r25
 2fe:	91 f3       	breq	.-28     	; 0x2e4 <fdevopen+0x12>
 300:	80 e8       	ldi	r24, 0x80	; 128
 302:	83 83       	std	Z+3, r24	; 0x03
 304:	01 15       	cp	r16, r1
 306:	11 05       	cpc	r17, r1
 308:	71 f0       	breq	.+28     	; 0x326 <fdevopen+0x54>
 30a:	13 87       	std	Z+11, r17	; 0x0b
 30c:	02 87       	std	Z+10, r16	; 0x0a
 30e:	81 e8       	ldi	r24, 0x81	; 129
 310:	83 83       	std	Z+3, r24	; 0x03
 312:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__iob>
 316:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <__iob+0x1>
 31a:	89 2b       	or	r24, r25
 31c:	21 f4       	brne	.+8      	; 0x326 <fdevopen+0x54>
 31e:	f0 93 42 01 	sts	0x0142, r31	; 0x800142 <__iob+0x1>
 322:	e0 93 41 01 	sts	0x0141, r30	; 0x800141 <__iob>
 326:	20 97       	sbiw	r28, 0x00	; 0
 328:	c9 f0       	breq	.+50     	; 0x35c <fdevopen+0x8a>
 32a:	d1 87       	std	Z+9, r29	; 0x09
 32c:	c0 87       	std	Z+8, r28	; 0x08
 32e:	83 81       	ldd	r24, Z+3	; 0x03
 330:	82 60       	ori	r24, 0x02	; 2
 332:	83 83       	std	Z+3, r24	; 0x03
 334:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 338:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 33c:	89 2b       	or	r24, r25
 33e:	71 f4       	brne	.+28     	; 0x35c <fdevopen+0x8a>
 340:	f0 93 44 01 	sts	0x0144, r31	; 0x800144 <__iob+0x3>
 344:	e0 93 43 01 	sts	0x0143, r30	; 0x800143 <__iob+0x2>
 348:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__iob+0x4>
 34c:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__iob+0x5>
 350:	89 2b       	or	r24, r25
 352:	21 f4       	brne	.+8      	; 0x35c <fdevopen+0x8a>
 354:	f0 93 46 01 	sts	0x0146, r31	; 0x800146 <__iob+0x5>
 358:	e0 93 45 01 	sts	0x0145, r30	; 0x800145 <__iob+0x4>
 35c:	cf 01       	movw	r24, r30
 35e:	df 91       	pop	r29
 360:	cf 91       	pop	r28
 362:	1f 91       	pop	r17
 364:	0f 91       	pop	r16
 366:	08 95       	ret

00000368 <printf>:
 368:	a0 e0       	ldi	r26, 0x00	; 0
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	ea eb       	ldi	r30, 0xBA	; 186
 36e:	f1 e0       	ldi	r31, 0x01	; 1
 370:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <__prologue_saves__+0x20>
 374:	ae 01       	movw	r20, r28
 376:	4b 5f       	subi	r20, 0xFB	; 251
 378:	5f 4f       	sbci	r21, 0xFF	; 255
 37a:	fa 01       	movw	r30, r20
 37c:	61 91       	ld	r22, Z+
 37e:	71 91       	ld	r23, Z+
 380:	af 01       	movw	r20, r30
 382:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 386:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 38a:	0e 94 ca 01 	call	0x394	; 0x394 <vfprintf>
 38e:	e2 e0       	ldi	r30, 0x02	; 2
 390:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <__epilogue_restores__+0x20>

00000394 <vfprintf>:
 394:	ab e0       	ldi	r26, 0x0B	; 11
 396:	b0 e0       	ldi	r27, 0x00	; 0
 398:	e0 ed       	ldi	r30, 0xD0	; 208
 39a:	f1 e0       	ldi	r31, 0x01	; 1
 39c:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__prologue_saves__>
 3a0:	6c 01       	movw	r12, r24
 3a2:	7b 01       	movw	r14, r22
 3a4:	8a 01       	movw	r16, r20
 3a6:	fc 01       	movw	r30, r24
 3a8:	17 82       	std	Z+7, r1	; 0x07
 3aa:	16 82       	std	Z+6, r1	; 0x06
 3ac:	83 81       	ldd	r24, Z+3	; 0x03
 3ae:	81 ff       	sbrs	r24, 1
 3b0:	cc c1       	rjmp	.+920    	; 0x74a <__stack+0x24b>
 3b2:	ce 01       	movw	r24, r28
 3b4:	01 96       	adiw	r24, 0x01	; 1
 3b6:	3c 01       	movw	r6, r24
 3b8:	f6 01       	movw	r30, r12
 3ba:	93 81       	ldd	r25, Z+3	; 0x03
 3bc:	f7 01       	movw	r30, r14
 3be:	93 fd       	sbrc	r25, 3
 3c0:	85 91       	lpm	r24, Z+
 3c2:	93 ff       	sbrs	r25, 3
 3c4:	81 91       	ld	r24, Z+
 3c6:	7f 01       	movw	r14, r30
 3c8:	88 23       	and	r24, r24
 3ca:	09 f4       	brne	.+2      	; 0x3ce <vfprintf+0x3a>
 3cc:	ba c1       	rjmp	.+884    	; 0x742 <__stack+0x243>
 3ce:	85 32       	cpi	r24, 0x25	; 37
 3d0:	39 f4       	brne	.+14     	; 0x3e0 <vfprintf+0x4c>
 3d2:	93 fd       	sbrc	r25, 3
 3d4:	85 91       	lpm	r24, Z+
 3d6:	93 ff       	sbrs	r25, 3
 3d8:	81 91       	ld	r24, Z+
 3da:	7f 01       	movw	r14, r30
 3dc:	85 32       	cpi	r24, 0x25	; 37
 3de:	29 f4       	brne	.+10     	; 0x3ea <vfprintf+0x56>
 3e0:	b6 01       	movw	r22, r12
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 3e8:	e7 cf       	rjmp	.-50     	; 0x3b8 <vfprintf+0x24>
 3ea:	91 2c       	mov	r9, r1
 3ec:	21 2c       	mov	r2, r1
 3ee:	31 2c       	mov	r3, r1
 3f0:	ff e1       	ldi	r31, 0x1F	; 31
 3f2:	f3 15       	cp	r31, r3
 3f4:	d8 f0       	brcs	.+54     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 3f6:	8b 32       	cpi	r24, 0x2B	; 43
 3f8:	79 f0       	breq	.+30     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 3fa:	38 f4       	brcc	.+14     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 3fc:	80 32       	cpi	r24, 0x20	; 32
 3fe:	79 f0       	breq	.+30     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 400:	83 32       	cpi	r24, 0x23	; 35
 402:	a1 f4       	brne	.+40     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 404:	23 2d       	mov	r18, r3
 406:	20 61       	ori	r18, 0x10	; 16
 408:	1d c0       	rjmp	.+58     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 40a:	8d 32       	cpi	r24, 0x2D	; 45
 40c:	61 f0       	breq	.+24     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 40e:	80 33       	cpi	r24, 0x30	; 48
 410:	69 f4       	brne	.+26     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 412:	23 2d       	mov	r18, r3
 414:	21 60       	ori	r18, 0x01	; 1
 416:	16 c0       	rjmp	.+44     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 418:	83 2d       	mov	r24, r3
 41a:	82 60       	ori	r24, 0x02	; 2
 41c:	38 2e       	mov	r3, r24
 41e:	e3 2d       	mov	r30, r3
 420:	e4 60       	ori	r30, 0x04	; 4
 422:	3e 2e       	mov	r3, r30
 424:	2a c0       	rjmp	.+84     	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 426:	f3 2d       	mov	r31, r3
 428:	f8 60       	ori	r31, 0x08	; 8
 42a:	1d c0       	rjmp	.+58     	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 42c:	37 fc       	sbrc	r3, 7
 42e:	2d c0       	rjmp	.+90     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 430:	20 ed       	ldi	r18, 0xD0	; 208
 432:	28 0f       	add	r18, r24
 434:	2a 30       	cpi	r18, 0x0A	; 10
 436:	40 f0       	brcs	.+16     	; 0x448 <__DATA_REGION_LENGTH__+0x48>
 438:	8e 32       	cpi	r24, 0x2E	; 46
 43a:	b9 f4       	brne	.+46     	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
 43c:	36 fc       	sbrc	r3, 6
 43e:	81 c1       	rjmp	.+770    	; 0x742 <__stack+0x243>
 440:	23 2d       	mov	r18, r3
 442:	20 64       	ori	r18, 0x40	; 64
 444:	32 2e       	mov	r3, r18
 446:	19 c0       	rjmp	.+50     	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 448:	36 fe       	sbrs	r3, 6
 44a:	06 c0       	rjmp	.+12     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 44c:	8a e0       	ldi	r24, 0x0A	; 10
 44e:	98 9e       	mul	r9, r24
 450:	20 0d       	add	r18, r0
 452:	11 24       	eor	r1, r1
 454:	92 2e       	mov	r9, r18
 456:	11 c0       	rjmp	.+34     	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 458:	ea e0       	ldi	r30, 0x0A	; 10
 45a:	2e 9e       	mul	r2, r30
 45c:	20 0d       	add	r18, r0
 45e:	11 24       	eor	r1, r1
 460:	22 2e       	mov	r2, r18
 462:	f3 2d       	mov	r31, r3
 464:	f0 62       	ori	r31, 0x20	; 32
 466:	3f 2e       	mov	r3, r31
 468:	08 c0       	rjmp	.+16     	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 46a:	8c 36       	cpi	r24, 0x6C	; 108
 46c:	21 f4       	brne	.+8      	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 46e:	83 2d       	mov	r24, r3
 470:	80 68       	ori	r24, 0x80	; 128
 472:	38 2e       	mov	r3, r24
 474:	02 c0       	rjmp	.+4      	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 476:	88 36       	cpi	r24, 0x68	; 104
 478:	41 f4       	brne	.+16     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 47a:	f7 01       	movw	r30, r14
 47c:	93 fd       	sbrc	r25, 3
 47e:	85 91       	lpm	r24, Z+
 480:	93 ff       	sbrs	r25, 3
 482:	81 91       	ld	r24, Z+
 484:	7f 01       	movw	r14, r30
 486:	81 11       	cpse	r24, r1
 488:	b3 cf       	rjmp	.-154    	; 0x3f0 <vfprintf+0x5c>
 48a:	98 2f       	mov	r25, r24
 48c:	9f 7d       	andi	r25, 0xDF	; 223
 48e:	95 54       	subi	r25, 0x45	; 69
 490:	93 30       	cpi	r25, 0x03	; 3
 492:	28 f4       	brcc	.+10     	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
 494:	0c 5f       	subi	r16, 0xFC	; 252
 496:	1f 4f       	sbci	r17, 0xFF	; 255
 498:	9f e3       	ldi	r25, 0x3F	; 63
 49a:	99 83       	std	Y+1, r25	; 0x01
 49c:	0d c0       	rjmp	.+26     	; 0x4b8 <__DATA_REGION_LENGTH__+0xb8>
 49e:	83 36       	cpi	r24, 0x63	; 99
 4a0:	31 f0       	breq	.+12     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 4a2:	83 37       	cpi	r24, 0x73	; 115
 4a4:	71 f0       	breq	.+28     	; 0x4c2 <__DATA_REGION_LENGTH__+0xc2>
 4a6:	83 35       	cpi	r24, 0x53	; 83
 4a8:	09 f0       	breq	.+2      	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
 4aa:	59 c0       	rjmp	.+178    	; 0x55e <__stack+0x5f>
 4ac:	21 c0       	rjmp	.+66     	; 0x4f0 <__DATA_REGION_LENGTH__+0xf0>
 4ae:	f8 01       	movw	r30, r16
 4b0:	80 81       	ld	r24, Z
 4b2:	89 83       	std	Y+1, r24	; 0x01
 4b4:	0e 5f       	subi	r16, 0xFE	; 254
 4b6:	1f 4f       	sbci	r17, 0xFF	; 255
 4b8:	88 24       	eor	r8, r8
 4ba:	83 94       	inc	r8
 4bc:	91 2c       	mov	r9, r1
 4be:	53 01       	movw	r10, r6
 4c0:	13 c0       	rjmp	.+38     	; 0x4e8 <__DATA_REGION_LENGTH__+0xe8>
 4c2:	28 01       	movw	r4, r16
 4c4:	f2 e0       	ldi	r31, 0x02	; 2
 4c6:	4f 0e       	add	r4, r31
 4c8:	51 1c       	adc	r5, r1
 4ca:	f8 01       	movw	r30, r16
 4cc:	a0 80       	ld	r10, Z
 4ce:	b1 80       	ldd	r11, Z+1	; 0x01
 4d0:	36 fe       	sbrs	r3, 6
 4d2:	03 c0       	rjmp	.+6      	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 4d4:	69 2d       	mov	r22, r9
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <__DATA_REGION_LENGTH__+0xde>
 4da:	6f ef       	ldi	r22, 0xFF	; 255
 4dc:	7f ef       	ldi	r23, 0xFF	; 255
 4de:	c5 01       	movw	r24, r10
 4e0:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <strnlen>
 4e4:	4c 01       	movw	r8, r24
 4e6:	82 01       	movw	r16, r4
 4e8:	f3 2d       	mov	r31, r3
 4ea:	ff 77       	andi	r31, 0x7F	; 127
 4ec:	3f 2e       	mov	r3, r31
 4ee:	16 c0       	rjmp	.+44     	; 0x51c <__stack+0x1d>
 4f0:	28 01       	movw	r4, r16
 4f2:	22 e0       	ldi	r18, 0x02	; 2
 4f4:	42 0e       	add	r4, r18
 4f6:	51 1c       	adc	r5, r1
 4f8:	f8 01       	movw	r30, r16
 4fa:	a0 80       	ld	r10, Z
 4fc:	b1 80       	ldd	r11, Z+1	; 0x01
 4fe:	36 fe       	sbrs	r3, 6
 500:	03 c0       	rjmp	.+6      	; 0x508 <__stack+0x9>
 502:	69 2d       	mov	r22, r9
 504:	70 e0       	ldi	r23, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <__stack+0xd>
 508:	6f ef       	ldi	r22, 0xFF	; 255
 50a:	7f ef       	ldi	r23, 0xFF	; 255
 50c:	c5 01       	movw	r24, r10
 50e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <strnlen_P>
 512:	4c 01       	movw	r8, r24
 514:	f3 2d       	mov	r31, r3
 516:	f0 68       	ori	r31, 0x80	; 128
 518:	3f 2e       	mov	r3, r31
 51a:	82 01       	movw	r16, r4
 51c:	33 fc       	sbrc	r3, 3
 51e:	1b c0       	rjmp	.+54     	; 0x556 <__stack+0x57>
 520:	82 2d       	mov	r24, r2
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	88 16       	cp	r8, r24
 526:	99 06       	cpc	r9, r25
 528:	b0 f4       	brcc	.+44     	; 0x556 <__stack+0x57>
 52a:	b6 01       	movw	r22, r12
 52c:	80 e2       	ldi	r24, 0x20	; 32
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 534:	2a 94       	dec	r2
 536:	f4 cf       	rjmp	.-24     	; 0x520 <__stack+0x21>
 538:	f5 01       	movw	r30, r10
 53a:	37 fc       	sbrc	r3, 7
 53c:	85 91       	lpm	r24, Z+
 53e:	37 fe       	sbrs	r3, 7
 540:	81 91       	ld	r24, Z+
 542:	5f 01       	movw	r10, r30
 544:	b6 01       	movw	r22, r12
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 54c:	21 10       	cpse	r2, r1
 54e:	2a 94       	dec	r2
 550:	21 e0       	ldi	r18, 0x01	; 1
 552:	82 1a       	sub	r8, r18
 554:	91 08       	sbc	r9, r1
 556:	81 14       	cp	r8, r1
 558:	91 04       	cpc	r9, r1
 55a:	71 f7       	brne	.-36     	; 0x538 <__stack+0x39>
 55c:	e8 c0       	rjmp	.+464    	; 0x72e <__stack+0x22f>
 55e:	84 36       	cpi	r24, 0x64	; 100
 560:	11 f0       	breq	.+4      	; 0x566 <__stack+0x67>
 562:	89 36       	cpi	r24, 0x69	; 105
 564:	41 f5       	brne	.+80     	; 0x5b6 <__stack+0xb7>
 566:	f8 01       	movw	r30, r16
 568:	37 fe       	sbrs	r3, 7
 56a:	07 c0       	rjmp	.+14     	; 0x57a <__stack+0x7b>
 56c:	60 81       	ld	r22, Z
 56e:	71 81       	ldd	r23, Z+1	; 0x01
 570:	82 81       	ldd	r24, Z+2	; 0x02
 572:	93 81       	ldd	r25, Z+3	; 0x03
 574:	0c 5f       	subi	r16, 0xFC	; 252
 576:	1f 4f       	sbci	r17, 0xFF	; 255
 578:	08 c0       	rjmp	.+16     	; 0x58a <__stack+0x8b>
 57a:	60 81       	ld	r22, Z
 57c:	71 81       	ldd	r23, Z+1	; 0x01
 57e:	07 2e       	mov	r0, r23
 580:	00 0c       	add	r0, r0
 582:	88 0b       	sbc	r24, r24
 584:	99 0b       	sbc	r25, r25
 586:	0e 5f       	subi	r16, 0xFE	; 254
 588:	1f 4f       	sbci	r17, 0xFF	; 255
 58a:	f3 2d       	mov	r31, r3
 58c:	ff 76       	andi	r31, 0x6F	; 111
 58e:	3f 2e       	mov	r3, r31
 590:	97 ff       	sbrs	r25, 7
 592:	09 c0       	rjmp	.+18     	; 0x5a6 <__stack+0xa7>
 594:	90 95       	com	r25
 596:	80 95       	com	r24
 598:	70 95       	com	r23
 59a:	61 95       	neg	r22
 59c:	7f 4f       	sbci	r23, 0xFF	; 255
 59e:	8f 4f       	sbci	r24, 0xFF	; 255
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255
 5a2:	f0 68       	ori	r31, 0x80	; 128
 5a4:	3f 2e       	mov	r3, r31
 5a6:	2a e0       	ldi	r18, 0x0A	; 10
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	a3 01       	movw	r20, r6
 5ac:	0e 94 41 05 	call	0xa82	; 0xa82 <__ultoa_invert>
 5b0:	88 2e       	mov	r8, r24
 5b2:	86 18       	sub	r8, r6
 5b4:	45 c0       	rjmp	.+138    	; 0x640 <__stack+0x141>
 5b6:	85 37       	cpi	r24, 0x75	; 117
 5b8:	31 f4       	brne	.+12     	; 0x5c6 <__stack+0xc7>
 5ba:	23 2d       	mov	r18, r3
 5bc:	2f 7e       	andi	r18, 0xEF	; 239
 5be:	b2 2e       	mov	r11, r18
 5c0:	2a e0       	ldi	r18, 0x0A	; 10
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	25 c0       	rjmp	.+74     	; 0x610 <__stack+0x111>
 5c6:	93 2d       	mov	r25, r3
 5c8:	99 7f       	andi	r25, 0xF9	; 249
 5ca:	b9 2e       	mov	r11, r25
 5cc:	8f 36       	cpi	r24, 0x6F	; 111
 5ce:	c1 f0       	breq	.+48     	; 0x600 <__stack+0x101>
 5d0:	18 f4       	brcc	.+6      	; 0x5d8 <__stack+0xd9>
 5d2:	88 35       	cpi	r24, 0x58	; 88
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <__stack+0xf5>
 5d6:	b5 c0       	rjmp	.+362    	; 0x742 <__stack+0x243>
 5d8:	80 37       	cpi	r24, 0x70	; 112
 5da:	19 f0       	breq	.+6      	; 0x5e2 <__stack+0xe3>
 5dc:	88 37       	cpi	r24, 0x78	; 120
 5de:	21 f0       	breq	.+8      	; 0x5e8 <__stack+0xe9>
 5e0:	b0 c0       	rjmp	.+352    	; 0x742 <__stack+0x243>
 5e2:	e9 2f       	mov	r30, r25
 5e4:	e0 61       	ori	r30, 0x10	; 16
 5e6:	be 2e       	mov	r11, r30
 5e8:	b4 fe       	sbrs	r11, 4
 5ea:	0d c0       	rjmp	.+26     	; 0x606 <__stack+0x107>
 5ec:	fb 2d       	mov	r31, r11
 5ee:	f4 60       	ori	r31, 0x04	; 4
 5f0:	bf 2e       	mov	r11, r31
 5f2:	09 c0       	rjmp	.+18     	; 0x606 <__stack+0x107>
 5f4:	34 fe       	sbrs	r3, 4
 5f6:	0a c0       	rjmp	.+20     	; 0x60c <__stack+0x10d>
 5f8:	29 2f       	mov	r18, r25
 5fa:	26 60       	ori	r18, 0x06	; 6
 5fc:	b2 2e       	mov	r11, r18
 5fe:	06 c0       	rjmp	.+12     	; 0x60c <__stack+0x10d>
 600:	28 e0       	ldi	r18, 0x08	; 8
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	05 c0       	rjmp	.+10     	; 0x610 <__stack+0x111>
 606:	20 e1       	ldi	r18, 0x10	; 16
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	02 c0       	rjmp	.+4      	; 0x610 <__stack+0x111>
 60c:	20 e1       	ldi	r18, 0x10	; 16
 60e:	32 e0       	ldi	r19, 0x02	; 2
 610:	f8 01       	movw	r30, r16
 612:	b7 fe       	sbrs	r11, 7
 614:	07 c0       	rjmp	.+14     	; 0x624 <__stack+0x125>
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	82 81       	ldd	r24, Z+2	; 0x02
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	0c 5f       	subi	r16, 0xFC	; 252
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	06 c0       	rjmp	.+12     	; 0x630 <__stack+0x131>
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 5f       	subi	r16, 0xFE	; 254
 62e:	1f 4f       	sbci	r17, 0xFF	; 255
 630:	a3 01       	movw	r20, r6
 632:	0e 94 41 05 	call	0xa82	; 0xa82 <__ultoa_invert>
 636:	88 2e       	mov	r8, r24
 638:	86 18       	sub	r8, r6
 63a:	fb 2d       	mov	r31, r11
 63c:	ff 77       	andi	r31, 0x7F	; 127
 63e:	3f 2e       	mov	r3, r31
 640:	36 fe       	sbrs	r3, 6
 642:	0d c0       	rjmp	.+26     	; 0x65e <__stack+0x15f>
 644:	23 2d       	mov	r18, r3
 646:	2e 7f       	andi	r18, 0xFE	; 254
 648:	a2 2e       	mov	r10, r18
 64a:	89 14       	cp	r8, r9
 64c:	58 f4       	brcc	.+22     	; 0x664 <__stack+0x165>
 64e:	34 fe       	sbrs	r3, 4
 650:	0b c0       	rjmp	.+22     	; 0x668 <__stack+0x169>
 652:	32 fc       	sbrc	r3, 2
 654:	09 c0       	rjmp	.+18     	; 0x668 <__stack+0x169>
 656:	83 2d       	mov	r24, r3
 658:	8e 7e       	andi	r24, 0xEE	; 238
 65a:	a8 2e       	mov	r10, r24
 65c:	05 c0       	rjmp	.+10     	; 0x668 <__stack+0x169>
 65e:	b8 2c       	mov	r11, r8
 660:	a3 2c       	mov	r10, r3
 662:	03 c0       	rjmp	.+6      	; 0x66a <__stack+0x16b>
 664:	b8 2c       	mov	r11, r8
 666:	01 c0       	rjmp	.+2      	; 0x66a <__stack+0x16b>
 668:	b9 2c       	mov	r11, r9
 66a:	a4 fe       	sbrs	r10, 4
 66c:	0f c0       	rjmp	.+30     	; 0x68c <__stack+0x18d>
 66e:	fe 01       	movw	r30, r28
 670:	e8 0d       	add	r30, r8
 672:	f1 1d       	adc	r31, r1
 674:	80 81       	ld	r24, Z
 676:	80 33       	cpi	r24, 0x30	; 48
 678:	21 f4       	brne	.+8      	; 0x682 <__stack+0x183>
 67a:	9a 2d       	mov	r25, r10
 67c:	99 7e       	andi	r25, 0xE9	; 233
 67e:	a9 2e       	mov	r10, r25
 680:	09 c0       	rjmp	.+18     	; 0x694 <__stack+0x195>
 682:	a2 fe       	sbrs	r10, 2
 684:	06 c0       	rjmp	.+12     	; 0x692 <__stack+0x193>
 686:	b3 94       	inc	r11
 688:	b3 94       	inc	r11
 68a:	04 c0       	rjmp	.+8      	; 0x694 <__stack+0x195>
 68c:	8a 2d       	mov	r24, r10
 68e:	86 78       	andi	r24, 0x86	; 134
 690:	09 f0       	breq	.+2      	; 0x694 <__stack+0x195>
 692:	b3 94       	inc	r11
 694:	a3 fc       	sbrc	r10, 3
 696:	11 c0       	rjmp	.+34     	; 0x6ba <__stack+0x1bb>
 698:	a0 fe       	sbrs	r10, 0
 69a:	06 c0       	rjmp	.+12     	; 0x6a8 <__stack+0x1a9>
 69c:	b2 14       	cp	r11, r2
 69e:	88 f4       	brcc	.+34     	; 0x6c2 <__stack+0x1c3>
 6a0:	28 0c       	add	r2, r8
 6a2:	92 2c       	mov	r9, r2
 6a4:	9b 18       	sub	r9, r11
 6a6:	0e c0       	rjmp	.+28     	; 0x6c4 <__stack+0x1c5>
 6a8:	b2 14       	cp	r11, r2
 6aa:	60 f4       	brcc	.+24     	; 0x6c4 <__stack+0x1c5>
 6ac:	b6 01       	movw	r22, r12
 6ae:	80 e2       	ldi	r24, 0x20	; 32
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 6b6:	b3 94       	inc	r11
 6b8:	f7 cf       	rjmp	.-18     	; 0x6a8 <__stack+0x1a9>
 6ba:	b2 14       	cp	r11, r2
 6bc:	18 f4       	brcc	.+6      	; 0x6c4 <__stack+0x1c5>
 6be:	2b 18       	sub	r2, r11
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <__stack+0x1c7>
 6c2:	98 2c       	mov	r9, r8
 6c4:	21 2c       	mov	r2, r1
 6c6:	a4 fe       	sbrs	r10, 4
 6c8:	10 c0       	rjmp	.+32     	; 0x6ea <__stack+0x1eb>
 6ca:	b6 01       	movw	r22, r12
 6cc:	80 e3       	ldi	r24, 0x30	; 48
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 6d4:	a2 fe       	sbrs	r10, 2
 6d6:	17 c0       	rjmp	.+46     	; 0x706 <__stack+0x207>
 6d8:	a1 fc       	sbrc	r10, 1
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <__stack+0x1e3>
 6dc:	88 e7       	ldi	r24, 0x78	; 120
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <__stack+0x1e7>
 6e2:	88 e5       	ldi	r24, 0x58	; 88
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	b6 01       	movw	r22, r12
 6e8:	0c c0       	rjmp	.+24     	; 0x702 <__stack+0x203>
 6ea:	8a 2d       	mov	r24, r10
 6ec:	86 78       	andi	r24, 0x86	; 134
 6ee:	59 f0       	breq	.+22     	; 0x706 <__stack+0x207>
 6f0:	a1 fe       	sbrs	r10, 1
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <__stack+0x1f9>
 6f4:	8b e2       	ldi	r24, 0x2B	; 43
 6f6:	01 c0       	rjmp	.+2      	; 0x6fa <__stack+0x1fb>
 6f8:	80 e2       	ldi	r24, 0x20	; 32
 6fa:	a7 fc       	sbrc	r10, 7
 6fc:	8d e2       	ldi	r24, 0x2D	; 45
 6fe:	b6 01       	movw	r22, r12
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 706:	89 14       	cp	r8, r9
 708:	38 f4       	brcc	.+14     	; 0x718 <__stack+0x219>
 70a:	b6 01       	movw	r22, r12
 70c:	80 e3       	ldi	r24, 0x30	; 48
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 714:	9a 94       	dec	r9
 716:	f7 cf       	rjmp	.-18     	; 0x706 <__stack+0x207>
 718:	8a 94       	dec	r8
 71a:	f3 01       	movw	r30, r6
 71c:	e8 0d       	add	r30, r8
 71e:	f1 1d       	adc	r31, r1
 720:	80 81       	ld	r24, Z
 722:	b6 01       	movw	r22, r12
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 72a:	81 10       	cpse	r8, r1
 72c:	f5 cf       	rjmp	.-22     	; 0x718 <__stack+0x219>
 72e:	22 20       	and	r2, r2
 730:	09 f4       	brne	.+2      	; 0x734 <__stack+0x235>
 732:	42 ce       	rjmp	.-892    	; 0x3b8 <vfprintf+0x24>
 734:	b6 01       	movw	r22, r12
 736:	80 e2       	ldi	r24, 0x20	; 32
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 05 05 	call	0xa0a	; 0xa0a <fputc>
 73e:	2a 94       	dec	r2
 740:	f6 cf       	rjmp	.-20     	; 0x72e <__stack+0x22f>
 742:	f6 01       	movw	r30, r12
 744:	86 81       	ldd	r24, Z+6	; 0x06
 746:	97 81       	ldd	r25, Z+7	; 0x07
 748:	02 c0       	rjmp	.+4      	; 0x74e <__stack+0x24f>
 74a:	8f ef       	ldi	r24, 0xFF	; 255
 74c:	9f ef       	ldi	r25, 0xFF	; 255
 74e:	2b 96       	adiw	r28, 0x0b	; 11
 750:	e2 e1       	ldi	r30, 0x12	; 18
 752:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__epilogue_restores__>

00000756 <calloc>:
 756:	0f 93       	push	r16
 758:	1f 93       	push	r17
 75a:	cf 93       	push	r28
 75c:	df 93       	push	r29
 75e:	86 9f       	mul	r24, r22
 760:	80 01       	movw	r16, r0
 762:	87 9f       	mul	r24, r23
 764:	10 0d       	add	r17, r0
 766:	96 9f       	mul	r25, r22
 768:	10 0d       	add	r17, r0
 76a:	11 24       	eor	r1, r1
 76c:	c8 01       	movw	r24, r16
 76e:	0e 94 c7 03 	call	0x78e	; 0x78e <malloc>
 772:	ec 01       	movw	r28, r24
 774:	00 97       	sbiw	r24, 0x00	; 0
 776:	29 f0       	breq	.+10     	; 0x782 <calloc+0x2c>
 778:	a8 01       	movw	r20, r16
 77a:	60 e0       	ldi	r22, 0x00	; 0
 77c:	70 e0       	ldi	r23, 0x00	; 0
 77e:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <memset>
 782:	ce 01       	movw	r24, r28
 784:	df 91       	pop	r29
 786:	cf 91       	pop	r28
 788:	1f 91       	pop	r17
 78a:	0f 91       	pop	r16
 78c:	08 95       	ret

0000078e <malloc>:
 78e:	0f 93       	push	r16
 790:	1f 93       	push	r17
 792:	cf 93       	push	r28
 794:	df 93       	push	r29
 796:	82 30       	cpi	r24, 0x02	; 2
 798:	91 05       	cpc	r25, r1
 79a:	10 f4       	brcc	.+4      	; 0x7a0 <malloc+0x12>
 79c:	82 e0       	ldi	r24, 0x02	; 2
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	e0 91 49 01 	lds	r30, 0x0149	; 0x800149 <__flp>
 7a4:	f0 91 4a 01 	lds	r31, 0x014A	; 0x80014a <__flp+0x1>
 7a8:	20 e0       	ldi	r18, 0x00	; 0
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	a0 e0       	ldi	r26, 0x00	; 0
 7ae:	b0 e0       	ldi	r27, 0x00	; 0
 7b0:	30 97       	sbiw	r30, 0x00	; 0
 7b2:	19 f1       	breq	.+70     	; 0x7fa <malloc+0x6c>
 7b4:	40 81       	ld	r20, Z
 7b6:	51 81       	ldd	r21, Z+1	; 0x01
 7b8:	02 81       	ldd	r16, Z+2	; 0x02
 7ba:	13 81       	ldd	r17, Z+3	; 0x03
 7bc:	48 17       	cp	r20, r24
 7be:	59 07       	cpc	r21, r25
 7c0:	c8 f0       	brcs	.+50     	; 0x7f4 <malloc+0x66>
 7c2:	84 17       	cp	r24, r20
 7c4:	95 07       	cpc	r25, r21
 7c6:	69 f4       	brne	.+26     	; 0x7e2 <malloc+0x54>
 7c8:	10 97       	sbiw	r26, 0x00	; 0
 7ca:	31 f0       	breq	.+12     	; 0x7d8 <malloc+0x4a>
 7cc:	12 96       	adiw	r26, 0x02	; 2
 7ce:	0c 93       	st	X, r16
 7d0:	12 97       	sbiw	r26, 0x02	; 2
 7d2:	13 96       	adiw	r26, 0x03	; 3
 7d4:	1c 93       	st	X, r17
 7d6:	27 c0       	rjmp	.+78     	; 0x826 <malloc+0x98>
 7d8:	00 93 49 01 	sts	0x0149, r16	; 0x800149 <__flp>
 7dc:	10 93 4a 01 	sts	0x014A, r17	; 0x80014a <__flp+0x1>
 7e0:	22 c0       	rjmp	.+68     	; 0x826 <malloc+0x98>
 7e2:	21 15       	cp	r18, r1
 7e4:	31 05       	cpc	r19, r1
 7e6:	19 f0       	breq	.+6      	; 0x7ee <malloc+0x60>
 7e8:	42 17       	cp	r20, r18
 7ea:	53 07       	cpc	r21, r19
 7ec:	18 f4       	brcc	.+6      	; 0x7f4 <malloc+0x66>
 7ee:	9a 01       	movw	r18, r20
 7f0:	bd 01       	movw	r22, r26
 7f2:	ef 01       	movw	r28, r30
 7f4:	df 01       	movw	r26, r30
 7f6:	f8 01       	movw	r30, r16
 7f8:	db cf       	rjmp	.-74     	; 0x7b0 <malloc+0x22>
 7fa:	21 15       	cp	r18, r1
 7fc:	31 05       	cpc	r19, r1
 7fe:	f9 f0       	breq	.+62     	; 0x83e <malloc+0xb0>
 800:	28 1b       	sub	r18, r24
 802:	39 0b       	sbc	r19, r25
 804:	24 30       	cpi	r18, 0x04	; 4
 806:	31 05       	cpc	r19, r1
 808:	80 f4       	brcc	.+32     	; 0x82a <malloc+0x9c>
 80a:	8a 81       	ldd	r24, Y+2	; 0x02
 80c:	9b 81       	ldd	r25, Y+3	; 0x03
 80e:	61 15       	cp	r22, r1
 810:	71 05       	cpc	r23, r1
 812:	21 f0       	breq	.+8      	; 0x81c <malloc+0x8e>
 814:	fb 01       	movw	r30, r22
 816:	93 83       	std	Z+3, r25	; 0x03
 818:	82 83       	std	Z+2, r24	; 0x02
 81a:	04 c0       	rjmp	.+8      	; 0x824 <malloc+0x96>
 81c:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <__flp+0x1>
 820:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <__flp>
 824:	fe 01       	movw	r30, r28
 826:	32 96       	adiw	r30, 0x02	; 2
 828:	44 c0       	rjmp	.+136    	; 0x8b2 <malloc+0x124>
 82a:	fe 01       	movw	r30, r28
 82c:	e2 0f       	add	r30, r18
 82e:	f3 1f       	adc	r31, r19
 830:	81 93       	st	Z+, r24
 832:	91 93       	st	Z+, r25
 834:	22 50       	subi	r18, 0x02	; 2
 836:	31 09       	sbc	r19, r1
 838:	39 83       	std	Y+1, r19	; 0x01
 83a:	28 83       	st	Y, r18
 83c:	3a c0       	rjmp	.+116    	; 0x8b2 <malloc+0x124>
 83e:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 842:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 846:	23 2b       	or	r18, r19
 848:	41 f4       	brne	.+16     	; 0x85a <malloc+0xcc>
 84a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 84e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 852:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <__brkval+0x1>
 856:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <__brkval>
 85a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 85e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 862:	21 15       	cp	r18, r1
 864:	31 05       	cpc	r19, r1
 866:	41 f4       	brne	.+16     	; 0x878 <malloc+0xea>
 868:	2d b7       	in	r18, 0x3d	; 61
 86a:	3e b7       	in	r19, 0x3e	; 62
 86c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 870:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 874:	24 1b       	sub	r18, r20
 876:	35 0b       	sbc	r19, r21
 878:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <__brkval>
 87c:	f0 91 48 01 	lds	r31, 0x0148	; 0x800148 <__brkval+0x1>
 880:	e2 17       	cp	r30, r18
 882:	f3 07       	cpc	r31, r19
 884:	a0 f4       	brcc	.+40     	; 0x8ae <malloc+0x120>
 886:	2e 1b       	sub	r18, r30
 888:	3f 0b       	sbc	r19, r31
 88a:	28 17       	cp	r18, r24
 88c:	39 07       	cpc	r19, r25
 88e:	78 f0       	brcs	.+30     	; 0x8ae <malloc+0x120>
 890:	ac 01       	movw	r20, r24
 892:	4e 5f       	subi	r20, 0xFE	; 254
 894:	5f 4f       	sbci	r21, 0xFF	; 255
 896:	24 17       	cp	r18, r20
 898:	35 07       	cpc	r19, r21
 89a:	48 f0       	brcs	.+18     	; 0x8ae <malloc+0x120>
 89c:	4e 0f       	add	r20, r30
 89e:	5f 1f       	adc	r21, r31
 8a0:	50 93 48 01 	sts	0x0148, r21	; 0x800148 <__brkval+0x1>
 8a4:	40 93 47 01 	sts	0x0147, r20	; 0x800147 <__brkval>
 8a8:	81 93       	st	Z+, r24
 8aa:	91 93       	st	Z+, r25
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <malloc+0x124>
 8ae:	e0 e0       	ldi	r30, 0x00	; 0
 8b0:	f0 e0       	ldi	r31, 0x00	; 0
 8b2:	cf 01       	movw	r24, r30
 8b4:	df 91       	pop	r29
 8b6:	cf 91       	pop	r28
 8b8:	1f 91       	pop	r17
 8ba:	0f 91       	pop	r16
 8bc:	08 95       	ret

000008be <free>:
 8be:	cf 93       	push	r28
 8c0:	df 93       	push	r29
 8c2:	00 97       	sbiw	r24, 0x00	; 0
 8c4:	09 f4       	brne	.+2      	; 0x8c8 <free+0xa>
 8c6:	81 c0       	rjmp	.+258    	; 0x9ca <free+0x10c>
 8c8:	fc 01       	movw	r30, r24
 8ca:	32 97       	sbiw	r30, 0x02	; 2
 8cc:	13 82       	std	Z+3, r1	; 0x03
 8ce:	12 82       	std	Z+2, r1	; 0x02
 8d0:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <__flp>
 8d4:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <__flp+0x1>
 8d8:	10 97       	sbiw	r26, 0x00	; 0
 8da:	81 f4       	brne	.+32     	; 0x8fc <free+0x3e>
 8dc:	20 81       	ld	r18, Z
 8de:	31 81       	ldd	r19, Z+1	; 0x01
 8e0:	82 0f       	add	r24, r18
 8e2:	93 1f       	adc	r25, r19
 8e4:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 8e8:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 8ec:	28 17       	cp	r18, r24
 8ee:	39 07       	cpc	r19, r25
 8f0:	51 f5       	brne	.+84     	; 0x946 <free+0x88>
 8f2:	f0 93 48 01 	sts	0x0148, r31	; 0x800148 <__brkval+0x1>
 8f6:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <__brkval>
 8fa:	67 c0       	rjmp	.+206    	; 0x9ca <free+0x10c>
 8fc:	ed 01       	movw	r28, r26
 8fe:	20 e0       	ldi	r18, 0x00	; 0
 900:	30 e0       	ldi	r19, 0x00	; 0
 902:	ce 17       	cp	r28, r30
 904:	df 07       	cpc	r29, r31
 906:	40 f4       	brcc	.+16     	; 0x918 <free+0x5a>
 908:	4a 81       	ldd	r20, Y+2	; 0x02
 90a:	5b 81       	ldd	r21, Y+3	; 0x03
 90c:	9e 01       	movw	r18, r28
 90e:	41 15       	cp	r20, r1
 910:	51 05       	cpc	r21, r1
 912:	f1 f0       	breq	.+60     	; 0x950 <free+0x92>
 914:	ea 01       	movw	r28, r20
 916:	f5 cf       	rjmp	.-22     	; 0x902 <free+0x44>
 918:	d3 83       	std	Z+3, r29	; 0x03
 91a:	c2 83       	std	Z+2, r28	; 0x02
 91c:	40 81       	ld	r20, Z
 91e:	51 81       	ldd	r21, Z+1	; 0x01
 920:	84 0f       	add	r24, r20
 922:	95 1f       	adc	r25, r21
 924:	c8 17       	cp	r28, r24
 926:	d9 07       	cpc	r29, r25
 928:	59 f4       	brne	.+22     	; 0x940 <free+0x82>
 92a:	88 81       	ld	r24, Y
 92c:	99 81       	ldd	r25, Y+1	; 0x01
 92e:	84 0f       	add	r24, r20
 930:	95 1f       	adc	r25, r21
 932:	02 96       	adiw	r24, 0x02	; 2
 934:	91 83       	std	Z+1, r25	; 0x01
 936:	80 83       	st	Z, r24
 938:	8a 81       	ldd	r24, Y+2	; 0x02
 93a:	9b 81       	ldd	r25, Y+3	; 0x03
 93c:	93 83       	std	Z+3, r25	; 0x03
 93e:	82 83       	std	Z+2, r24	; 0x02
 940:	21 15       	cp	r18, r1
 942:	31 05       	cpc	r19, r1
 944:	29 f4       	brne	.+10     	; 0x950 <free+0x92>
 946:	f0 93 4a 01 	sts	0x014A, r31	; 0x80014a <__flp+0x1>
 94a:	e0 93 49 01 	sts	0x0149, r30	; 0x800149 <__flp>
 94e:	3d c0       	rjmp	.+122    	; 0x9ca <free+0x10c>
 950:	e9 01       	movw	r28, r18
 952:	fb 83       	std	Y+3, r31	; 0x03
 954:	ea 83       	std	Y+2, r30	; 0x02
 956:	49 91       	ld	r20, Y+
 958:	59 91       	ld	r21, Y+
 95a:	c4 0f       	add	r28, r20
 95c:	d5 1f       	adc	r29, r21
 95e:	ec 17       	cp	r30, r28
 960:	fd 07       	cpc	r31, r29
 962:	61 f4       	brne	.+24     	; 0x97c <free+0xbe>
 964:	80 81       	ld	r24, Z
 966:	91 81       	ldd	r25, Z+1	; 0x01
 968:	84 0f       	add	r24, r20
 96a:	95 1f       	adc	r25, r21
 96c:	02 96       	adiw	r24, 0x02	; 2
 96e:	e9 01       	movw	r28, r18
 970:	99 83       	std	Y+1, r25	; 0x01
 972:	88 83       	st	Y, r24
 974:	82 81       	ldd	r24, Z+2	; 0x02
 976:	93 81       	ldd	r25, Z+3	; 0x03
 978:	9b 83       	std	Y+3, r25	; 0x03
 97a:	8a 83       	std	Y+2, r24	; 0x02
 97c:	e0 e0       	ldi	r30, 0x00	; 0
 97e:	f0 e0       	ldi	r31, 0x00	; 0
 980:	12 96       	adiw	r26, 0x02	; 2
 982:	8d 91       	ld	r24, X+
 984:	9c 91       	ld	r25, X
 986:	13 97       	sbiw	r26, 0x03	; 3
 988:	00 97       	sbiw	r24, 0x00	; 0
 98a:	19 f0       	breq	.+6      	; 0x992 <free+0xd4>
 98c:	fd 01       	movw	r30, r26
 98e:	dc 01       	movw	r26, r24
 990:	f7 cf       	rjmp	.-18     	; 0x980 <free+0xc2>
 992:	8d 91       	ld	r24, X+
 994:	9c 91       	ld	r25, X
 996:	11 97       	sbiw	r26, 0x01	; 1
 998:	9d 01       	movw	r18, r26
 99a:	2e 5f       	subi	r18, 0xFE	; 254
 99c:	3f 4f       	sbci	r19, 0xFF	; 255
 99e:	82 0f       	add	r24, r18
 9a0:	93 1f       	adc	r25, r19
 9a2:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 9a6:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 9aa:	28 17       	cp	r18, r24
 9ac:	39 07       	cpc	r19, r25
 9ae:	69 f4       	brne	.+26     	; 0x9ca <free+0x10c>
 9b0:	30 97       	sbiw	r30, 0x00	; 0
 9b2:	29 f4       	brne	.+10     	; 0x9be <free+0x100>
 9b4:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__flp+0x1>
 9b8:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__flp>
 9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <free+0x104>
 9be:	13 82       	std	Z+3, r1	; 0x03
 9c0:	12 82       	std	Z+2, r1	; 0x02
 9c2:	b0 93 48 01 	sts	0x0148, r27	; 0x800148 <__brkval+0x1>
 9c6:	a0 93 47 01 	sts	0x0147, r26	; 0x800147 <__brkval>
 9ca:	df 91       	pop	r29
 9cc:	cf 91       	pop	r28
 9ce:	08 95       	ret

000009d0 <strnlen_P>:
 9d0:	fc 01       	movw	r30, r24
 9d2:	05 90       	lpm	r0, Z+
 9d4:	61 50       	subi	r22, 0x01	; 1
 9d6:	70 40       	sbci	r23, 0x00	; 0
 9d8:	01 10       	cpse	r0, r1
 9da:	d8 f7       	brcc	.-10     	; 0x9d2 <strnlen_P+0x2>
 9dc:	80 95       	com	r24
 9de:	90 95       	com	r25
 9e0:	8e 0f       	add	r24, r30
 9e2:	9f 1f       	adc	r25, r31
 9e4:	08 95       	ret

000009e6 <memset>:
 9e6:	dc 01       	movw	r26, r24
 9e8:	01 c0       	rjmp	.+2      	; 0x9ec <memset+0x6>
 9ea:	6d 93       	st	X+, r22
 9ec:	41 50       	subi	r20, 0x01	; 1
 9ee:	50 40       	sbci	r21, 0x00	; 0
 9f0:	e0 f7       	brcc	.-8      	; 0x9ea <memset+0x4>
 9f2:	08 95       	ret

000009f4 <strnlen>:
 9f4:	fc 01       	movw	r30, r24
 9f6:	61 50       	subi	r22, 0x01	; 1
 9f8:	70 40       	sbci	r23, 0x00	; 0
 9fa:	01 90       	ld	r0, Z+
 9fc:	01 10       	cpse	r0, r1
 9fe:	d8 f7       	brcc	.-10     	; 0x9f6 <strnlen+0x2>
 a00:	80 95       	com	r24
 a02:	90 95       	com	r25
 a04:	8e 0f       	add	r24, r30
 a06:	9f 1f       	adc	r25, r31
 a08:	08 95       	ret

00000a0a <fputc>:
 a0a:	0f 93       	push	r16
 a0c:	1f 93       	push	r17
 a0e:	cf 93       	push	r28
 a10:	df 93       	push	r29
 a12:	fb 01       	movw	r30, r22
 a14:	23 81       	ldd	r18, Z+3	; 0x03
 a16:	21 fd       	sbrc	r18, 1
 a18:	03 c0       	rjmp	.+6      	; 0xa20 <fputc+0x16>
 a1a:	8f ef       	ldi	r24, 0xFF	; 255
 a1c:	9f ef       	ldi	r25, 0xFF	; 255
 a1e:	2c c0       	rjmp	.+88     	; 0xa78 <fputc+0x6e>
 a20:	22 ff       	sbrs	r18, 2
 a22:	16 c0       	rjmp	.+44     	; 0xa50 <fputc+0x46>
 a24:	46 81       	ldd	r20, Z+6	; 0x06
 a26:	57 81       	ldd	r21, Z+7	; 0x07
 a28:	24 81       	ldd	r18, Z+4	; 0x04
 a2a:	35 81       	ldd	r19, Z+5	; 0x05
 a2c:	42 17       	cp	r20, r18
 a2e:	53 07       	cpc	r21, r19
 a30:	44 f4       	brge	.+16     	; 0xa42 <fputc+0x38>
 a32:	a0 81       	ld	r26, Z
 a34:	b1 81       	ldd	r27, Z+1	; 0x01
 a36:	9d 01       	movw	r18, r26
 a38:	2f 5f       	subi	r18, 0xFF	; 255
 a3a:	3f 4f       	sbci	r19, 0xFF	; 255
 a3c:	31 83       	std	Z+1, r19	; 0x01
 a3e:	20 83       	st	Z, r18
 a40:	8c 93       	st	X, r24
 a42:	26 81       	ldd	r18, Z+6	; 0x06
 a44:	37 81       	ldd	r19, Z+7	; 0x07
 a46:	2f 5f       	subi	r18, 0xFF	; 255
 a48:	3f 4f       	sbci	r19, 0xFF	; 255
 a4a:	37 83       	std	Z+7, r19	; 0x07
 a4c:	26 83       	std	Z+6, r18	; 0x06
 a4e:	14 c0       	rjmp	.+40     	; 0xa78 <fputc+0x6e>
 a50:	8b 01       	movw	r16, r22
 a52:	ec 01       	movw	r28, r24
 a54:	fb 01       	movw	r30, r22
 a56:	00 84       	ldd	r0, Z+8	; 0x08
 a58:	f1 85       	ldd	r31, Z+9	; 0x09
 a5a:	e0 2d       	mov	r30, r0
 a5c:	09 95       	icall
 a5e:	89 2b       	or	r24, r25
 a60:	e1 f6       	brne	.-72     	; 0xa1a <fputc+0x10>
 a62:	d8 01       	movw	r26, r16
 a64:	16 96       	adiw	r26, 0x06	; 6
 a66:	8d 91       	ld	r24, X+
 a68:	9c 91       	ld	r25, X
 a6a:	17 97       	sbiw	r26, 0x07	; 7
 a6c:	01 96       	adiw	r24, 0x01	; 1
 a6e:	17 96       	adiw	r26, 0x07	; 7
 a70:	9c 93       	st	X, r25
 a72:	8e 93       	st	-X, r24
 a74:	16 97       	sbiw	r26, 0x06	; 6
 a76:	ce 01       	movw	r24, r28
 a78:	df 91       	pop	r29
 a7a:	cf 91       	pop	r28
 a7c:	1f 91       	pop	r17
 a7e:	0f 91       	pop	r16
 a80:	08 95       	ret

00000a82 <__ultoa_invert>:
 a82:	fa 01       	movw	r30, r20
 a84:	aa 27       	eor	r26, r26
 a86:	28 30       	cpi	r18, 0x08	; 8
 a88:	51 f1       	breq	.+84     	; 0xade <__ultoa_invert+0x5c>
 a8a:	20 31       	cpi	r18, 0x10	; 16
 a8c:	81 f1       	breq	.+96     	; 0xaee <__ultoa_invert+0x6c>
 a8e:	e8 94       	clt
 a90:	6f 93       	push	r22
 a92:	6e 7f       	andi	r22, 0xFE	; 254
 a94:	6e 5f       	subi	r22, 0xFE	; 254
 a96:	7f 4f       	sbci	r23, 0xFF	; 255
 a98:	8f 4f       	sbci	r24, 0xFF	; 255
 a9a:	9f 4f       	sbci	r25, 0xFF	; 255
 a9c:	af 4f       	sbci	r26, 0xFF	; 255
 a9e:	b1 e0       	ldi	r27, 0x01	; 1
 aa0:	3e d0       	rcall	.+124    	; 0xb1e <__ultoa_invert+0x9c>
 aa2:	b4 e0       	ldi	r27, 0x04	; 4
 aa4:	3c d0       	rcall	.+120    	; 0xb1e <__ultoa_invert+0x9c>
 aa6:	67 0f       	add	r22, r23
 aa8:	78 1f       	adc	r23, r24
 aaa:	89 1f       	adc	r24, r25
 aac:	9a 1f       	adc	r25, r26
 aae:	a1 1d       	adc	r26, r1
 ab0:	68 0f       	add	r22, r24
 ab2:	79 1f       	adc	r23, r25
 ab4:	8a 1f       	adc	r24, r26
 ab6:	91 1d       	adc	r25, r1
 ab8:	a1 1d       	adc	r26, r1
 aba:	6a 0f       	add	r22, r26
 abc:	71 1d       	adc	r23, r1
 abe:	81 1d       	adc	r24, r1
 ac0:	91 1d       	adc	r25, r1
 ac2:	a1 1d       	adc	r26, r1
 ac4:	20 d0       	rcall	.+64     	; 0xb06 <__ultoa_invert+0x84>
 ac6:	09 f4       	brne	.+2      	; 0xaca <__ultoa_invert+0x48>
 ac8:	68 94       	set
 aca:	3f 91       	pop	r19
 acc:	2a e0       	ldi	r18, 0x0A	; 10
 ace:	26 9f       	mul	r18, r22
 ad0:	11 24       	eor	r1, r1
 ad2:	30 19       	sub	r19, r0
 ad4:	30 5d       	subi	r19, 0xD0	; 208
 ad6:	31 93       	st	Z+, r19
 ad8:	de f6       	brtc	.-74     	; 0xa90 <__ultoa_invert+0xe>
 ada:	cf 01       	movw	r24, r30
 adc:	08 95       	ret
 ade:	46 2f       	mov	r20, r22
 ae0:	47 70       	andi	r20, 0x07	; 7
 ae2:	40 5d       	subi	r20, 0xD0	; 208
 ae4:	41 93       	st	Z+, r20
 ae6:	b3 e0       	ldi	r27, 0x03	; 3
 ae8:	0f d0       	rcall	.+30     	; 0xb08 <__ultoa_invert+0x86>
 aea:	c9 f7       	brne	.-14     	; 0xade <__ultoa_invert+0x5c>
 aec:	f6 cf       	rjmp	.-20     	; 0xada <__ultoa_invert+0x58>
 aee:	46 2f       	mov	r20, r22
 af0:	4f 70       	andi	r20, 0x0F	; 15
 af2:	40 5d       	subi	r20, 0xD0	; 208
 af4:	4a 33       	cpi	r20, 0x3A	; 58
 af6:	18 f0       	brcs	.+6      	; 0xafe <__ultoa_invert+0x7c>
 af8:	49 5d       	subi	r20, 0xD9	; 217
 afa:	31 fd       	sbrc	r19, 1
 afc:	40 52       	subi	r20, 0x20	; 32
 afe:	41 93       	st	Z+, r20
 b00:	02 d0       	rcall	.+4      	; 0xb06 <__ultoa_invert+0x84>
 b02:	a9 f7       	brne	.-22     	; 0xaee <__ultoa_invert+0x6c>
 b04:	ea cf       	rjmp	.-44     	; 0xada <__ultoa_invert+0x58>
 b06:	b4 e0       	ldi	r27, 0x04	; 4
 b08:	a6 95       	lsr	r26
 b0a:	97 95       	ror	r25
 b0c:	87 95       	ror	r24
 b0e:	77 95       	ror	r23
 b10:	67 95       	ror	r22
 b12:	ba 95       	dec	r27
 b14:	c9 f7       	brne	.-14     	; 0xb08 <__ultoa_invert+0x86>
 b16:	00 97       	sbiw	r24, 0x00	; 0
 b18:	61 05       	cpc	r22, r1
 b1a:	71 05       	cpc	r23, r1
 b1c:	08 95       	ret
 b1e:	9b 01       	movw	r18, r22
 b20:	ac 01       	movw	r20, r24
 b22:	0a 2e       	mov	r0, r26
 b24:	06 94       	lsr	r0
 b26:	57 95       	ror	r21
 b28:	47 95       	ror	r20
 b2a:	37 95       	ror	r19
 b2c:	27 95       	ror	r18
 b2e:	ba 95       	dec	r27
 b30:	c9 f7       	brne	.-14     	; 0xb24 <__ultoa_invert+0xa2>
 b32:	62 0f       	add	r22, r18
 b34:	73 1f       	adc	r23, r19
 b36:	84 1f       	adc	r24, r20
 b38:	95 1f       	adc	r25, r21
 b3a:	a0 1d       	adc	r26, r0
 b3c:	08 95       	ret

00000b3e <__prologue_saves__>:
 b3e:	2f 92       	push	r2
 b40:	3f 92       	push	r3
 b42:	4f 92       	push	r4
 b44:	5f 92       	push	r5
 b46:	6f 92       	push	r6
 b48:	7f 92       	push	r7
 b4a:	8f 92       	push	r8
 b4c:	9f 92       	push	r9
 b4e:	af 92       	push	r10
 b50:	bf 92       	push	r11
 b52:	cf 92       	push	r12
 b54:	df 92       	push	r13
 b56:	ef 92       	push	r14
 b58:	ff 92       	push	r15
 b5a:	0f 93       	push	r16
 b5c:	1f 93       	push	r17
 b5e:	cf 93       	push	r28
 b60:	df 93       	push	r29
 b62:	cd b7       	in	r28, 0x3d	; 61
 b64:	de b7       	in	r29, 0x3e	; 62
 b66:	ca 1b       	sub	r28, r26
 b68:	db 0b       	sbc	r29, r27
 b6a:	0f b6       	in	r0, 0x3f	; 63
 b6c:	f8 94       	cli
 b6e:	de bf       	out	0x3e, r29	; 62
 b70:	0f be       	out	0x3f, r0	; 63
 b72:	cd bf       	out	0x3d, r28	; 61
 b74:	09 94       	ijmp

00000b76 <__epilogue_restores__>:
 b76:	2a 88       	ldd	r2, Y+18	; 0x12
 b78:	39 88       	ldd	r3, Y+17	; 0x11
 b7a:	48 88       	ldd	r4, Y+16	; 0x10
 b7c:	5f 84       	ldd	r5, Y+15	; 0x0f
 b7e:	6e 84       	ldd	r6, Y+14	; 0x0e
 b80:	7d 84       	ldd	r7, Y+13	; 0x0d
 b82:	8c 84       	ldd	r8, Y+12	; 0x0c
 b84:	9b 84       	ldd	r9, Y+11	; 0x0b
 b86:	aa 84       	ldd	r10, Y+10	; 0x0a
 b88:	b9 84       	ldd	r11, Y+9	; 0x09
 b8a:	c8 84       	ldd	r12, Y+8	; 0x08
 b8c:	df 80       	ldd	r13, Y+7	; 0x07
 b8e:	ee 80       	ldd	r14, Y+6	; 0x06
 b90:	fd 80       	ldd	r15, Y+5	; 0x05
 b92:	0c 81       	ldd	r16, Y+4	; 0x04
 b94:	1b 81       	ldd	r17, Y+3	; 0x03
 b96:	aa 81       	ldd	r26, Y+2	; 0x02
 b98:	b9 81       	ldd	r27, Y+1	; 0x01
 b9a:	ce 0f       	add	r28, r30
 b9c:	d1 1d       	adc	r29, r1
 b9e:	0f b6       	in	r0, 0x3f	; 63
 ba0:	f8 94       	cli
 ba2:	de bf       	out	0x3e, r29	; 62
 ba4:	0f be       	out	0x3f, r0	; 63
 ba6:	cd bf       	out	0x3d, r28	; 61
 ba8:	ed 01       	movw	r28, r26
 baa:	08 95       	ret

00000bac <_exit>:
 bac:	f8 94       	cli

00000bae <__stop_program>:
 bae:	ff cf       	rjmp	.-2      	; 0xbae <__stop_program>
