
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000458  000004ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000458  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800106  00800106  000004f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000524  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c61  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092d  00000000  00000000  00001289  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000061b  00000000  00000000  00001bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  000021d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050e  00000000  00000000  0000239c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000039b  00000000  00000000  000028aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00002c45  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e5       	ldi	r30, 0x58	; 88
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a1 31       	cpi	r26, 0x11	; 17
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 76 00 	call	0xec	; 0xec <main>
  a6:	0c 94 2a 02 	jmp	0x454	; 0x454 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:
    GICR |= (1<<INT0);
	
	MCUCR |= (1<<ISC00);
	MCUCR |= (1<<ISC01);
	
	sei();
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <__vector_1>:
}

ISR(INT0_vect){
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	8f 93       	push	r24
    BUSY_flag = 1;
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
}
  e0:	8f 91       	pop	r24
  e2:	0f 90       	pop	r0
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	0f 90       	pop	r0
  e8:	1f 90       	pop	r1
  ea:	18 95       	reti

000000ec <main>:
#include "SRAM/SRAMdrv.h"
#include "ADC/ADCdrv.h"

int main(void)
{
	USART_Init(MYUBRR);
  ec:	8f e1       	ldi	r24, 0x1F	; 31
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 8e 00 	call	0x11c	; 0x11c <USART_Init>
	XMEM_init();
  f4:	0e 94 7f 00 	call	0xfe	; 0xfe <XMEM_init>
	ADC_Init();
  f8:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
  fc:	ff cf       	rjmp	.-2      	; 0xfc <main+0x10>

000000fe <XMEM_init>:
#include "SRAMdrv.h"

void XMEM_init(void){
	MCUCR |= (1<<SRE); //enable XMEM
  fe:	85 b7       	in	r24, 0x35	; 53
 100:	80 68       	ori	r24, 0x80	; 128
 102:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2); // Masking P7-P4
 104:	80 b7       	in	r24, 0x30	; 48
 106:	80 62       	ori	r24, 0x20	; 32
 108:	80 bf       	out	0x30, r24	; 48
 10a:	08 95       	ret

0000010c <USART_Transmit>:
#include "UARTdrv.h"

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 10c:	5d 9b       	sbis	0x0b, 5	; 11
 10e:	fe cf       	rjmp	.-4      	; 0x10c <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 110:	8c b9       	out	0x0c, r24	; 12
 112:	08 95       	ret

00000114 <USART_Receive>:
}
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 114:	5f 9b       	sbis	0x0b, 7	; 11
 116:	fe cf       	rjmp	.-4      	; 0x114 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 118:	8c b1       	in	r24, 0x0c	; 12
}
 11a:	08 95       	ret

0000011c <USART_Init>:
void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 11c:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 11e:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 120:	88 e1       	ldi	r24, 0x18	; 24
 122:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 124:	8e e8       	ldi	r24, 0x8E	; 142
 126:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit,USART_Receive);
 128:	6a e8       	ldi	r22, 0x8A	; 138
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	86 e8       	ldi	r24, 0x86	; 134
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 9b 00 	call	0x136	; 0x136 <fdevopen>
 134:	08 95       	ret

00000136 <fdevopen>:
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	00 97       	sbiw	r24, 0x00	; 0
 140:	31 f4       	brne	.+12     	; 0x14e <fdevopen+0x18>
 142:	61 15       	cp	r22, r1
 144:	71 05       	cpc	r23, r1
 146:	19 f4       	brne	.+6      	; 0x14e <fdevopen+0x18>
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	3a c0       	rjmp	.+116    	; 0x1c2 <fdevopen+0x8c>
 14e:	8b 01       	movw	r16, r22
 150:	ec 01       	movw	r28, r24
 152:	6e e0       	ldi	r22, 0x0E	; 14
 154:	70 e0       	ldi	r23, 0x00	; 0
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <calloc>
 15e:	fc 01       	movw	r30, r24
 160:	89 2b       	or	r24, r25
 162:	91 f3       	breq	.-28     	; 0x148 <fdevopen+0x12>
 164:	80 e8       	ldi	r24, 0x80	; 128
 166:	83 83       	std	Z+3, r24	; 0x03
 168:	01 15       	cp	r16, r1
 16a:	11 05       	cpc	r17, r1
 16c:	71 f0       	breq	.+28     	; 0x18a <fdevopen+0x54>
 16e:	13 87       	std	Z+11, r17	; 0x0b
 170:	02 87       	std	Z+10, r16	; 0x0a
 172:	81 e8       	ldi	r24, 0x81	; 129
 174:	83 83       	std	Z+3, r24	; 0x03
 176:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__iob>
 17a:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <__iob+0x1>
 17e:	89 2b       	or	r24, r25
 180:	21 f4       	brne	.+8      	; 0x18a <fdevopen+0x54>
 182:	f0 93 08 01 	sts	0x0108, r31	; 0x800108 <__iob+0x1>
 186:	e0 93 07 01 	sts	0x0107, r30	; 0x800107 <__iob>
 18a:	20 97       	sbiw	r28, 0x00	; 0
 18c:	c9 f0       	breq	.+50     	; 0x1c0 <fdevopen+0x8a>
 18e:	d1 87       	std	Z+9, r29	; 0x09
 190:	c0 87       	std	Z+8, r28	; 0x08
 192:	83 81       	ldd	r24, Z+3	; 0x03
 194:	82 60       	ori	r24, 0x02	; 2
 196:	83 83       	std	Z+3, r24	; 0x03
 198:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__iob+0x2>
 19c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <__iob+0x3>
 1a0:	89 2b       	or	r24, r25
 1a2:	71 f4       	brne	.+28     	; 0x1c0 <fdevopen+0x8a>
 1a4:	f0 93 0a 01 	sts	0x010A, r31	; 0x80010a <__iob+0x3>
 1a8:	e0 93 09 01 	sts	0x0109, r30	; 0x800109 <__iob+0x2>
 1ac:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <__iob+0x4>
 1b0:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <__iob+0x5>
 1b4:	89 2b       	or	r24, r25
 1b6:	21 f4       	brne	.+8      	; 0x1c0 <fdevopen+0x8a>
 1b8:	f0 93 0c 01 	sts	0x010C, r31	; 0x80010c <__iob+0x5>
 1bc:	e0 93 0b 01 	sts	0x010B, r30	; 0x80010b <__iob+0x4>
 1c0:	cf 01       	movw	r24, r30
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	08 95       	ret

000001cc <calloc>:
 1cc:	0f 93       	push	r16
 1ce:	1f 93       	push	r17
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	86 9f       	mul	r24, r22
 1d6:	80 01       	movw	r16, r0
 1d8:	87 9f       	mul	r24, r23
 1da:	10 0d       	add	r17, r0
 1dc:	96 9f       	mul	r25, r22
 1de:	10 0d       	add	r17, r0
 1e0:	11 24       	eor	r1, r1
 1e2:	c8 01       	movw	r24, r16
 1e4:	0e 94 02 01 	call	0x204	; 0x204 <malloc>
 1e8:	ec 01       	movw	r28, r24
 1ea:	00 97       	sbiw	r24, 0x00	; 0
 1ec:	29 f0       	breq	.+10     	; 0x1f8 <calloc+0x2c>
 1ee:	a8 01       	movw	r20, r16
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	0e 94 23 02 	call	0x446	; 0x446 <memset>
 1f8:	ce 01       	movw	r24, r28
 1fa:	df 91       	pop	r29
 1fc:	cf 91       	pop	r28
 1fe:	1f 91       	pop	r17
 200:	0f 91       	pop	r16
 202:	08 95       	ret

00000204 <malloc>:
 204:	0f 93       	push	r16
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	82 30       	cpi	r24, 0x02	; 2
 20e:	91 05       	cpc	r25, r1
 210:	10 f4       	brcc	.+4      	; 0x216 <malloc+0x12>
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <__flp>
 21a:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <__flp+0x1>
 21e:	20 e0       	ldi	r18, 0x00	; 0
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	a0 e0       	ldi	r26, 0x00	; 0
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	30 97       	sbiw	r30, 0x00	; 0
 228:	19 f1       	breq	.+70     	; 0x270 <malloc+0x6c>
 22a:	40 81       	ld	r20, Z
 22c:	51 81       	ldd	r21, Z+1	; 0x01
 22e:	02 81       	ldd	r16, Z+2	; 0x02
 230:	13 81       	ldd	r17, Z+3	; 0x03
 232:	48 17       	cp	r20, r24
 234:	59 07       	cpc	r21, r25
 236:	c8 f0       	brcs	.+50     	; 0x26a <malloc+0x66>
 238:	84 17       	cp	r24, r20
 23a:	95 07       	cpc	r25, r21
 23c:	69 f4       	brne	.+26     	; 0x258 <malloc+0x54>
 23e:	10 97       	sbiw	r26, 0x00	; 0
 240:	31 f0       	breq	.+12     	; 0x24e <malloc+0x4a>
 242:	12 96       	adiw	r26, 0x02	; 2
 244:	0c 93       	st	X, r16
 246:	12 97       	sbiw	r26, 0x02	; 2
 248:	13 96       	adiw	r26, 0x03	; 3
 24a:	1c 93       	st	X, r17
 24c:	27 c0       	rjmp	.+78     	; 0x29c <malloc+0x98>
 24e:	00 93 0f 01 	sts	0x010F, r16	; 0x80010f <__flp>
 252:	10 93 10 01 	sts	0x0110, r17	; 0x800110 <__flp+0x1>
 256:	22 c0       	rjmp	.+68     	; 0x29c <malloc+0x98>
 258:	21 15       	cp	r18, r1
 25a:	31 05       	cpc	r19, r1
 25c:	19 f0       	breq	.+6      	; 0x264 <malloc+0x60>
 25e:	42 17       	cp	r20, r18
 260:	53 07       	cpc	r21, r19
 262:	18 f4       	brcc	.+6      	; 0x26a <malloc+0x66>
 264:	9a 01       	movw	r18, r20
 266:	bd 01       	movw	r22, r26
 268:	ef 01       	movw	r28, r30
 26a:	df 01       	movw	r26, r30
 26c:	f8 01       	movw	r30, r16
 26e:	db cf       	rjmp	.-74     	; 0x226 <malloc+0x22>
 270:	21 15       	cp	r18, r1
 272:	31 05       	cpc	r19, r1
 274:	f9 f0       	breq	.+62     	; 0x2b4 <malloc+0xb0>
 276:	28 1b       	sub	r18, r24
 278:	39 0b       	sbc	r19, r25
 27a:	24 30       	cpi	r18, 0x04	; 4
 27c:	31 05       	cpc	r19, r1
 27e:	80 f4       	brcc	.+32     	; 0x2a0 <malloc+0x9c>
 280:	8a 81       	ldd	r24, Y+2	; 0x02
 282:	9b 81       	ldd	r25, Y+3	; 0x03
 284:	61 15       	cp	r22, r1
 286:	71 05       	cpc	r23, r1
 288:	21 f0       	breq	.+8      	; 0x292 <malloc+0x8e>
 28a:	fb 01       	movw	r30, r22
 28c:	93 83       	std	Z+3, r25	; 0x03
 28e:	82 83       	std	Z+2, r24	; 0x02
 290:	04 c0       	rjmp	.+8      	; 0x29a <malloc+0x96>
 292:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <__flp+0x1>
 296:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <__flp>
 29a:	fe 01       	movw	r30, r28
 29c:	32 96       	adiw	r30, 0x02	; 2
 29e:	44 c0       	rjmp	.+136    	; 0x328 <malloc+0x124>
 2a0:	fe 01       	movw	r30, r28
 2a2:	e2 0f       	add	r30, r18
 2a4:	f3 1f       	adc	r31, r19
 2a6:	81 93       	st	Z+, r24
 2a8:	91 93       	st	Z+, r25
 2aa:	22 50       	subi	r18, 0x02	; 2
 2ac:	31 09       	sbc	r19, r1
 2ae:	39 83       	std	Y+1, r19	; 0x01
 2b0:	28 83       	st	Y, r18
 2b2:	3a c0       	rjmp	.+116    	; 0x328 <malloc+0x124>
 2b4:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 2b8:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 2bc:	23 2b       	or	r18, r19
 2be:	41 f4       	brne	.+16     	; 0x2d0 <malloc+0xcc>
 2c0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 2c4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 2c8:	30 93 0e 01 	sts	0x010E, r19	; 0x80010e <__brkval+0x1>
 2cc:	20 93 0d 01 	sts	0x010D, r18	; 0x80010d <__brkval>
 2d0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2d4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2d8:	21 15       	cp	r18, r1
 2da:	31 05       	cpc	r19, r1
 2dc:	41 f4       	brne	.+16     	; 0x2ee <malloc+0xea>
 2de:	2d b7       	in	r18, 0x3d	; 61
 2e0:	3e b7       	in	r19, 0x3e	; 62
 2e2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 2e6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 2ea:	24 1b       	sub	r18, r20
 2ec:	35 0b       	sbc	r19, r21
 2ee:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <__brkval>
 2f2:	f0 91 0e 01 	lds	r31, 0x010E	; 0x80010e <__brkval+0x1>
 2f6:	e2 17       	cp	r30, r18
 2f8:	f3 07       	cpc	r31, r19
 2fa:	a0 f4       	brcc	.+40     	; 0x324 <malloc+0x120>
 2fc:	2e 1b       	sub	r18, r30
 2fe:	3f 0b       	sbc	r19, r31
 300:	28 17       	cp	r18, r24
 302:	39 07       	cpc	r19, r25
 304:	78 f0       	brcs	.+30     	; 0x324 <malloc+0x120>
 306:	ac 01       	movw	r20, r24
 308:	4e 5f       	subi	r20, 0xFE	; 254
 30a:	5f 4f       	sbci	r21, 0xFF	; 255
 30c:	24 17       	cp	r18, r20
 30e:	35 07       	cpc	r19, r21
 310:	48 f0       	brcs	.+18     	; 0x324 <malloc+0x120>
 312:	4e 0f       	add	r20, r30
 314:	5f 1f       	adc	r21, r31
 316:	50 93 0e 01 	sts	0x010E, r21	; 0x80010e <__brkval+0x1>
 31a:	40 93 0d 01 	sts	0x010D, r20	; 0x80010d <__brkval>
 31e:	81 93       	st	Z+, r24
 320:	91 93       	st	Z+, r25
 322:	02 c0       	rjmp	.+4      	; 0x328 <malloc+0x124>
 324:	e0 e0       	ldi	r30, 0x00	; 0
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	cf 01       	movw	r24, r30
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	1f 91       	pop	r17
 330:	0f 91       	pop	r16
 332:	08 95       	ret

00000334 <free>:
 334:	cf 93       	push	r28
 336:	df 93       	push	r29
 338:	00 97       	sbiw	r24, 0x00	; 0
 33a:	09 f4       	brne	.+2      	; 0x33e <free+0xa>
 33c:	81 c0       	rjmp	.+258    	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 33e:	fc 01       	movw	r30, r24
 340:	32 97       	sbiw	r30, 0x02	; 2
 342:	13 82       	std	Z+3, r1	; 0x03
 344:	12 82       	std	Z+2, r1	; 0x02
 346:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <__flp>
 34a:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <__flp+0x1>
 34e:	10 97       	sbiw	r26, 0x00	; 0
 350:	81 f4       	brne	.+32     	; 0x372 <free+0x3e>
 352:	20 81       	ld	r18, Z
 354:	31 81       	ldd	r19, Z+1	; 0x01
 356:	82 0f       	add	r24, r18
 358:	93 1f       	adc	r25, r19
 35a:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 35e:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 362:	28 17       	cp	r18, r24
 364:	39 07       	cpc	r19, r25
 366:	51 f5       	brne	.+84     	; 0x3bc <free+0x88>
 368:	f0 93 0e 01 	sts	0x010E, r31	; 0x80010e <__brkval+0x1>
 36c:	e0 93 0d 01 	sts	0x010D, r30	; 0x80010d <__brkval>
 370:	67 c0       	rjmp	.+206    	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 372:	ed 01       	movw	r28, r26
 374:	20 e0       	ldi	r18, 0x00	; 0
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	ce 17       	cp	r28, r30
 37a:	df 07       	cpc	r29, r31
 37c:	40 f4       	brcc	.+16     	; 0x38e <free+0x5a>
 37e:	4a 81       	ldd	r20, Y+2	; 0x02
 380:	5b 81       	ldd	r21, Y+3	; 0x03
 382:	9e 01       	movw	r18, r28
 384:	41 15       	cp	r20, r1
 386:	51 05       	cpc	r21, r1
 388:	f1 f0       	breq	.+60     	; 0x3c6 <free+0x92>
 38a:	ea 01       	movw	r28, r20
 38c:	f5 cf       	rjmp	.-22     	; 0x378 <free+0x44>
 38e:	d3 83       	std	Z+3, r29	; 0x03
 390:	c2 83       	std	Z+2, r28	; 0x02
 392:	40 81       	ld	r20, Z
 394:	51 81       	ldd	r21, Z+1	; 0x01
 396:	84 0f       	add	r24, r20
 398:	95 1f       	adc	r25, r21
 39a:	c8 17       	cp	r28, r24
 39c:	d9 07       	cpc	r29, r25
 39e:	59 f4       	brne	.+22     	; 0x3b6 <free+0x82>
 3a0:	88 81       	ld	r24, Y
 3a2:	99 81       	ldd	r25, Y+1	; 0x01
 3a4:	84 0f       	add	r24, r20
 3a6:	95 1f       	adc	r25, r21
 3a8:	02 96       	adiw	r24, 0x02	; 2
 3aa:	91 83       	std	Z+1, r25	; 0x01
 3ac:	80 83       	st	Z, r24
 3ae:	8a 81       	ldd	r24, Y+2	; 0x02
 3b0:	9b 81       	ldd	r25, Y+3	; 0x03
 3b2:	93 83       	std	Z+3, r25	; 0x03
 3b4:	82 83       	std	Z+2, r24	; 0x02
 3b6:	21 15       	cp	r18, r1
 3b8:	31 05       	cpc	r19, r1
 3ba:	29 f4       	brne	.+10     	; 0x3c6 <free+0x92>
 3bc:	f0 93 10 01 	sts	0x0110, r31	; 0x800110 <__flp+0x1>
 3c0:	e0 93 0f 01 	sts	0x010F, r30	; 0x80010f <__flp>
 3c4:	3d c0       	rjmp	.+122    	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 3c6:	e9 01       	movw	r28, r18
 3c8:	fb 83       	std	Y+3, r31	; 0x03
 3ca:	ea 83       	std	Y+2, r30	; 0x02
 3cc:	49 91       	ld	r20, Y+
 3ce:	59 91       	ld	r21, Y+
 3d0:	c4 0f       	add	r28, r20
 3d2:	d5 1f       	adc	r29, r21
 3d4:	ec 17       	cp	r30, r28
 3d6:	fd 07       	cpc	r31, r29
 3d8:	61 f4       	brne	.+24     	; 0x3f2 <free+0xbe>
 3da:	80 81       	ld	r24, Z
 3dc:	91 81       	ldd	r25, Z+1	; 0x01
 3de:	84 0f       	add	r24, r20
 3e0:	95 1f       	adc	r25, r21
 3e2:	02 96       	adiw	r24, 0x02	; 2
 3e4:	e9 01       	movw	r28, r18
 3e6:	99 83       	std	Y+1, r25	; 0x01
 3e8:	88 83       	st	Y, r24
 3ea:	82 81       	ldd	r24, Z+2	; 0x02
 3ec:	93 81       	ldd	r25, Z+3	; 0x03
 3ee:	9b 83       	std	Y+3, r25	; 0x03
 3f0:	8a 83       	std	Y+2, r24	; 0x02
 3f2:	e0 e0       	ldi	r30, 0x00	; 0
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	12 96       	adiw	r26, 0x02	; 2
 3f8:	8d 91       	ld	r24, X+
 3fa:	9c 91       	ld	r25, X
 3fc:	13 97       	sbiw	r26, 0x03	; 3
 3fe:	00 97       	sbiw	r24, 0x00	; 0
 400:	19 f0       	breq	.+6      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 402:	fd 01       	movw	r30, r26
 404:	dc 01       	movw	r26, r24
 406:	f7 cf       	rjmp	.-18     	; 0x3f6 <free+0xc2>
 408:	8d 91       	ld	r24, X+
 40a:	9c 91       	ld	r25, X
 40c:	11 97       	sbiw	r26, 0x01	; 1
 40e:	9d 01       	movw	r18, r26
 410:	2e 5f       	subi	r18, 0xFE	; 254
 412:	3f 4f       	sbci	r19, 0xFF	; 255
 414:	82 0f       	add	r24, r18
 416:	93 1f       	adc	r25, r19
 418:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 41c:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 420:	28 17       	cp	r18, r24
 422:	39 07       	cpc	r19, r25
 424:	69 f4       	brne	.+26     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 426:	30 97       	sbiw	r30, 0x00	; 0
 428:	29 f4       	brne	.+10     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 42a:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__flp+0x1>
 42e:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp>
 432:	02 c0       	rjmp	.+4      	; 0x438 <__DATA_REGION_LENGTH__+0x38>
 434:	13 82       	std	Z+3, r1	; 0x03
 436:	12 82       	std	Z+2, r1	; 0x02
 438:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <__brkval+0x1>
 43c:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <__brkval>
 440:	df 91       	pop	r29
 442:	cf 91       	pop	r28
 444:	08 95       	ret

00000446 <memset>:
 446:	dc 01       	movw	r26, r24
 448:	01 c0       	rjmp	.+2      	; 0x44c <memset+0x6>
 44a:	6d 93       	st	X+, r22
 44c:	41 50       	subi	r20, 0x01	; 1
 44e:	50 40       	sbci	r21, 0x00	; 0
 450:	e0 f7       	brcc	.-8      	; 0x44a <memset+0x4>
 452:	08 95       	ret

00000454 <_exit>:
 454:	f8 94       	cli

00000456 <__stop_program>:
 456:	ff cf       	rjmp	.-2      	; 0x456 <__stop_program>
