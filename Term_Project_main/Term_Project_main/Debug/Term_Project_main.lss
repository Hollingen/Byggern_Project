
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000af0  00000b84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000af0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800124  00800124  00000ba8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ba8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d26  00000000  00000000  00000d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c3  00000000  00000000  00001a2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000700  00000000  00000000  000023f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  00002af4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000559  00000000  00000000  00002cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000039b  00000000  00000000  00003215  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000035b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 ef       	ldi	r30, 0xF0	; 240
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 32       	cpi	r26, 0x24	; 36
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 e2       	ldi	r26, 0x24	; 36
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a1 33       	cpi	r26, 0x31	; 49
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <main>
  a6:	0c 94 76 05 	jmp	0xaec	; 0xaec <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:

uint8_t BUSY_flag = 0;

void ADC_Init(void){

    TCCR1A = (1<<COM1A1)|(1<<WGM11);  // Clear OCnA/OCnB on Compare Match, set OCnA/OCnB at TOP.
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10);   // Fast PWM, TOP=ICRn, Update OCRnx on TOP. // Prescaler = 1
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
	ICR1 = 5;
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
	OCR1A = 2;  // 50% Duty Cycle, ~0,8Mhz
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
	
	DDRD |= (1<<PD5);
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <ADC_read>:

}

uint8_t ADC_read(uint8_t channel){
  ce:	0f 93       	push	r16
  d0:	1f 93       	push	r17
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	d8 2f       	mov	r29, r24
	
	volatile *adc_in = (char *) ADC_ADDRESS;
	
	uint8_t test0, test1, test2, test3;
	
	adc_in[0] = 0x00;
  d8:	10 92 01 14 	sts	0x1401, r1	; 0x801401 <__bss_end+0x12d0>
  dc:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__bss_end+0x12cf>
	
	sei();
  e0:	78 94       	sei
	while(!BUSY_flag){};
  e2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
  e6:	88 23       	and	r24, r24
  e8:	e1 f3       	breq	.-8      	; 0xe2 <ADC_read+0x14>
	cli();
  ea:	f8 94       	cli
	
	test0 = XMEM_read(0x400);
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	94 e0       	ldi	r25, 0x04	; 4
  f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <XMEM_read>
  f4:	18 2f       	mov	r17, r24
	test1 = XMEM_read(0x400);
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	94 e0       	ldi	r25, 0x04	; 4
  fa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <XMEM_read>
  fe:	c8 2f       	mov	r28, r24
	test2 = XMEM_read(0x400);
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	94 e0       	ldi	r25, 0x04	; 4
 104:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <XMEM_read>
 108:	08 2f       	mov	r16, r24
	test3 = XMEM_read(0x400);
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	94 e0       	ldi	r25, 0x04	; 4
 10e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <XMEM_read>
	
	switch (channel){
 112:	d1 30       	cpi	r29, 0x01	; 1
 114:	59 f0       	breq	.+22     	; 0x12c <ADC_read+0x5e>
 116:	40 f0       	brcs	.+16     	; 0x128 <ADC_read+0x5a>
 118:	d2 30       	cpi	r29, 0x02	; 2
 11a:	19 f0       	breq	.+6      	; 0x122 <ADC_read+0x54>
 11c:	d3 30       	cpi	r29, 0x03	; 3
 11e:	39 f0       	breq	.+14     	; 0x12e <ADC_read+0x60>
 120:	02 c0       	rjmp	.+4      	; 0x126 <ADC_read+0x58>
			break;
		case 1:
			return test1;
			break;
		case 2:
			return test2;
 122:	80 2f       	mov	r24, r16
 124:	04 c0       	rjmp	.+8      	; 0x12e <ADC_read+0x60>
			break;
		default:
			break;
	}
	
}
 126:	03 c0       	rjmp	.+6      	; 0x12e <ADC_read+0x60>
	test2 = XMEM_read(0x400);
	test3 = XMEM_read(0x400);
	
	switch (channel){
		case 0:
			return test0;
 128:	81 2f       	mov	r24, r17
 12a:	01 c0       	rjmp	.+2      	; 0x12e <ADC_read+0x60>
			break;
		case 1:
			return test1;
 12c:	8c 2f       	mov	r24, r28
			break;
		default:
			break;
	}
	
}
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	1f 91       	pop	r17
 134:	0f 91       	pop	r16
 136:	08 95       	ret

00000138 <ADC_calibrate>:

void ADC_calibrate(void){
	neutral_data_x = ADC_read(x_axis_ch);
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	0e 94 67 00 	call	0xce	; 0xce <ADC_read>
 13e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <neutral_data_x>
	neutral_data_y = ADC_read(y_axis_ch);
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	0e 94 67 00 	call	0xce	; 0xce <ADC_read>
 148:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <neutral_data_y>
	printf("x offset: %d, y offset: %d\n\r", neutral_data_x, neutral_data_y);
 14c:	1f 92       	push	r1
 14e:	8f 93       	push	r24
 150:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <neutral_data_x>
 154:	1f 92       	push	r1
 156:	8f 93       	push	r24
 158:	86 e0       	ldi	r24, 0x06	; 6
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	9f 93       	push	r25
 15e:	8f 93       	push	r24
 160:	0e 94 54 01 	call	0x2a8	; 0x2a8 <printf>
}
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	0f 90       	pop	r0
 170:	08 95       	ret

00000172 <Int_INIT>:

void Int_INIT(void){
	
    GICR |= (1<<INT0);
 172:	8b b7       	in	r24, 0x3b	; 59
 174:	80 64       	ori	r24, 0x40	; 64
 176:	8b bf       	out	0x3b, r24	; 59
	
	MCUCR |= (1<<ISC00);
 178:	85 b7       	in	r24, 0x35	; 53
 17a:	81 60       	ori	r24, 0x01	; 1
 17c:	85 bf       	out	0x35, r24	; 53
	MCUCR |= (1<<ISC01);
 17e:	85 b7       	in	r24, 0x35	; 53
 180:	82 60       	ori	r24, 0x02	; 2
 182:	85 bf       	out	0x35, r24	; 53
	
	sei();
 184:	78 94       	sei
 186:	08 95       	ret

00000188 <__vector_1>:
}

ISR(INT0_vect){
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	8f 93       	push	r24
    BUSY_flag = 1;
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
}
 19a:	8f 91       	pop	r24
 19c:	0f 90       	pop	r0
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	0f 90       	pop	r0
 1a2:	1f 90       	pop	r1
 1a4:	18 95       	reti

000001a6 <main>:
#include "SRAM/SRAMdrv.h"
#include "ADC/ADCdrv.h"

int main(void)
{
	USART_Init(MYUBRR);
 1a6:	8f e1       	ldi	r24, 0x1F	; 31
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <USART_Init>
	XMEM_init();
 1ae:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <XMEM_init>
	ADC_Init();
 1b2:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
	Int_INIT();
 1b6:	0e 94 b9 00 	call	0x172	; 0x172 <Int_INIT>
    /* Replace with your application code */
    while (1) 
    {
		ADC_calibrate();
 1ba:	0e 94 9c 00 	call	0x138	; 0x138 <ADC_calibrate>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1be:	2f ef       	ldi	r18, 0xFF	; 255
 1c0:	8f ef       	ldi	r24, 0xFF	; 255
 1c2:	9e e0       	ldi	r25, 0x0E	; 14
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0x1e>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0x28>
 1ce:	00 00       	nop
 1d0:	f4 cf       	rjmp	.-24     	; 0x1ba <main+0x14>

000001d2 <XMEM_init>:
	SFIOR |= (1<<XMM2); // Masking P7-P4
}

void XMEM_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	ext_mem[addr]= data;
 1d2:	85 b7       	in	r24, 0x35	; 53
 1d4:	80 68       	ori	r24, 0x80	; 128
 1d6:	85 bf       	out	0x35, r24	; 53
 1d8:	80 b7       	in	r24, 0x30	; 48
 1da:	80 62       	ori	r24, 0x20	; 32
 1dc:	80 bf       	out	0x30, r24	; 48
 1de:	08 95       	ret

000001e0 <XMEM_read>:
}

uint8_t XMEM_read(uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
 1e0:	90 5f       	subi	r25, 0xF0	; 240
 1e2:	fc 01       	movw	r30, r24
 1e4:	80 81       	ld	r24, Z
	return ret_val;
}
 1e6:	08 95       	ret

000001e8 <USART_Transmit>:
#include "UARTdrv.h"

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 1e8:	5d 9b       	sbis	0x0b, 5	; 11
 1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1ec:	8c b9       	out	0x0c, r24	; 12
 1ee:	08 95       	ret

000001f0 <USART_Receive>:
}
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 1f0:	5f 9b       	sbis	0x0b, 7	; 11
 1f2:	fe cf       	rjmp	.-4      	; 0x1f0 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 1f4:	8c b1       	in	r24, 0x0c	; 12
}
 1f6:	08 95       	ret

000001f8 <USART_Init>:
void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 1f8:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 1fa:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 1fc:	88 e1       	ldi	r24, 0x18	; 24
 1fe:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 200:	8e e8       	ldi	r24, 0x8E	; 142
 202:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit,USART_Receive);
 204:	68 ef       	ldi	r22, 0xF8	; 248
 206:	70 e0       	ldi	r23, 0x00	; 0
 208:	84 ef       	ldi	r24, 0xF4	; 244
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	0e 94 09 01 	call	0x212	; 0x212 <fdevopen>
 210:	08 95       	ret

00000212 <fdevopen>:
 212:	0f 93       	push	r16
 214:	1f 93       	push	r17
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	00 97       	sbiw	r24, 0x00	; 0
 21c:	31 f4       	brne	.+12     	; 0x22a <fdevopen+0x18>
 21e:	61 15       	cp	r22, r1
 220:	71 05       	cpc	r23, r1
 222:	19 f4       	brne	.+6      	; 0x22a <fdevopen+0x18>
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	3a c0       	rjmp	.+116    	; 0x29e <fdevopen+0x8c>
 22a:	8b 01       	movw	r16, r22
 22c:	ec 01       	movw	r28, r24
 22e:	6e e0       	ldi	r22, 0x0E	; 14
 230:	70 e0       	ldi	r23, 0x00	; 0
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	0e 94 4b 03 	call	0x696	; 0x696 <calloc>
 23a:	fc 01       	movw	r30, r24
 23c:	89 2b       	or	r24, r25
 23e:	91 f3       	breq	.-28     	; 0x224 <fdevopen+0x12>
 240:	80 e8       	ldi	r24, 0x80	; 128
 242:	83 83       	std	Z+3, r24	; 0x03
 244:	01 15       	cp	r16, r1
 246:	11 05       	cpc	r17, r1
 248:	71 f0       	breq	.+28     	; 0x266 <fdevopen+0x54>
 24a:	13 87       	std	Z+11, r17	; 0x0b
 24c:	02 87       	std	Z+10, r16	; 0x0a
 24e:	81 e8       	ldi	r24, 0x81	; 129
 250:	83 83       	std	Z+3, r24	; 0x03
 252:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <__iob>
 256:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <__iob+0x1>
 25a:	89 2b       	or	r24, r25
 25c:	21 f4       	brne	.+8      	; 0x266 <fdevopen+0x54>
 25e:	f0 93 28 01 	sts	0x0128, r31	; 0x800128 <__iob+0x1>
 262:	e0 93 27 01 	sts	0x0127, r30	; 0x800127 <__iob>
 266:	20 97       	sbiw	r28, 0x00	; 0
 268:	c9 f0       	breq	.+50     	; 0x29c <fdevopen+0x8a>
 26a:	d1 87       	std	Z+9, r29	; 0x09
 26c:	c0 87       	std	Z+8, r28	; 0x08
 26e:	83 81       	ldd	r24, Z+3	; 0x03
 270:	82 60       	ori	r24, 0x02	; 2
 272:	83 83       	std	Z+3, r24	; 0x03
 274:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <__iob+0x2>
 278:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <__iob+0x3>
 27c:	89 2b       	or	r24, r25
 27e:	71 f4       	brne	.+28     	; 0x29c <fdevopen+0x8a>
 280:	f0 93 2a 01 	sts	0x012A, r31	; 0x80012a <__iob+0x3>
 284:	e0 93 29 01 	sts	0x0129, r30	; 0x800129 <__iob+0x2>
 288:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <__iob+0x4>
 28c:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <__iob+0x5>
 290:	89 2b       	or	r24, r25
 292:	21 f4       	brne	.+8      	; 0x29c <fdevopen+0x8a>
 294:	f0 93 2c 01 	sts	0x012C, r31	; 0x80012c <__iob+0x5>
 298:	e0 93 2b 01 	sts	0x012B, r30	; 0x80012b <__iob+0x4>
 29c:	cf 01       	movw	r24, r30
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
 2a2:	1f 91       	pop	r17
 2a4:	0f 91       	pop	r16
 2a6:	08 95       	ret

000002a8 <printf>:
 2a8:	a0 e0       	ldi	r26, 0x00	; 0
 2aa:	b0 e0       	ldi	r27, 0x00	; 0
 2ac:	ea e5       	ldi	r30, 0x5A	; 90
 2ae:	f1 e0       	ldi	r31, 0x01	; 1
 2b0:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__prologue_saves__+0x20>
 2b4:	ae 01       	movw	r20, r28
 2b6:	4b 5f       	subi	r20, 0xFB	; 251
 2b8:	5f 4f       	sbci	r21, 0xFF	; 255
 2ba:	fa 01       	movw	r30, r20
 2bc:	61 91       	ld	r22, Z+
 2be:	71 91       	ld	r23, Z+
 2c0:	af 01       	movw	r20, r30
 2c2:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <__iob+0x2>
 2c6:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <__iob+0x3>
 2ca:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <vfprintf>
 2ce:	e2 e0       	ldi	r30, 0x02	; 2
 2d0:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <__epilogue_restores__+0x20>

000002d4 <vfprintf>:
 2d4:	ab e0       	ldi	r26, 0x0B	; 11
 2d6:	b0 e0       	ldi	r27, 0x00	; 0
 2d8:	e0 e7       	ldi	r30, 0x70	; 112
 2da:	f1 e0       	ldi	r31, 0x01	; 1
 2dc:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__prologue_saves__>
 2e0:	6c 01       	movw	r12, r24
 2e2:	7b 01       	movw	r14, r22
 2e4:	8a 01       	movw	r16, r20
 2e6:	fc 01       	movw	r30, r24
 2e8:	17 82       	std	Z+7, r1	; 0x07
 2ea:	16 82       	std	Z+6, r1	; 0x06
 2ec:	83 81       	ldd	r24, Z+3	; 0x03
 2ee:	81 ff       	sbrs	r24, 1
 2f0:	cc c1       	rjmp	.+920    	; 0x68a <__stack+0x18b>
 2f2:	ce 01       	movw	r24, r28
 2f4:	01 96       	adiw	r24, 0x01	; 1
 2f6:	3c 01       	movw	r6, r24
 2f8:	f6 01       	movw	r30, r12
 2fa:	93 81       	ldd	r25, Z+3	; 0x03
 2fc:	f7 01       	movw	r30, r14
 2fe:	93 fd       	sbrc	r25, 3
 300:	85 91       	lpm	r24, Z+
 302:	93 ff       	sbrs	r25, 3
 304:	81 91       	ld	r24, Z+
 306:	7f 01       	movw	r14, r30
 308:	88 23       	and	r24, r24
 30a:	09 f4       	brne	.+2      	; 0x30e <vfprintf+0x3a>
 30c:	ba c1       	rjmp	.+884    	; 0x682 <__stack+0x183>
 30e:	85 32       	cpi	r24, 0x25	; 37
 310:	39 f4       	brne	.+14     	; 0x320 <vfprintf+0x4c>
 312:	93 fd       	sbrc	r25, 3
 314:	85 91       	lpm	r24, Z+
 316:	93 ff       	sbrs	r25, 3
 318:	81 91       	ld	r24, Z+
 31a:	7f 01       	movw	r14, r30
 31c:	85 32       	cpi	r24, 0x25	; 37
 31e:	29 f4       	brne	.+10     	; 0x32a <vfprintf+0x56>
 320:	b6 01       	movw	r22, r12
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 328:	e7 cf       	rjmp	.-50     	; 0x2f8 <vfprintf+0x24>
 32a:	91 2c       	mov	r9, r1
 32c:	21 2c       	mov	r2, r1
 32e:	31 2c       	mov	r3, r1
 330:	ff e1       	ldi	r31, 0x1F	; 31
 332:	f3 15       	cp	r31, r3
 334:	d8 f0       	brcs	.+54     	; 0x36c <vfprintf+0x98>
 336:	8b 32       	cpi	r24, 0x2B	; 43
 338:	79 f0       	breq	.+30     	; 0x358 <vfprintf+0x84>
 33a:	38 f4       	brcc	.+14     	; 0x34a <vfprintf+0x76>
 33c:	80 32       	cpi	r24, 0x20	; 32
 33e:	79 f0       	breq	.+30     	; 0x35e <vfprintf+0x8a>
 340:	83 32       	cpi	r24, 0x23	; 35
 342:	a1 f4       	brne	.+40     	; 0x36c <vfprintf+0x98>
 344:	23 2d       	mov	r18, r3
 346:	20 61       	ori	r18, 0x10	; 16
 348:	1d c0       	rjmp	.+58     	; 0x384 <vfprintf+0xb0>
 34a:	8d 32       	cpi	r24, 0x2D	; 45
 34c:	61 f0       	breq	.+24     	; 0x366 <vfprintf+0x92>
 34e:	80 33       	cpi	r24, 0x30	; 48
 350:	69 f4       	brne	.+26     	; 0x36c <vfprintf+0x98>
 352:	23 2d       	mov	r18, r3
 354:	21 60       	ori	r18, 0x01	; 1
 356:	16 c0       	rjmp	.+44     	; 0x384 <vfprintf+0xb0>
 358:	83 2d       	mov	r24, r3
 35a:	82 60       	ori	r24, 0x02	; 2
 35c:	38 2e       	mov	r3, r24
 35e:	e3 2d       	mov	r30, r3
 360:	e4 60       	ori	r30, 0x04	; 4
 362:	3e 2e       	mov	r3, r30
 364:	2a c0       	rjmp	.+84     	; 0x3ba <vfprintf+0xe6>
 366:	f3 2d       	mov	r31, r3
 368:	f8 60       	ori	r31, 0x08	; 8
 36a:	1d c0       	rjmp	.+58     	; 0x3a6 <vfprintf+0xd2>
 36c:	37 fc       	sbrc	r3, 7
 36e:	2d c0       	rjmp	.+90     	; 0x3ca <vfprintf+0xf6>
 370:	20 ed       	ldi	r18, 0xD0	; 208
 372:	28 0f       	add	r18, r24
 374:	2a 30       	cpi	r18, 0x0A	; 10
 376:	40 f0       	brcs	.+16     	; 0x388 <vfprintf+0xb4>
 378:	8e 32       	cpi	r24, 0x2E	; 46
 37a:	b9 f4       	brne	.+46     	; 0x3aa <vfprintf+0xd6>
 37c:	36 fc       	sbrc	r3, 6
 37e:	81 c1       	rjmp	.+770    	; 0x682 <__stack+0x183>
 380:	23 2d       	mov	r18, r3
 382:	20 64       	ori	r18, 0x40	; 64
 384:	32 2e       	mov	r3, r18
 386:	19 c0       	rjmp	.+50     	; 0x3ba <vfprintf+0xe6>
 388:	36 fe       	sbrs	r3, 6
 38a:	06 c0       	rjmp	.+12     	; 0x398 <vfprintf+0xc4>
 38c:	8a e0       	ldi	r24, 0x0A	; 10
 38e:	98 9e       	mul	r9, r24
 390:	20 0d       	add	r18, r0
 392:	11 24       	eor	r1, r1
 394:	92 2e       	mov	r9, r18
 396:	11 c0       	rjmp	.+34     	; 0x3ba <vfprintf+0xe6>
 398:	ea e0       	ldi	r30, 0x0A	; 10
 39a:	2e 9e       	mul	r2, r30
 39c:	20 0d       	add	r18, r0
 39e:	11 24       	eor	r1, r1
 3a0:	22 2e       	mov	r2, r18
 3a2:	f3 2d       	mov	r31, r3
 3a4:	f0 62       	ori	r31, 0x20	; 32
 3a6:	3f 2e       	mov	r3, r31
 3a8:	08 c0       	rjmp	.+16     	; 0x3ba <vfprintf+0xe6>
 3aa:	8c 36       	cpi	r24, 0x6C	; 108
 3ac:	21 f4       	brne	.+8      	; 0x3b6 <vfprintf+0xe2>
 3ae:	83 2d       	mov	r24, r3
 3b0:	80 68       	ori	r24, 0x80	; 128
 3b2:	38 2e       	mov	r3, r24
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <vfprintf+0xe6>
 3b6:	88 36       	cpi	r24, 0x68	; 104
 3b8:	41 f4       	brne	.+16     	; 0x3ca <vfprintf+0xf6>
 3ba:	f7 01       	movw	r30, r14
 3bc:	93 fd       	sbrc	r25, 3
 3be:	85 91       	lpm	r24, Z+
 3c0:	93 ff       	sbrs	r25, 3
 3c2:	81 91       	ld	r24, Z+
 3c4:	7f 01       	movw	r14, r30
 3c6:	81 11       	cpse	r24, r1
 3c8:	b3 cf       	rjmp	.-154    	; 0x330 <vfprintf+0x5c>
 3ca:	98 2f       	mov	r25, r24
 3cc:	9f 7d       	andi	r25, 0xDF	; 223
 3ce:	95 54       	subi	r25, 0x45	; 69
 3d0:	93 30       	cpi	r25, 0x03	; 3
 3d2:	28 f4       	brcc	.+10     	; 0x3de <vfprintf+0x10a>
 3d4:	0c 5f       	subi	r16, 0xFC	; 252
 3d6:	1f 4f       	sbci	r17, 0xFF	; 255
 3d8:	9f e3       	ldi	r25, 0x3F	; 63
 3da:	99 83       	std	Y+1, r25	; 0x01
 3dc:	0d c0       	rjmp	.+26     	; 0x3f8 <vfprintf+0x124>
 3de:	83 36       	cpi	r24, 0x63	; 99
 3e0:	31 f0       	breq	.+12     	; 0x3ee <vfprintf+0x11a>
 3e2:	83 37       	cpi	r24, 0x73	; 115
 3e4:	71 f0       	breq	.+28     	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 3e6:	83 35       	cpi	r24, 0x53	; 83
 3e8:	09 f0       	breq	.+2      	; 0x3ec <vfprintf+0x118>
 3ea:	59 c0       	rjmp	.+178    	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
 3ec:	21 c0       	rjmp	.+66     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
 3ee:	f8 01       	movw	r30, r16
 3f0:	80 81       	ld	r24, Z
 3f2:	89 83       	std	Y+1, r24	; 0x01
 3f4:	0e 5f       	subi	r16, 0xFE	; 254
 3f6:	1f 4f       	sbci	r17, 0xFF	; 255
 3f8:	88 24       	eor	r8, r8
 3fa:	83 94       	inc	r8
 3fc:	91 2c       	mov	r9, r1
 3fe:	53 01       	movw	r10, r6
 400:	13 c0       	rjmp	.+38     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 402:	28 01       	movw	r4, r16
 404:	f2 e0       	ldi	r31, 0x02	; 2
 406:	4f 0e       	add	r4, r31
 408:	51 1c       	adc	r5, r1
 40a:	f8 01       	movw	r30, r16
 40c:	a0 80       	ld	r10, Z
 40e:	b1 80       	ldd	r11, Z+1	; 0x01
 410:	36 fe       	sbrs	r3, 6
 412:	03 c0       	rjmp	.+6      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
 414:	69 2d       	mov	r22, r9
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	02 c0       	rjmp	.+4      	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 41a:	6f ef       	ldi	r22, 0xFF	; 255
 41c:	7f ef       	ldi	r23, 0xFF	; 255
 41e:	c5 01       	movw	r24, r10
 420:	0e 94 9a 04 	call	0x934	; 0x934 <strnlen>
 424:	4c 01       	movw	r8, r24
 426:	82 01       	movw	r16, r4
 428:	f3 2d       	mov	r31, r3
 42a:	ff 77       	andi	r31, 0x7F	; 127
 42c:	3f 2e       	mov	r3, r31
 42e:	16 c0       	rjmp	.+44     	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
 430:	28 01       	movw	r4, r16
 432:	22 e0       	ldi	r18, 0x02	; 2
 434:	42 0e       	add	r4, r18
 436:	51 1c       	adc	r5, r1
 438:	f8 01       	movw	r30, r16
 43a:	a0 80       	ld	r10, Z
 43c:	b1 80       	ldd	r11, Z+1	; 0x01
 43e:	36 fe       	sbrs	r3, 6
 440:	03 c0       	rjmp	.+6      	; 0x448 <__DATA_REGION_LENGTH__+0x48>
 442:	69 2d       	mov	r22, r9
 444:	70 e0       	ldi	r23, 0x00	; 0
 446:	02 c0       	rjmp	.+4      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 448:	6f ef       	ldi	r22, 0xFF	; 255
 44a:	7f ef       	ldi	r23, 0xFF	; 255
 44c:	c5 01       	movw	r24, r10
 44e:	0e 94 88 04 	call	0x910	; 0x910 <strnlen_P>
 452:	4c 01       	movw	r8, r24
 454:	f3 2d       	mov	r31, r3
 456:	f0 68       	ori	r31, 0x80	; 128
 458:	3f 2e       	mov	r3, r31
 45a:	82 01       	movw	r16, r4
 45c:	33 fc       	sbrc	r3, 3
 45e:	1b c0       	rjmp	.+54     	; 0x496 <__DATA_REGION_LENGTH__+0x96>
 460:	82 2d       	mov	r24, r2
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	88 16       	cp	r8, r24
 466:	99 06       	cpc	r9, r25
 468:	b0 f4       	brcc	.+44     	; 0x496 <__DATA_REGION_LENGTH__+0x96>
 46a:	b6 01       	movw	r22, r12
 46c:	80 e2       	ldi	r24, 0x20	; 32
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 474:	2a 94       	dec	r2
 476:	f4 cf       	rjmp	.-24     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 478:	f5 01       	movw	r30, r10
 47a:	37 fc       	sbrc	r3, 7
 47c:	85 91       	lpm	r24, Z+
 47e:	37 fe       	sbrs	r3, 7
 480:	81 91       	ld	r24, Z+
 482:	5f 01       	movw	r10, r30
 484:	b6 01       	movw	r22, r12
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 48c:	21 10       	cpse	r2, r1
 48e:	2a 94       	dec	r2
 490:	21 e0       	ldi	r18, 0x01	; 1
 492:	82 1a       	sub	r8, r18
 494:	91 08       	sbc	r9, r1
 496:	81 14       	cp	r8, r1
 498:	91 04       	cpc	r9, r1
 49a:	71 f7       	brne	.-36     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 49c:	e8 c0       	rjmp	.+464    	; 0x66e <__stack+0x16f>
 49e:	84 36       	cpi	r24, 0x64	; 100
 4a0:	11 f0       	breq	.+4      	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 4a2:	89 36       	cpi	r24, 0x69	; 105
 4a4:	41 f5       	brne	.+80     	; 0x4f6 <__DATA_REGION_LENGTH__+0xf6>
 4a6:	f8 01       	movw	r30, r16
 4a8:	37 fe       	sbrs	r3, 7
 4aa:	07 c0       	rjmp	.+14     	; 0x4ba <__DATA_REGION_LENGTH__+0xba>
 4ac:	60 81       	ld	r22, Z
 4ae:	71 81       	ldd	r23, Z+1	; 0x01
 4b0:	82 81       	ldd	r24, Z+2	; 0x02
 4b2:	93 81       	ldd	r25, Z+3	; 0x03
 4b4:	0c 5f       	subi	r16, 0xFC	; 252
 4b6:	1f 4f       	sbci	r17, 0xFF	; 255
 4b8:	08 c0       	rjmp	.+16     	; 0x4ca <__DATA_REGION_LENGTH__+0xca>
 4ba:	60 81       	ld	r22, Z
 4bc:	71 81       	ldd	r23, Z+1	; 0x01
 4be:	07 2e       	mov	r0, r23
 4c0:	00 0c       	add	r0, r0
 4c2:	88 0b       	sbc	r24, r24
 4c4:	99 0b       	sbc	r25, r25
 4c6:	0e 5f       	subi	r16, 0xFE	; 254
 4c8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ca:	f3 2d       	mov	r31, r3
 4cc:	ff 76       	andi	r31, 0x6F	; 111
 4ce:	3f 2e       	mov	r3, r31
 4d0:	97 ff       	sbrs	r25, 7
 4d2:	09 c0       	rjmp	.+18     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4d4:	90 95       	com	r25
 4d6:	80 95       	com	r24
 4d8:	70 95       	com	r23
 4da:	61 95       	neg	r22
 4dc:	7f 4f       	sbci	r23, 0xFF	; 255
 4de:	8f 4f       	sbci	r24, 0xFF	; 255
 4e0:	9f 4f       	sbci	r25, 0xFF	; 255
 4e2:	f0 68       	ori	r31, 0x80	; 128
 4e4:	3f 2e       	mov	r3, r31
 4e6:	2a e0       	ldi	r18, 0x0A	; 10
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	a3 01       	movw	r20, r6
 4ec:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__ultoa_invert>
 4f0:	88 2e       	mov	r8, r24
 4f2:	86 18       	sub	r8, r6
 4f4:	45 c0       	rjmp	.+138    	; 0x580 <__stack+0x81>
 4f6:	85 37       	cpi	r24, 0x75	; 117
 4f8:	31 f4       	brne	.+12     	; 0x506 <__stack+0x7>
 4fa:	23 2d       	mov	r18, r3
 4fc:	2f 7e       	andi	r18, 0xEF	; 239
 4fe:	b2 2e       	mov	r11, r18
 500:	2a e0       	ldi	r18, 0x0A	; 10
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	25 c0       	rjmp	.+74     	; 0x550 <__stack+0x51>
 506:	93 2d       	mov	r25, r3
 508:	99 7f       	andi	r25, 0xF9	; 249
 50a:	b9 2e       	mov	r11, r25
 50c:	8f 36       	cpi	r24, 0x6F	; 111
 50e:	c1 f0       	breq	.+48     	; 0x540 <__stack+0x41>
 510:	18 f4       	brcc	.+6      	; 0x518 <__stack+0x19>
 512:	88 35       	cpi	r24, 0x58	; 88
 514:	79 f0       	breq	.+30     	; 0x534 <__stack+0x35>
 516:	b5 c0       	rjmp	.+362    	; 0x682 <__stack+0x183>
 518:	80 37       	cpi	r24, 0x70	; 112
 51a:	19 f0       	breq	.+6      	; 0x522 <__stack+0x23>
 51c:	88 37       	cpi	r24, 0x78	; 120
 51e:	21 f0       	breq	.+8      	; 0x528 <__stack+0x29>
 520:	b0 c0       	rjmp	.+352    	; 0x682 <__stack+0x183>
 522:	e9 2f       	mov	r30, r25
 524:	e0 61       	ori	r30, 0x10	; 16
 526:	be 2e       	mov	r11, r30
 528:	b4 fe       	sbrs	r11, 4
 52a:	0d c0       	rjmp	.+26     	; 0x546 <__stack+0x47>
 52c:	fb 2d       	mov	r31, r11
 52e:	f4 60       	ori	r31, 0x04	; 4
 530:	bf 2e       	mov	r11, r31
 532:	09 c0       	rjmp	.+18     	; 0x546 <__stack+0x47>
 534:	34 fe       	sbrs	r3, 4
 536:	0a c0       	rjmp	.+20     	; 0x54c <__stack+0x4d>
 538:	29 2f       	mov	r18, r25
 53a:	26 60       	ori	r18, 0x06	; 6
 53c:	b2 2e       	mov	r11, r18
 53e:	06 c0       	rjmp	.+12     	; 0x54c <__stack+0x4d>
 540:	28 e0       	ldi	r18, 0x08	; 8
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	05 c0       	rjmp	.+10     	; 0x550 <__stack+0x51>
 546:	20 e1       	ldi	r18, 0x10	; 16
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__stack+0x51>
 54c:	20 e1       	ldi	r18, 0x10	; 16
 54e:	32 e0       	ldi	r19, 0x02	; 2
 550:	f8 01       	movw	r30, r16
 552:	b7 fe       	sbrs	r11, 7
 554:	07 c0       	rjmp	.+14     	; 0x564 <__stack+0x65>
 556:	60 81       	ld	r22, Z
 558:	71 81       	ldd	r23, Z+1	; 0x01
 55a:	82 81       	ldd	r24, Z+2	; 0x02
 55c:	93 81       	ldd	r25, Z+3	; 0x03
 55e:	0c 5f       	subi	r16, 0xFC	; 252
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	06 c0       	rjmp	.+12     	; 0x570 <__stack+0x71>
 564:	60 81       	ld	r22, Z
 566:	71 81       	ldd	r23, Z+1	; 0x01
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 5f       	subi	r16, 0xFE	; 254
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	a3 01       	movw	r20, r6
 572:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__ultoa_invert>
 576:	88 2e       	mov	r8, r24
 578:	86 18       	sub	r8, r6
 57a:	fb 2d       	mov	r31, r11
 57c:	ff 77       	andi	r31, 0x7F	; 127
 57e:	3f 2e       	mov	r3, r31
 580:	36 fe       	sbrs	r3, 6
 582:	0d c0       	rjmp	.+26     	; 0x59e <__stack+0x9f>
 584:	23 2d       	mov	r18, r3
 586:	2e 7f       	andi	r18, 0xFE	; 254
 588:	a2 2e       	mov	r10, r18
 58a:	89 14       	cp	r8, r9
 58c:	58 f4       	brcc	.+22     	; 0x5a4 <__stack+0xa5>
 58e:	34 fe       	sbrs	r3, 4
 590:	0b c0       	rjmp	.+22     	; 0x5a8 <__stack+0xa9>
 592:	32 fc       	sbrc	r3, 2
 594:	09 c0       	rjmp	.+18     	; 0x5a8 <__stack+0xa9>
 596:	83 2d       	mov	r24, r3
 598:	8e 7e       	andi	r24, 0xEE	; 238
 59a:	a8 2e       	mov	r10, r24
 59c:	05 c0       	rjmp	.+10     	; 0x5a8 <__stack+0xa9>
 59e:	b8 2c       	mov	r11, r8
 5a0:	a3 2c       	mov	r10, r3
 5a2:	03 c0       	rjmp	.+6      	; 0x5aa <__stack+0xab>
 5a4:	b8 2c       	mov	r11, r8
 5a6:	01 c0       	rjmp	.+2      	; 0x5aa <__stack+0xab>
 5a8:	b9 2c       	mov	r11, r9
 5aa:	a4 fe       	sbrs	r10, 4
 5ac:	0f c0       	rjmp	.+30     	; 0x5cc <__stack+0xcd>
 5ae:	fe 01       	movw	r30, r28
 5b0:	e8 0d       	add	r30, r8
 5b2:	f1 1d       	adc	r31, r1
 5b4:	80 81       	ld	r24, Z
 5b6:	80 33       	cpi	r24, 0x30	; 48
 5b8:	21 f4       	brne	.+8      	; 0x5c2 <__stack+0xc3>
 5ba:	9a 2d       	mov	r25, r10
 5bc:	99 7e       	andi	r25, 0xE9	; 233
 5be:	a9 2e       	mov	r10, r25
 5c0:	09 c0       	rjmp	.+18     	; 0x5d4 <__stack+0xd5>
 5c2:	a2 fe       	sbrs	r10, 2
 5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <__stack+0xd3>
 5c6:	b3 94       	inc	r11
 5c8:	b3 94       	inc	r11
 5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <__stack+0xd5>
 5cc:	8a 2d       	mov	r24, r10
 5ce:	86 78       	andi	r24, 0x86	; 134
 5d0:	09 f0       	breq	.+2      	; 0x5d4 <__stack+0xd5>
 5d2:	b3 94       	inc	r11
 5d4:	a3 fc       	sbrc	r10, 3
 5d6:	11 c0       	rjmp	.+34     	; 0x5fa <__stack+0xfb>
 5d8:	a0 fe       	sbrs	r10, 0
 5da:	06 c0       	rjmp	.+12     	; 0x5e8 <__stack+0xe9>
 5dc:	b2 14       	cp	r11, r2
 5de:	88 f4       	brcc	.+34     	; 0x602 <__stack+0x103>
 5e0:	28 0c       	add	r2, r8
 5e2:	92 2c       	mov	r9, r2
 5e4:	9b 18       	sub	r9, r11
 5e6:	0e c0       	rjmp	.+28     	; 0x604 <__stack+0x105>
 5e8:	b2 14       	cp	r11, r2
 5ea:	60 f4       	brcc	.+24     	; 0x604 <__stack+0x105>
 5ec:	b6 01       	movw	r22, r12
 5ee:	80 e2       	ldi	r24, 0x20	; 32
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 5f6:	b3 94       	inc	r11
 5f8:	f7 cf       	rjmp	.-18     	; 0x5e8 <__stack+0xe9>
 5fa:	b2 14       	cp	r11, r2
 5fc:	18 f4       	brcc	.+6      	; 0x604 <__stack+0x105>
 5fe:	2b 18       	sub	r2, r11
 600:	02 c0       	rjmp	.+4      	; 0x606 <__stack+0x107>
 602:	98 2c       	mov	r9, r8
 604:	21 2c       	mov	r2, r1
 606:	a4 fe       	sbrs	r10, 4
 608:	10 c0       	rjmp	.+32     	; 0x62a <__stack+0x12b>
 60a:	b6 01       	movw	r22, r12
 60c:	80 e3       	ldi	r24, 0x30	; 48
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 614:	a2 fe       	sbrs	r10, 2
 616:	17 c0       	rjmp	.+46     	; 0x646 <__stack+0x147>
 618:	a1 fc       	sbrc	r10, 1
 61a:	03 c0       	rjmp	.+6      	; 0x622 <__stack+0x123>
 61c:	88 e7       	ldi	r24, 0x78	; 120
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	02 c0       	rjmp	.+4      	; 0x626 <__stack+0x127>
 622:	88 e5       	ldi	r24, 0x58	; 88
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	b6 01       	movw	r22, r12
 628:	0c c0       	rjmp	.+24     	; 0x642 <__stack+0x143>
 62a:	8a 2d       	mov	r24, r10
 62c:	86 78       	andi	r24, 0x86	; 134
 62e:	59 f0       	breq	.+22     	; 0x646 <__stack+0x147>
 630:	a1 fe       	sbrs	r10, 1
 632:	02 c0       	rjmp	.+4      	; 0x638 <__stack+0x139>
 634:	8b e2       	ldi	r24, 0x2B	; 43
 636:	01 c0       	rjmp	.+2      	; 0x63a <__stack+0x13b>
 638:	80 e2       	ldi	r24, 0x20	; 32
 63a:	a7 fc       	sbrc	r10, 7
 63c:	8d e2       	ldi	r24, 0x2D	; 45
 63e:	b6 01       	movw	r22, r12
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 646:	89 14       	cp	r8, r9
 648:	38 f4       	brcc	.+14     	; 0x658 <__stack+0x159>
 64a:	b6 01       	movw	r22, r12
 64c:	80 e3       	ldi	r24, 0x30	; 48
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 654:	9a 94       	dec	r9
 656:	f7 cf       	rjmp	.-18     	; 0x646 <__stack+0x147>
 658:	8a 94       	dec	r8
 65a:	f3 01       	movw	r30, r6
 65c:	e8 0d       	add	r30, r8
 65e:	f1 1d       	adc	r31, r1
 660:	80 81       	ld	r24, Z
 662:	b6 01       	movw	r22, r12
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 66a:	81 10       	cpse	r8, r1
 66c:	f5 cf       	rjmp	.-22     	; 0x658 <__stack+0x159>
 66e:	22 20       	and	r2, r2
 670:	09 f4       	brne	.+2      	; 0x674 <__stack+0x175>
 672:	42 ce       	rjmp	.-892    	; 0x2f8 <vfprintf+0x24>
 674:	b6 01       	movw	r22, r12
 676:	80 e2       	ldi	r24, 0x20	; 32
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 67e:	2a 94       	dec	r2
 680:	f6 cf       	rjmp	.-20     	; 0x66e <__stack+0x16f>
 682:	f6 01       	movw	r30, r12
 684:	86 81       	ldd	r24, Z+6	; 0x06
 686:	97 81       	ldd	r25, Z+7	; 0x07
 688:	02 c0       	rjmp	.+4      	; 0x68e <__stack+0x18f>
 68a:	8f ef       	ldi	r24, 0xFF	; 255
 68c:	9f ef       	ldi	r25, 0xFF	; 255
 68e:	2b 96       	adiw	r28, 0x0b	; 11
 690:	e2 e1       	ldi	r30, 0x12	; 18
 692:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__epilogue_restores__>

00000696 <calloc>:
 696:	0f 93       	push	r16
 698:	1f 93       	push	r17
 69a:	cf 93       	push	r28
 69c:	df 93       	push	r29
 69e:	86 9f       	mul	r24, r22
 6a0:	80 01       	movw	r16, r0
 6a2:	87 9f       	mul	r24, r23
 6a4:	10 0d       	add	r17, r0
 6a6:	96 9f       	mul	r25, r22
 6a8:	10 0d       	add	r17, r0
 6aa:	11 24       	eor	r1, r1
 6ac:	c8 01       	movw	r24, r16
 6ae:	0e 94 67 03 	call	0x6ce	; 0x6ce <malloc>
 6b2:	ec 01       	movw	r28, r24
 6b4:	00 97       	sbiw	r24, 0x00	; 0
 6b6:	29 f0       	breq	.+10     	; 0x6c2 <calloc+0x2c>
 6b8:	a8 01       	movw	r20, r16
 6ba:	60 e0       	ldi	r22, 0x00	; 0
 6bc:	70 e0       	ldi	r23, 0x00	; 0
 6be:	0e 94 93 04 	call	0x926	; 0x926 <memset>
 6c2:	ce 01       	movw	r24, r28
 6c4:	df 91       	pop	r29
 6c6:	cf 91       	pop	r28
 6c8:	1f 91       	pop	r17
 6ca:	0f 91       	pop	r16
 6cc:	08 95       	ret

000006ce <malloc>:
 6ce:	0f 93       	push	r16
 6d0:	1f 93       	push	r17
 6d2:	cf 93       	push	r28
 6d4:	df 93       	push	r29
 6d6:	82 30       	cpi	r24, 0x02	; 2
 6d8:	91 05       	cpc	r25, r1
 6da:	10 f4       	brcc	.+4      	; 0x6e0 <malloc+0x12>
 6dc:	82 e0       	ldi	r24, 0x02	; 2
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	e0 91 2f 01 	lds	r30, 0x012F	; 0x80012f <__flp>
 6e4:	f0 91 30 01 	lds	r31, 0x0130	; 0x800130 <__flp+0x1>
 6e8:	20 e0       	ldi	r18, 0x00	; 0
 6ea:	30 e0       	ldi	r19, 0x00	; 0
 6ec:	a0 e0       	ldi	r26, 0x00	; 0
 6ee:	b0 e0       	ldi	r27, 0x00	; 0
 6f0:	30 97       	sbiw	r30, 0x00	; 0
 6f2:	19 f1       	breq	.+70     	; 0x73a <malloc+0x6c>
 6f4:	40 81       	ld	r20, Z
 6f6:	51 81       	ldd	r21, Z+1	; 0x01
 6f8:	02 81       	ldd	r16, Z+2	; 0x02
 6fa:	13 81       	ldd	r17, Z+3	; 0x03
 6fc:	48 17       	cp	r20, r24
 6fe:	59 07       	cpc	r21, r25
 700:	c8 f0       	brcs	.+50     	; 0x734 <malloc+0x66>
 702:	84 17       	cp	r24, r20
 704:	95 07       	cpc	r25, r21
 706:	69 f4       	brne	.+26     	; 0x722 <malloc+0x54>
 708:	10 97       	sbiw	r26, 0x00	; 0
 70a:	31 f0       	breq	.+12     	; 0x718 <malloc+0x4a>
 70c:	12 96       	adiw	r26, 0x02	; 2
 70e:	0c 93       	st	X, r16
 710:	12 97       	sbiw	r26, 0x02	; 2
 712:	13 96       	adiw	r26, 0x03	; 3
 714:	1c 93       	st	X, r17
 716:	27 c0       	rjmp	.+78     	; 0x766 <malloc+0x98>
 718:	00 93 2f 01 	sts	0x012F, r16	; 0x80012f <__flp>
 71c:	10 93 30 01 	sts	0x0130, r17	; 0x800130 <__flp+0x1>
 720:	22 c0       	rjmp	.+68     	; 0x766 <malloc+0x98>
 722:	21 15       	cp	r18, r1
 724:	31 05       	cpc	r19, r1
 726:	19 f0       	breq	.+6      	; 0x72e <malloc+0x60>
 728:	42 17       	cp	r20, r18
 72a:	53 07       	cpc	r21, r19
 72c:	18 f4       	brcc	.+6      	; 0x734 <malloc+0x66>
 72e:	9a 01       	movw	r18, r20
 730:	bd 01       	movw	r22, r26
 732:	ef 01       	movw	r28, r30
 734:	df 01       	movw	r26, r30
 736:	f8 01       	movw	r30, r16
 738:	db cf       	rjmp	.-74     	; 0x6f0 <malloc+0x22>
 73a:	21 15       	cp	r18, r1
 73c:	31 05       	cpc	r19, r1
 73e:	f9 f0       	breq	.+62     	; 0x77e <malloc+0xb0>
 740:	28 1b       	sub	r18, r24
 742:	39 0b       	sbc	r19, r25
 744:	24 30       	cpi	r18, 0x04	; 4
 746:	31 05       	cpc	r19, r1
 748:	80 f4       	brcc	.+32     	; 0x76a <malloc+0x9c>
 74a:	8a 81       	ldd	r24, Y+2	; 0x02
 74c:	9b 81       	ldd	r25, Y+3	; 0x03
 74e:	61 15       	cp	r22, r1
 750:	71 05       	cpc	r23, r1
 752:	21 f0       	breq	.+8      	; 0x75c <malloc+0x8e>
 754:	fb 01       	movw	r30, r22
 756:	93 83       	std	Z+3, r25	; 0x03
 758:	82 83       	std	Z+2, r24	; 0x02
 75a:	04 c0       	rjmp	.+8      	; 0x764 <malloc+0x96>
 75c:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <__flp+0x1>
 760:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <__flp>
 764:	fe 01       	movw	r30, r28
 766:	32 96       	adiw	r30, 0x02	; 2
 768:	44 c0       	rjmp	.+136    	; 0x7f2 <malloc+0x124>
 76a:	fe 01       	movw	r30, r28
 76c:	e2 0f       	add	r30, r18
 76e:	f3 1f       	adc	r31, r19
 770:	81 93       	st	Z+, r24
 772:	91 93       	st	Z+, r25
 774:	22 50       	subi	r18, 0x02	; 2
 776:	31 09       	sbc	r19, r1
 778:	39 83       	std	Y+1, r19	; 0x01
 77a:	28 83       	st	Y, r18
 77c:	3a c0       	rjmp	.+116    	; 0x7f2 <malloc+0x124>
 77e:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <__brkval>
 782:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <__brkval+0x1>
 786:	23 2b       	or	r18, r19
 788:	41 f4       	brne	.+16     	; 0x79a <malloc+0xcc>
 78a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 78e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 792:	30 93 2e 01 	sts	0x012E, r19	; 0x80012e <__brkval+0x1>
 796:	20 93 2d 01 	sts	0x012D, r18	; 0x80012d <__brkval>
 79a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 79e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7a2:	21 15       	cp	r18, r1
 7a4:	31 05       	cpc	r19, r1
 7a6:	41 f4       	brne	.+16     	; 0x7b8 <malloc+0xea>
 7a8:	2d b7       	in	r18, 0x3d	; 61
 7aa:	3e b7       	in	r19, 0x3e	; 62
 7ac:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 7b0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 7b4:	24 1b       	sub	r18, r20
 7b6:	35 0b       	sbc	r19, r21
 7b8:	e0 91 2d 01 	lds	r30, 0x012D	; 0x80012d <__brkval>
 7bc:	f0 91 2e 01 	lds	r31, 0x012E	; 0x80012e <__brkval+0x1>
 7c0:	e2 17       	cp	r30, r18
 7c2:	f3 07       	cpc	r31, r19
 7c4:	a0 f4       	brcc	.+40     	; 0x7ee <malloc+0x120>
 7c6:	2e 1b       	sub	r18, r30
 7c8:	3f 0b       	sbc	r19, r31
 7ca:	28 17       	cp	r18, r24
 7cc:	39 07       	cpc	r19, r25
 7ce:	78 f0       	brcs	.+30     	; 0x7ee <malloc+0x120>
 7d0:	ac 01       	movw	r20, r24
 7d2:	4e 5f       	subi	r20, 0xFE	; 254
 7d4:	5f 4f       	sbci	r21, 0xFF	; 255
 7d6:	24 17       	cp	r18, r20
 7d8:	35 07       	cpc	r19, r21
 7da:	48 f0       	brcs	.+18     	; 0x7ee <malloc+0x120>
 7dc:	4e 0f       	add	r20, r30
 7de:	5f 1f       	adc	r21, r31
 7e0:	50 93 2e 01 	sts	0x012E, r21	; 0x80012e <__brkval+0x1>
 7e4:	40 93 2d 01 	sts	0x012D, r20	; 0x80012d <__brkval>
 7e8:	81 93       	st	Z+, r24
 7ea:	91 93       	st	Z+, r25
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <malloc+0x124>
 7ee:	e0 e0       	ldi	r30, 0x00	; 0
 7f0:	f0 e0       	ldi	r31, 0x00	; 0
 7f2:	cf 01       	movw	r24, r30
 7f4:	df 91       	pop	r29
 7f6:	cf 91       	pop	r28
 7f8:	1f 91       	pop	r17
 7fa:	0f 91       	pop	r16
 7fc:	08 95       	ret

000007fe <free>:
 7fe:	cf 93       	push	r28
 800:	df 93       	push	r29
 802:	00 97       	sbiw	r24, 0x00	; 0
 804:	09 f4       	brne	.+2      	; 0x808 <free+0xa>
 806:	81 c0       	rjmp	.+258    	; 0x90a <free+0x10c>
 808:	fc 01       	movw	r30, r24
 80a:	32 97       	sbiw	r30, 0x02	; 2
 80c:	13 82       	std	Z+3, r1	; 0x03
 80e:	12 82       	std	Z+2, r1	; 0x02
 810:	a0 91 2f 01 	lds	r26, 0x012F	; 0x80012f <__flp>
 814:	b0 91 30 01 	lds	r27, 0x0130	; 0x800130 <__flp+0x1>
 818:	10 97       	sbiw	r26, 0x00	; 0
 81a:	81 f4       	brne	.+32     	; 0x83c <free+0x3e>
 81c:	20 81       	ld	r18, Z
 81e:	31 81       	ldd	r19, Z+1	; 0x01
 820:	82 0f       	add	r24, r18
 822:	93 1f       	adc	r25, r19
 824:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <__brkval>
 828:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <__brkval+0x1>
 82c:	28 17       	cp	r18, r24
 82e:	39 07       	cpc	r19, r25
 830:	51 f5       	brne	.+84     	; 0x886 <free+0x88>
 832:	f0 93 2e 01 	sts	0x012E, r31	; 0x80012e <__brkval+0x1>
 836:	e0 93 2d 01 	sts	0x012D, r30	; 0x80012d <__brkval>
 83a:	67 c0       	rjmp	.+206    	; 0x90a <free+0x10c>
 83c:	ed 01       	movw	r28, r26
 83e:	20 e0       	ldi	r18, 0x00	; 0
 840:	30 e0       	ldi	r19, 0x00	; 0
 842:	ce 17       	cp	r28, r30
 844:	df 07       	cpc	r29, r31
 846:	40 f4       	brcc	.+16     	; 0x858 <free+0x5a>
 848:	4a 81       	ldd	r20, Y+2	; 0x02
 84a:	5b 81       	ldd	r21, Y+3	; 0x03
 84c:	9e 01       	movw	r18, r28
 84e:	41 15       	cp	r20, r1
 850:	51 05       	cpc	r21, r1
 852:	f1 f0       	breq	.+60     	; 0x890 <free+0x92>
 854:	ea 01       	movw	r28, r20
 856:	f5 cf       	rjmp	.-22     	; 0x842 <free+0x44>
 858:	d3 83       	std	Z+3, r29	; 0x03
 85a:	c2 83       	std	Z+2, r28	; 0x02
 85c:	40 81       	ld	r20, Z
 85e:	51 81       	ldd	r21, Z+1	; 0x01
 860:	84 0f       	add	r24, r20
 862:	95 1f       	adc	r25, r21
 864:	c8 17       	cp	r28, r24
 866:	d9 07       	cpc	r29, r25
 868:	59 f4       	brne	.+22     	; 0x880 <free+0x82>
 86a:	88 81       	ld	r24, Y
 86c:	99 81       	ldd	r25, Y+1	; 0x01
 86e:	84 0f       	add	r24, r20
 870:	95 1f       	adc	r25, r21
 872:	02 96       	adiw	r24, 0x02	; 2
 874:	91 83       	std	Z+1, r25	; 0x01
 876:	80 83       	st	Z, r24
 878:	8a 81       	ldd	r24, Y+2	; 0x02
 87a:	9b 81       	ldd	r25, Y+3	; 0x03
 87c:	93 83       	std	Z+3, r25	; 0x03
 87e:	82 83       	std	Z+2, r24	; 0x02
 880:	21 15       	cp	r18, r1
 882:	31 05       	cpc	r19, r1
 884:	29 f4       	brne	.+10     	; 0x890 <free+0x92>
 886:	f0 93 30 01 	sts	0x0130, r31	; 0x800130 <__flp+0x1>
 88a:	e0 93 2f 01 	sts	0x012F, r30	; 0x80012f <__flp>
 88e:	3d c0       	rjmp	.+122    	; 0x90a <free+0x10c>
 890:	e9 01       	movw	r28, r18
 892:	fb 83       	std	Y+3, r31	; 0x03
 894:	ea 83       	std	Y+2, r30	; 0x02
 896:	49 91       	ld	r20, Y+
 898:	59 91       	ld	r21, Y+
 89a:	c4 0f       	add	r28, r20
 89c:	d5 1f       	adc	r29, r21
 89e:	ec 17       	cp	r30, r28
 8a0:	fd 07       	cpc	r31, r29
 8a2:	61 f4       	brne	.+24     	; 0x8bc <free+0xbe>
 8a4:	80 81       	ld	r24, Z
 8a6:	91 81       	ldd	r25, Z+1	; 0x01
 8a8:	84 0f       	add	r24, r20
 8aa:	95 1f       	adc	r25, r21
 8ac:	02 96       	adiw	r24, 0x02	; 2
 8ae:	e9 01       	movw	r28, r18
 8b0:	99 83       	std	Y+1, r25	; 0x01
 8b2:	88 83       	st	Y, r24
 8b4:	82 81       	ldd	r24, Z+2	; 0x02
 8b6:	93 81       	ldd	r25, Z+3	; 0x03
 8b8:	9b 83       	std	Y+3, r25	; 0x03
 8ba:	8a 83       	std	Y+2, r24	; 0x02
 8bc:	e0 e0       	ldi	r30, 0x00	; 0
 8be:	f0 e0       	ldi	r31, 0x00	; 0
 8c0:	12 96       	adiw	r26, 0x02	; 2
 8c2:	8d 91       	ld	r24, X+
 8c4:	9c 91       	ld	r25, X
 8c6:	13 97       	sbiw	r26, 0x03	; 3
 8c8:	00 97       	sbiw	r24, 0x00	; 0
 8ca:	19 f0       	breq	.+6      	; 0x8d2 <free+0xd4>
 8cc:	fd 01       	movw	r30, r26
 8ce:	dc 01       	movw	r26, r24
 8d0:	f7 cf       	rjmp	.-18     	; 0x8c0 <free+0xc2>
 8d2:	8d 91       	ld	r24, X+
 8d4:	9c 91       	ld	r25, X
 8d6:	11 97       	sbiw	r26, 0x01	; 1
 8d8:	9d 01       	movw	r18, r26
 8da:	2e 5f       	subi	r18, 0xFE	; 254
 8dc:	3f 4f       	sbci	r19, 0xFF	; 255
 8de:	82 0f       	add	r24, r18
 8e0:	93 1f       	adc	r25, r19
 8e2:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <__brkval>
 8e6:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <__brkval+0x1>
 8ea:	28 17       	cp	r18, r24
 8ec:	39 07       	cpc	r19, r25
 8ee:	69 f4       	brne	.+26     	; 0x90a <free+0x10c>
 8f0:	30 97       	sbiw	r30, 0x00	; 0
 8f2:	29 f4       	brne	.+10     	; 0x8fe <free+0x100>
 8f4:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__flp+0x1>
 8f8:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <__flp>
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <free+0x104>
 8fe:	13 82       	std	Z+3, r1	; 0x03
 900:	12 82       	std	Z+2, r1	; 0x02
 902:	b0 93 2e 01 	sts	0x012E, r27	; 0x80012e <__brkval+0x1>
 906:	a0 93 2d 01 	sts	0x012D, r26	; 0x80012d <__brkval>
 90a:	df 91       	pop	r29
 90c:	cf 91       	pop	r28
 90e:	08 95       	ret

00000910 <strnlen_P>:
 910:	fc 01       	movw	r30, r24
 912:	05 90       	lpm	r0, Z+
 914:	61 50       	subi	r22, 0x01	; 1
 916:	70 40       	sbci	r23, 0x00	; 0
 918:	01 10       	cpse	r0, r1
 91a:	d8 f7       	brcc	.-10     	; 0x912 <strnlen_P+0x2>
 91c:	80 95       	com	r24
 91e:	90 95       	com	r25
 920:	8e 0f       	add	r24, r30
 922:	9f 1f       	adc	r25, r31
 924:	08 95       	ret

00000926 <memset>:
 926:	dc 01       	movw	r26, r24
 928:	01 c0       	rjmp	.+2      	; 0x92c <memset+0x6>
 92a:	6d 93       	st	X+, r22
 92c:	41 50       	subi	r20, 0x01	; 1
 92e:	50 40       	sbci	r21, 0x00	; 0
 930:	e0 f7       	brcc	.-8      	; 0x92a <memset+0x4>
 932:	08 95       	ret

00000934 <strnlen>:
 934:	fc 01       	movw	r30, r24
 936:	61 50       	subi	r22, 0x01	; 1
 938:	70 40       	sbci	r23, 0x00	; 0
 93a:	01 90       	ld	r0, Z+
 93c:	01 10       	cpse	r0, r1
 93e:	d8 f7       	brcc	.-10     	; 0x936 <strnlen+0x2>
 940:	80 95       	com	r24
 942:	90 95       	com	r25
 944:	8e 0f       	add	r24, r30
 946:	9f 1f       	adc	r25, r31
 948:	08 95       	ret

0000094a <fputc>:
 94a:	0f 93       	push	r16
 94c:	1f 93       	push	r17
 94e:	cf 93       	push	r28
 950:	df 93       	push	r29
 952:	fb 01       	movw	r30, r22
 954:	23 81       	ldd	r18, Z+3	; 0x03
 956:	21 fd       	sbrc	r18, 1
 958:	03 c0       	rjmp	.+6      	; 0x960 <fputc+0x16>
 95a:	8f ef       	ldi	r24, 0xFF	; 255
 95c:	9f ef       	ldi	r25, 0xFF	; 255
 95e:	2c c0       	rjmp	.+88     	; 0x9b8 <fputc+0x6e>
 960:	22 ff       	sbrs	r18, 2
 962:	16 c0       	rjmp	.+44     	; 0x990 <fputc+0x46>
 964:	46 81       	ldd	r20, Z+6	; 0x06
 966:	57 81       	ldd	r21, Z+7	; 0x07
 968:	24 81       	ldd	r18, Z+4	; 0x04
 96a:	35 81       	ldd	r19, Z+5	; 0x05
 96c:	42 17       	cp	r20, r18
 96e:	53 07       	cpc	r21, r19
 970:	44 f4       	brge	.+16     	; 0x982 <fputc+0x38>
 972:	a0 81       	ld	r26, Z
 974:	b1 81       	ldd	r27, Z+1	; 0x01
 976:	9d 01       	movw	r18, r26
 978:	2f 5f       	subi	r18, 0xFF	; 255
 97a:	3f 4f       	sbci	r19, 0xFF	; 255
 97c:	31 83       	std	Z+1, r19	; 0x01
 97e:	20 83       	st	Z, r18
 980:	8c 93       	st	X, r24
 982:	26 81       	ldd	r18, Z+6	; 0x06
 984:	37 81       	ldd	r19, Z+7	; 0x07
 986:	2f 5f       	subi	r18, 0xFF	; 255
 988:	3f 4f       	sbci	r19, 0xFF	; 255
 98a:	37 83       	std	Z+7, r19	; 0x07
 98c:	26 83       	std	Z+6, r18	; 0x06
 98e:	14 c0       	rjmp	.+40     	; 0x9b8 <fputc+0x6e>
 990:	8b 01       	movw	r16, r22
 992:	ec 01       	movw	r28, r24
 994:	fb 01       	movw	r30, r22
 996:	00 84       	ldd	r0, Z+8	; 0x08
 998:	f1 85       	ldd	r31, Z+9	; 0x09
 99a:	e0 2d       	mov	r30, r0
 99c:	09 95       	icall
 99e:	89 2b       	or	r24, r25
 9a0:	e1 f6       	brne	.-72     	; 0x95a <fputc+0x10>
 9a2:	d8 01       	movw	r26, r16
 9a4:	16 96       	adiw	r26, 0x06	; 6
 9a6:	8d 91       	ld	r24, X+
 9a8:	9c 91       	ld	r25, X
 9aa:	17 97       	sbiw	r26, 0x07	; 7
 9ac:	01 96       	adiw	r24, 0x01	; 1
 9ae:	17 96       	adiw	r26, 0x07	; 7
 9b0:	9c 93       	st	X, r25
 9b2:	8e 93       	st	-X, r24
 9b4:	16 97       	sbiw	r26, 0x06	; 6
 9b6:	ce 01       	movw	r24, r28
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	1f 91       	pop	r17
 9be:	0f 91       	pop	r16
 9c0:	08 95       	ret

000009c2 <__ultoa_invert>:
 9c2:	fa 01       	movw	r30, r20
 9c4:	aa 27       	eor	r26, r26
 9c6:	28 30       	cpi	r18, 0x08	; 8
 9c8:	51 f1       	breq	.+84     	; 0xa1e <__ultoa_invert+0x5c>
 9ca:	20 31       	cpi	r18, 0x10	; 16
 9cc:	81 f1       	breq	.+96     	; 0xa2e <__ultoa_invert+0x6c>
 9ce:	e8 94       	clt
 9d0:	6f 93       	push	r22
 9d2:	6e 7f       	andi	r22, 0xFE	; 254
 9d4:	6e 5f       	subi	r22, 0xFE	; 254
 9d6:	7f 4f       	sbci	r23, 0xFF	; 255
 9d8:	8f 4f       	sbci	r24, 0xFF	; 255
 9da:	9f 4f       	sbci	r25, 0xFF	; 255
 9dc:	af 4f       	sbci	r26, 0xFF	; 255
 9de:	b1 e0       	ldi	r27, 0x01	; 1
 9e0:	3e d0       	rcall	.+124    	; 0xa5e <__ultoa_invert+0x9c>
 9e2:	b4 e0       	ldi	r27, 0x04	; 4
 9e4:	3c d0       	rcall	.+120    	; 0xa5e <__ultoa_invert+0x9c>
 9e6:	67 0f       	add	r22, r23
 9e8:	78 1f       	adc	r23, r24
 9ea:	89 1f       	adc	r24, r25
 9ec:	9a 1f       	adc	r25, r26
 9ee:	a1 1d       	adc	r26, r1
 9f0:	68 0f       	add	r22, r24
 9f2:	79 1f       	adc	r23, r25
 9f4:	8a 1f       	adc	r24, r26
 9f6:	91 1d       	adc	r25, r1
 9f8:	a1 1d       	adc	r26, r1
 9fa:	6a 0f       	add	r22, r26
 9fc:	71 1d       	adc	r23, r1
 9fe:	81 1d       	adc	r24, r1
 a00:	91 1d       	adc	r25, r1
 a02:	a1 1d       	adc	r26, r1
 a04:	20 d0       	rcall	.+64     	; 0xa46 <__ultoa_invert+0x84>
 a06:	09 f4       	brne	.+2      	; 0xa0a <__ultoa_invert+0x48>
 a08:	68 94       	set
 a0a:	3f 91       	pop	r19
 a0c:	2a e0       	ldi	r18, 0x0A	; 10
 a0e:	26 9f       	mul	r18, r22
 a10:	11 24       	eor	r1, r1
 a12:	30 19       	sub	r19, r0
 a14:	30 5d       	subi	r19, 0xD0	; 208
 a16:	31 93       	st	Z+, r19
 a18:	de f6       	brtc	.-74     	; 0x9d0 <__ultoa_invert+0xe>
 a1a:	cf 01       	movw	r24, r30
 a1c:	08 95       	ret
 a1e:	46 2f       	mov	r20, r22
 a20:	47 70       	andi	r20, 0x07	; 7
 a22:	40 5d       	subi	r20, 0xD0	; 208
 a24:	41 93       	st	Z+, r20
 a26:	b3 e0       	ldi	r27, 0x03	; 3
 a28:	0f d0       	rcall	.+30     	; 0xa48 <__ultoa_invert+0x86>
 a2a:	c9 f7       	brne	.-14     	; 0xa1e <__ultoa_invert+0x5c>
 a2c:	f6 cf       	rjmp	.-20     	; 0xa1a <__ultoa_invert+0x58>
 a2e:	46 2f       	mov	r20, r22
 a30:	4f 70       	andi	r20, 0x0F	; 15
 a32:	40 5d       	subi	r20, 0xD0	; 208
 a34:	4a 33       	cpi	r20, 0x3A	; 58
 a36:	18 f0       	brcs	.+6      	; 0xa3e <__ultoa_invert+0x7c>
 a38:	49 5d       	subi	r20, 0xD9	; 217
 a3a:	31 fd       	sbrc	r19, 1
 a3c:	40 52       	subi	r20, 0x20	; 32
 a3e:	41 93       	st	Z+, r20
 a40:	02 d0       	rcall	.+4      	; 0xa46 <__ultoa_invert+0x84>
 a42:	a9 f7       	brne	.-22     	; 0xa2e <__ultoa_invert+0x6c>
 a44:	ea cf       	rjmp	.-44     	; 0xa1a <__ultoa_invert+0x58>
 a46:	b4 e0       	ldi	r27, 0x04	; 4
 a48:	a6 95       	lsr	r26
 a4a:	97 95       	ror	r25
 a4c:	87 95       	ror	r24
 a4e:	77 95       	ror	r23
 a50:	67 95       	ror	r22
 a52:	ba 95       	dec	r27
 a54:	c9 f7       	brne	.-14     	; 0xa48 <__ultoa_invert+0x86>
 a56:	00 97       	sbiw	r24, 0x00	; 0
 a58:	61 05       	cpc	r22, r1
 a5a:	71 05       	cpc	r23, r1
 a5c:	08 95       	ret
 a5e:	9b 01       	movw	r18, r22
 a60:	ac 01       	movw	r20, r24
 a62:	0a 2e       	mov	r0, r26
 a64:	06 94       	lsr	r0
 a66:	57 95       	ror	r21
 a68:	47 95       	ror	r20
 a6a:	37 95       	ror	r19
 a6c:	27 95       	ror	r18
 a6e:	ba 95       	dec	r27
 a70:	c9 f7       	brne	.-14     	; 0xa64 <__ultoa_invert+0xa2>
 a72:	62 0f       	add	r22, r18
 a74:	73 1f       	adc	r23, r19
 a76:	84 1f       	adc	r24, r20
 a78:	95 1f       	adc	r25, r21
 a7a:	a0 1d       	adc	r26, r0
 a7c:	08 95       	ret

00000a7e <__prologue_saves__>:
 a7e:	2f 92       	push	r2
 a80:	3f 92       	push	r3
 a82:	4f 92       	push	r4
 a84:	5f 92       	push	r5
 a86:	6f 92       	push	r6
 a88:	7f 92       	push	r7
 a8a:	8f 92       	push	r8
 a8c:	9f 92       	push	r9
 a8e:	af 92       	push	r10
 a90:	bf 92       	push	r11
 a92:	cf 92       	push	r12
 a94:	df 92       	push	r13
 a96:	ef 92       	push	r14
 a98:	ff 92       	push	r15
 a9a:	0f 93       	push	r16
 a9c:	1f 93       	push	r17
 a9e:	cf 93       	push	r28
 aa0:	df 93       	push	r29
 aa2:	cd b7       	in	r28, 0x3d	; 61
 aa4:	de b7       	in	r29, 0x3e	; 62
 aa6:	ca 1b       	sub	r28, r26
 aa8:	db 0b       	sbc	r29, r27
 aaa:	0f b6       	in	r0, 0x3f	; 63
 aac:	f8 94       	cli
 aae:	de bf       	out	0x3e, r29	; 62
 ab0:	0f be       	out	0x3f, r0	; 63
 ab2:	cd bf       	out	0x3d, r28	; 61
 ab4:	09 94       	ijmp

00000ab6 <__epilogue_restores__>:
 ab6:	2a 88       	ldd	r2, Y+18	; 0x12
 ab8:	39 88       	ldd	r3, Y+17	; 0x11
 aba:	48 88       	ldd	r4, Y+16	; 0x10
 abc:	5f 84       	ldd	r5, Y+15	; 0x0f
 abe:	6e 84       	ldd	r6, Y+14	; 0x0e
 ac0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ac2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ac4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ac6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ac8:	b9 84       	ldd	r11, Y+9	; 0x09
 aca:	c8 84       	ldd	r12, Y+8	; 0x08
 acc:	df 80       	ldd	r13, Y+7	; 0x07
 ace:	ee 80       	ldd	r14, Y+6	; 0x06
 ad0:	fd 80       	ldd	r15, Y+5	; 0x05
 ad2:	0c 81       	ldd	r16, Y+4	; 0x04
 ad4:	1b 81       	ldd	r17, Y+3	; 0x03
 ad6:	aa 81       	ldd	r26, Y+2	; 0x02
 ad8:	b9 81       	ldd	r27, Y+1	; 0x01
 ada:	ce 0f       	add	r28, r30
 adc:	d1 1d       	adc	r29, r1
 ade:	0f b6       	in	r0, 0x3f	; 63
 ae0:	f8 94       	cli
 ae2:	de bf       	out	0x3e, r29	; 62
 ae4:	0f be       	out	0x3f, r0	; 63
 ae6:	cd bf       	out	0x3d, r28	; 61
 ae8:	ed 01       	movw	r28, r26
 aea:	08 95       	ret

00000aec <_exit>:
 aec:	f8 94       	cli

00000aee <__stop_program>:
 aee:	ff cf       	rjmp	.-2      	; 0xaee <__stop_program>
