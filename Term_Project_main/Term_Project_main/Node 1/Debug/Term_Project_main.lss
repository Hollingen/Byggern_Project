
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000bfc  00000c90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bfc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800140  00800140  00000cd0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019cd  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d29  00000000  00000000  0000291d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e4d  00000000  00000000  00003646  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000488  00000000  00000000  00004494  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a6  00000000  00000000  0000491c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b80  00000000  00000000  000050c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00005c42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec ef       	ldi	r30, 0xFC	; 252
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 34       	cpi	r26, 0x40	; 64
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e4       	ldi	r26, 0x40	; 64
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ab 34       	cpi	r26, 0x4B	; 75
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 80 00 	call	0x100	; 0x100 <main>
  a6:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <Int_INIT>:
  ce:	8b b7       	in	r24, 0x3b	; 59
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	8b bf       	out	0x3b, r24	; 59
  d4:	85 b7       	in	r24, 0x35	; 53
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	85 bf       	out	0x35, r24	; 53
  da:	85 b7       	in	r24, 0x35	; 53
  dc:	82 60       	ori	r24, 0x02	; 2
  de:	85 bf       	out	0x35, r24	; 53
  e0:	08 95       	ret

000000e2 <__vector_1>:
  e2:	1f 92       	push	r1
  e4:	0f 92       	push	r0
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	0f 92       	push	r0
  ea:	11 24       	eor	r1, r1
  ec:	8f 93       	push	r24
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <main>:
#include "SPI/SPIdrv.h"
#include "MCP2515/MCP2515drv.h"

int main(void)
{
	USART_Init(MYUBRR);
 100:	8f e1       	ldi	r24, 0x1F	; 31
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 82 01 	call	0x304	; 0x304 <USART_Init>
	XMEM_init();
 108:	0e 94 73 01 	call	0x2e6	; 0x2e6 <XMEM_init>
	Int_INIT();
 10c:	0e 94 67 00 	call	0xce	; 0xce <Int_INIT>
	ADC_Init();
 110:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
	oled_init();
 114:	0e 94 11 01 	call	0x222	; 0x222 <oled_init>
	mcp2515_init();
 118:	0e 94 cd 00 	call	0x19a	; 0x19a <mcp2515_init>
 11c:	ff cf       	rjmp	.-2      	; 0x11c <main+0x1c>

0000011e <mcp2515_read>:
    status = spi_read_char();
    DDRB |= (1 << PB4); // Deselect CAN - controller

    return status;

}
 11e:	1f 93       	push	r17
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	18 2f       	mov	r17, r24
 126:	eb 01       	movw	r28, r22
 128:	87 b3       	in	r24, 0x17	; 23
 12a:	8f 7e       	andi	r24, 0xEF	; 239
 12c:	87 bb       	out	0x17, r24	; 23
 12e:	83 e0       	ldi	r24, 0x03	; 3
 130:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
 134:	81 2f       	mov	r24, r17
 136:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
 13a:	0e 94 5f 01 	call	0x2be	; 0x2be <spi_read_char>
 13e:	88 83       	st	Y, r24
 140:	87 b3       	in	r24, 0x17	; 23
 142:	80 61       	ori	r24, 0x10	; 16
 144:	87 bb       	out	0x17, r24	; 23
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	1f 91       	pop	r17
 14c:	08 95       	ret

0000014e <mcp2515_reset>:
 14e:	87 b3       	in	r24, 0x17	; 23
 150:	8f 7e       	andi	r24, 0xEF	; 239
 152:	87 bb       	out	0x17, r24	; 23
 154:	80 ec       	ldi	r24, 0xC0	; 192
 156:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
 15a:	87 b3       	in	r24, 0x17	; 23
 15c:	80 61       	ori	r24, 0x10	; 16
 15e:	87 bb       	out	0x17, r24	; 23
 160:	08 95       	ret

00000162 <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
 162:	1f 93       	push	r17
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	18 2f       	mov	r17, r24
 16a:	d6 2f       	mov	r29, r22
 16c:	c4 2f       	mov	r28, r20
    DDRB &= ~(1 << DD_SS); // Select CAN - controller
 16e:	87 b3       	in	r24, 0x17	; 23
 170:	8f 7e       	andi	r24, 0xEF	; 239
 172:	87 bb       	out	0x17, r24	; 23
    spi_write_char(MCP_BITMOD);   //Write read_status bit to SPI
 174:	85 e0       	ldi	r24, 0x05	; 5
 176:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
    spi_write_char(address); // Send address
 17a:	81 2f       	mov	r24, r17
 17c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
    spi_write_char(mask); // Send mask
 180:	8d 2f       	mov	r24, r29
 182:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
    spi_write_char(data); // Send data
 186:	8c 2f       	mov	r24, r28
 188:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <spi_write_char>
    DDRB |= (1 << DD_SS); // Deselect CAN - controller
 18c:	87 b3       	in	r24, 0x17	; 23
 18e:	80 61       	ori	r24, 0x10	; 16
 190:	87 bb       	out	0x17, r24	; 23
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	1f 91       	pop	r17
 198:	08 95       	ret

0000019a <mcp2515_init>:
#include "../SPI/SPIdrv.h"




uint8_t mcp2515_init(){
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	1f 92       	push	r1
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
    uint8_t value;
	spi_init_master(); // Initialize SPI
 1a4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <spi_init_master>
    mcp2515_reset(); // end reset - command
 1a8:	0e 94 a7 00 	call	0x14e	; 0x14e <mcp2515_reset>
    // Self - testS
	//mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_CONFIG);

    mcp2515_read(MCP_CANSTAT, &value);
 1ac:	be 01       	movw	r22, r28
 1ae:	6f 5f       	subi	r22, 0xFF	; 255
 1b0:	7f 4f       	sbci	r23, 0xFF	; 255
 1b2:	8e e0       	ldi	r24, 0x0E	; 14
 1b4:	0e 94 8f 00 	call	0x11e	; 0x11e <mcp2515_read>
	printf("value: %d\n\r", value);
 1b8:	89 81       	ldd	r24, Y+1	; 0x01
 1ba:	1f 92       	push	r1
 1bc:	8f 93       	push	r24
 1be:	86 e0       	ldi	r24, 0x06	; 6
 1c0:	91 e0       	ldi	r25, 0x01	; 1
 1c2:	9f 93       	push	r25
 1c4:	8f 93       	push	r24
 1c6:	0e 94 da 01 	call	0x3b4	; 0x3b4 <printf>
    if ((value & MODE_MASK) != MODE_CONFIG) {
 1ca:	89 81       	ldd	r24, Y+1	; 0x01
 1cc:	80 7e       	andi	r24, 0xE0	; 224
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	80 38       	cpi	r24, 0x80	; 128
 1d8:	51 f0       	breq	.+20     	; 0x1ee <mcp2515_init+0x54>
        printf ("MCP2515 is NOT in config mode after reset !\n\r");
 1da:	82 e1       	ldi	r24, 0x12	; 18
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <printf>
    return 1;
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	13 c0       	rjmp	.+38     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
    }
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_LOOPBACK);
 1ee:	40 e4       	ldi	r20, 0x40	; 64
 1f0:	60 ee       	ldi	r22, 0xE0	; 224
 1f2:	8f e0       	ldi	r24, 0x0F	; 15
 1f4:	0e 94 b1 00 	call	0x162	; 0x162 <mcp2515_bit_modify>
	printf("value: %d\n\r", value);
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	1f 92       	push	r1
 1fc:	8f 93       	push	r24
 1fe:	86 e0       	ldi	r24, 0x06	; 6
 200:	91 e0       	ldi	r25, 0x01	; 1
 202:	9f 93       	push	r25
 204:	8f 93       	push	r24
 206:	0e 94 da 01 	call	0x3b4	; 0x3b4 <printf>

    return 0;
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	80 e0       	ldi	r24, 0x00	; 0
}
 214:	0f 90       	pop	r0
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <oled_write_command>:
	ext_mem[0]= data;
}

void oled_write_data(uint8_t data){
	volatile char *ext_mem = (char *) OLED_DATA_ADDRESS;
	ext_mem[0]= data;
 21c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xeb5>
 220:	08 95       	ret

00000222 <oled_init>:
}

void oled_init(){
    //Set inits according to datasheet
    oled_write_command(0xae); // display off
 222:	8e ea       	ldi	r24, 0xAE	; 174
 224:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xa1); //segment remap
 228:	81 ea       	ldi	r24, 0xA1	; 161
 22a:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xda); //common pads hardware: alternative
 22e:	8a ed       	ldi	r24, 0xDA	; 218
 230:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x12);
 234:	82 e1       	ldi	r24, 0x12	; 18
 236:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xc8); //common output scan direction:com63~com0
 23a:	88 ec       	ldi	r24, 0xC8	; 200
 23c:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xa8); //multiplex ration mode:63
 240:	88 ea       	ldi	r24, 0xA8	; 168
 242:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x3f);
 246:	8f e3       	ldi	r24, 0x3F	; 63
 248:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xd5); //display divide ratio/osc. freq. mode
 24c:	85 ed       	ldi	r24, 0xD5	; 213
 24e:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x80);
 252:	80 e8       	ldi	r24, 0x80	; 128
 254:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x81); //contrast control
 258:	81 e8       	ldi	r24, 0x81	; 129
 25a:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x50);
 25e:	80 e5       	ldi	r24, 0x50	; 80
 260:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xd9); //set pre-charge period
 264:	89 ed       	ldi	r24, 0xD9	; 217
 266:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x21);
 26a:	81 e2       	ldi	r24, 0x21	; 33
 26c:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x20); //Set Memory Addressing Mode
 270:	80 e2       	ldi	r24, 0x20	; 32
 272:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x02);
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xdb); //VCOM deselect level mode
 27c:	8b ed       	ldi	r24, 0xDB	; 219
 27e:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x30);
 282:	80 e3       	ldi	r24, 0x30	; 48
 284:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xad); //master configuration
 288:	8d ea       	ldi	r24, 0xAD	; 173
 28a:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0x00);
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xa4); //out follows RAM content
 294:	84 ea       	ldi	r24, 0xA4	; 164
 296:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xa6); //set normal display
 29a:	86 ea       	ldi	r24, 0xA6	; 166
 29c:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
    oled_write_command(0xaf); // display on
 2a0:	8f ea       	ldi	r24, 0xAF	; 175
 2a2:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>

    //Set to page adressing mode
    oled_write_command(0x20);
 2a6:	80 e2       	ldi	r24, 0x20	; 32
 2a8:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
	oled_write_command(0b10);
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	0e 94 0e 01 	call	0x21c	; 0x21c <oled_write_command>
 2b2:	08 95       	ret

000002b4 <spi_write_char>:
	SPCR = (1<<SPE);
}
*/
void spi_write_char(char cData){
	char flushbuffer;
    SPDR = cData;
 2b4:	8f b9       	out	0x0f, r24	; 15
    //Wait for send to complete

	loop_until_bit_is_set(SPSR, SPIF);
 2b6:	77 9b       	sbis	0x0e, 7	; 14
 2b8:	fe cf       	rjmp	.-4      	; 0x2b6 <spi_write_char+0x2>
	flushbuffer = SPDR;
 2ba:	8f b1       	in	r24, 0x0f	; 15
 2bc:	08 95       	ret

000002be <spi_read_char>:
}

char spi_read_char(){
    SPDR = 0xFF;
 2be:	8f ef       	ldi	r24, 0xFF	; 255
 2c0:	8f b9       	out	0x0f, r24	; 15
	// Wait for reception to complete

    loop_until_bit_is_set(SPSR, SPIF);
 2c2:	77 9b       	sbis	0x0e, 7	; 14
 2c4:	fe cf       	rjmp	.-4      	; 0x2c2 <spi_read_char+0x4>
	// Return char in data register
	return SPDR;
 2c6:	8f b1       	in	r24, 0x0f	; 15

}
 2c8:	08 95       	ret

000002ca <spi_set_ss_high>:

void spi_set_ss_high(){
    PORTB |= (1 << DD_SS);
 2ca:	88 b3       	in	r24, 0x18	; 24
 2cc:	80 61       	ori	r24, 0x10	; 16
 2ce:	88 bb       	out	0x18, r24	; 24
 2d0:	08 95       	ret

000002d2 <spi_init_master>:
#include "SPIdrv.h"


void spi_init_master(){
    // Set MOSI and SCK - og SS - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
 2d2:	80 eb       	ldi	r24, 0xB0	; 176
 2d4:	87 bb       	out	0x17, r24	; 23
	
	DDR_SPI &= ~(1<<DD_MISO);
 2d6:	87 b3       	in	r24, 0x17	; 23
 2d8:	8f 7b       	andi	r24, 0xBF	; 191
 2da:	87 bb       	out	0x17, r24	; 23
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);//|(1<<SPIE);
 2dc:	81 e5       	ldi	r24, 0x51	; 81
 2de:	8d b9       	out	0x0d, r24	; 13
	//SPCR &= ~((1<<CPOL)|(1<<CPHA));
	spi_set_ss_high();
 2e0:	0e 94 65 01 	call	0x2ca	; 0x2ca <spi_set_ss_high>
 2e4:	08 95       	ret

000002e6 <XMEM_init>:
 2e6:	85 b7       	in	r24, 0x35	; 53
 2e8:	80 68       	ori	r24, 0x80	; 128
 2ea:	85 bf       	out	0x35, r24	; 53
 2ec:	80 b7       	in	r24, 0x30	; 48
 2ee:	80 62       	ori	r24, 0x20	; 32
 2f0:	80 bf       	out	0x30, r24	; 48
 2f2:	08 95       	ret

000002f4 <USART_Transmit>:
 2f4:	5d 9b       	sbis	0x0b, 5	; 11
 2f6:	fe cf       	rjmp	.-4      	; 0x2f4 <USART_Transmit>
 2f8:	8c b9       	out	0x0c, r24	; 12
 2fa:	08 95       	ret

000002fc <USART_Receive>:
 2fc:	5f 9b       	sbis	0x0b, 7	; 11
 2fe:	fe cf       	rjmp	.-4      	; 0x2fc <USART_Receive>
 300:	8c b1       	in	r24, 0x0c	; 12
 302:	08 95       	ret

00000304 <USART_Init>:
 304:	90 bd       	out	0x20, r25	; 32
 306:	89 b9       	out	0x09, r24	; 9
 308:	88 e1       	ldi	r24, 0x18	; 24
 30a:	8a b9       	out	0x0a, r24	; 10
 30c:	8e e8       	ldi	r24, 0x8E	; 142
 30e:	80 bd       	out	0x20, r24	; 32
 310:	6e e7       	ldi	r22, 0x7E	; 126
 312:	71 e0       	ldi	r23, 0x01	; 1
 314:	8a e7       	ldi	r24, 0x7A	; 122
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	0e 94 8f 01 	call	0x31e	; 0x31e <fdevopen>
 31c:	08 95       	ret

0000031e <fdevopen>:
 31e:	0f 93       	push	r16
 320:	1f 93       	push	r17
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	00 97       	sbiw	r24, 0x00	; 0
 328:	31 f4       	brne	.+12     	; 0x336 <fdevopen+0x18>
 32a:	61 15       	cp	r22, r1
 32c:	71 05       	cpc	r23, r1
 32e:	19 f4       	brne	.+6      	; 0x336 <fdevopen+0x18>
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	3a c0       	rjmp	.+116    	; 0x3aa <fdevopen+0x8c>
 336:	8b 01       	movw	r16, r22
 338:	ec 01       	movw	r28, r24
 33a:	6e e0       	ldi	r22, 0x0E	; 14
 33c:	70 e0       	ldi	r23, 0x00	; 0
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <calloc>
 346:	fc 01       	movw	r30, r24
 348:	89 2b       	or	r24, r25
 34a:	91 f3       	breq	.-28     	; 0x330 <fdevopen+0x12>
 34c:	80 e8       	ldi	r24, 0x80	; 128
 34e:	83 83       	std	Z+3, r24	; 0x03
 350:	01 15       	cp	r16, r1
 352:	11 05       	cpc	r17, r1
 354:	71 f0       	breq	.+28     	; 0x372 <fdevopen+0x54>
 356:	13 87       	std	Z+11, r17	; 0x0b
 358:	02 87       	std	Z+10, r16	; 0x0a
 35a:	81 e8       	ldi	r24, 0x81	; 129
 35c:	83 83       	std	Z+3, r24	; 0x03
 35e:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__iob>
 362:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <__iob+0x1>
 366:	89 2b       	or	r24, r25
 368:	21 f4       	brne	.+8      	; 0x372 <fdevopen+0x54>
 36a:	f0 93 42 01 	sts	0x0142, r31	; 0x800142 <__iob+0x1>
 36e:	e0 93 41 01 	sts	0x0141, r30	; 0x800141 <__iob>
 372:	20 97       	sbiw	r28, 0x00	; 0
 374:	c9 f0       	breq	.+50     	; 0x3a8 <fdevopen+0x8a>
 376:	d1 87       	std	Z+9, r29	; 0x09
 378:	c0 87       	std	Z+8, r28	; 0x08
 37a:	83 81       	ldd	r24, Z+3	; 0x03
 37c:	82 60       	ori	r24, 0x02	; 2
 37e:	83 83       	std	Z+3, r24	; 0x03
 380:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 384:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 388:	89 2b       	or	r24, r25
 38a:	71 f4       	brne	.+28     	; 0x3a8 <fdevopen+0x8a>
 38c:	f0 93 44 01 	sts	0x0144, r31	; 0x800144 <__iob+0x3>
 390:	e0 93 43 01 	sts	0x0143, r30	; 0x800143 <__iob+0x2>
 394:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__iob+0x4>
 398:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__iob+0x5>
 39c:	89 2b       	or	r24, r25
 39e:	21 f4       	brne	.+8      	; 0x3a8 <fdevopen+0x8a>
 3a0:	f0 93 46 01 	sts	0x0146, r31	; 0x800146 <__iob+0x5>
 3a4:	e0 93 45 01 	sts	0x0145, r30	; 0x800145 <__iob+0x4>
 3a8:	cf 01       	movw	r24, r30
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	1f 91       	pop	r17
 3b0:	0f 91       	pop	r16
 3b2:	08 95       	ret

000003b4 <printf>:
 3b4:	a0 e0       	ldi	r26, 0x00	; 0
 3b6:	b0 e0       	ldi	r27, 0x00	; 0
 3b8:	e0 ee       	ldi	r30, 0xE0	; 224
 3ba:	f1 e0       	ldi	r31, 0x01	; 1
 3bc:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__prologue_saves__+0x20>
 3c0:	ae 01       	movw	r20, r28
 3c2:	4b 5f       	subi	r20, 0xFB	; 251
 3c4:	5f 4f       	sbci	r21, 0xFF	; 255
 3c6:	fa 01       	movw	r30, r20
 3c8:	61 91       	ld	r22, Z+
 3ca:	71 91       	ld	r23, Z+
 3cc:	af 01       	movw	r20, r30
 3ce:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 3d2:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 3d6:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <vfprintf>
 3da:	e2 e0       	ldi	r30, 0x02	; 2
 3dc:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__epilogue_restores__+0x20>

000003e0 <vfprintf>:
 3e0:	ab e0       	ldi	r26, 0x0B	; 11
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e6 ef       	ldi	r30, 0xF6	; 246
 3e6:	f1 e0       	ldi	r31, 0x01	; 1
 3e8:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__prologue_saves__>
 3ec:	6c 01       	movw	r12, r24
 3ee:	7b 01       	movw	r14, r22
 3f0:	8a 01       	movw	r16, r20
 3f2:	fc 01       	movw	r30, r24
 3f4:	17 82       	std	Z+7, r1	; 0x07
 3f6:	16 82       	std	Z+6, r1	; 0x06
 3f8:	83 81       	ldd	r24, Z+3	; 0x03
 3fa:	81 ff       	sbrs	r24, 1
 3fc:	cc c1       	rjmp	.+920    	; 0x796 <__stack+0x297>
 3fe:	ce 01       	movw	r24, r28
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	3c 01       	movw	r6, r24
 404:	f6 01       	movw	r30, r12
 406:	93 81       	ldd	r25, Z+3	; 0x03
 408:	f7 01       	movw	r30, r14
 40a:	93 fd       	sbrc	r25, 3
 40c:	85 91       	lpm	r24, Z+
 40e:	93 ff       	sbrs	r25, 3
 410:	81 91       	ld	r24, Z+
 412:	7f 01       	movw	r14, r30
 414:	88 23       	and	r24, r24
 416:	09 f4       	brne	.+2      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
 418:	ba c1       	rjmp	.+884    	; 0x78e <__stack+0x28f>
 41a:	85 32       	cpi	r24, 0x25	; 37
 41c:	39 f4       	brne	.+14     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 41e:	93 fd       	sbrc	r25, 3
 420:	85 91       	lpm	r24, Z+
 422:	93 ff       	sbrs	r25, 3
 424:	81 91       	ld	r24, Z+
 426:	7f 01       	movw	r14, r30
 428:	85 32       	cpi	r24, 0x25	; 37
 42a:	29 f4       	brne	.+10     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 42c:	b6 01       	movw	r22, r12
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 434:	e7 cf       	rjmp	.-50     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 436:	91 2c       	mov	r9, r1
 438:	21 2c       	mov	r2, r1
 43a:	31 2c       	mov	r3, r1
 43c:	ff e1       	ldi	r31, 0x1F	; 31
 43e:	f3 15       	cp	r31, r3
 440:	d8 f0       	brcs	.+54     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 442:	8b 32       	cpi	r24, 0x2B	; 43
 444:	79 f0       	breq	.+30     	; 0x464 <__DATA_REGION_LENGTH__+0x64>
 446:	38 f4       	brcc	.+14     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 448:	80 32       	cpi	r24, 0x20	; 32
 44a:	79 f0       	breq	.+30     	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
 44c:	83 32       	cpi	r24, 0x23	; 35
 44e:	a1 f4       	brne	.+40     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 450:	23 2d       	mov	r18, r3
 452:	20 61       	ori	r18, 0x10	; 16
 454:	1d c0       	rjmp	.+58     	; 0x490 <__DATA_REGION_LENGTH__+0x90>
 456:	8d 32       	cpi	r24, 0x2D	; 45
 458:	61 f0       	breq	.+24     	; 0x472 <__DATA_REGION_LENGTH__+0x72>
 45a:	80 33       	cpi	r24, 0x30	; 48
 45c:	69 f4       	brne	.+26     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 45e:	23 2d       	mov	r18, r3
 460:	21 60       	ori	r18, 0x01	; 1
 462:	16 c0       	rjmp	.+44     	; 0x490 <__DATA_REGION_LENGTH__+0x90>
 464:	83 2d       	mov	r24, r3
 466:	82 60       	ori	r24, 0x02	; 2
 468:	38 2e       	mov	r3, r24
 46a:	e3 2d       	mov	r30, r3
 46c:	e4 60       	ori	r30, 0x04	; 4
 46e:	3e 2e       	mov	r3, r30
 470:	2a c0       	rjmp	.+84     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 472:	f3 2d       	mov	r31, r3
 474:	f8 60       	ori	r31, 0x08	; 8
 476:	1d c0       	rjmp	.+58     	; 0x4b2 <__DATA_REGION_LENGTH__+0xb2>
 478:	37 fc       	sbrc	r3, 7
 47a:	2d c0       	rjmp	.+90     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 47c:	20 ed       	ldi	r18, 0xD0	; 208
 47e:	28 0f       	add	r18, r24
 480:	2a 30       	cpi	r18, 0x0A	; 10
 482:	40 f0       	brcs	.+16     	; 0x494 <__DATA_REGION_LENGTH__+0x94>
 484:	8e 32       	cpi	r24, 0x2E	; 46
 486:	b9 f4       	brne	.+46     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 488:	36 fc       	sbrc	r3, 6
 48a:	81 c1       	rjmp	.+770    	; 0x78e <__stack+0x28f>
 48c:	23 2d       	mov	r18, r3
 48e:	20 64       	ori	r18, 0x40	; 64
 490:	32 2e       	mov	r3, r18
 492:	19 c0       	rjmp	.+50     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 494:	36 fe       	sbrs	r3, 6
 496:	06 c0       	rjmp	.+12     	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
 498:	8a e0       	ldi	r24, 0x0A	; 10
 49a:	98 9e       	mul	r9, r24
 49c:	20 0d       	add	r18, r0
 49e:	11 24       	eor	r1, r1
 4a0:	92 2e       	mov	r9, r18
 4a2:	11 c0       	rjmp	.+34     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 4a4:	ea e0       	ldi	r30, 0x0A	; 10
 4a6:	2e 9e       	mul	r2, r30
 4a8:	20 0d       	add	r18, r0
 4aa:	11 24       	eor	r1, r1
 4ac:	22 2e       	mov	r2, r18
 4ae:	f3 2d       	mov	r31, r3
 4b0:	f0 62       	ori	r31, 0x20	; 32
 4b2:	3f 2e       	mov	r3, r31
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 4b6:	8c 36       	cpi	r24, 0x6C	; 108
 4b8:	21 f4       	brne	.+8      	; 0x4c2 <__DATA_REGION_LENGTH__+0xc2>
 4ba:	83 2d       	mov	r24, r3
 4bc:	80 68       	ori	r24, 0x80	; 128
 4be:	38 2e       	mov	r3, r24
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 4c2:	88 36       	cpi	r24, 0x68	; 104
 4c4:	41 f4       	brne	.+16     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4c6:	f7 01       	movw	r30, r14
 4c8:	93 fd       	sbrc	r25, 3
 4ca:	85 91       	lpm	r24, Z+
 4cc:	93 ff       	sbrs	r25, 3
 4ce:	81 91       	ld	r24, Z+
 4d0:	7f 01       	movw	r14, r30
 4d2:	81 11       	cpse	r24, r1
 4d4:	b3 cf       	rjmp	.-154    	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 4d6:	98 2f       	mov	r25, r24
 4d8:	9f 7d       	andi	r25, 0xDF	; 223
 4da:	95 54       	subi	r25, 0x45	; 69
 4dc:	93 30       	cpi	r25, 0x03	; 3
 4de:	28 f4       	brcc	.+10     	; 0x4ea <__DATA_REGION_LENGTH__+0xea>
 4e0:	0c 5f       	subi	r16, 0xFC	; 252
 4e2:	1f 4f       	sbci	r17, 0xFF	; 255
 4e4:	9f e3       	ldi	r25, 0x3F	; 63
 4e6:	99 83       	std	Y+1, r25	; 0x01
 4e8:	0d c0       	rjmp	.+26     	; 0x504 <__stack+0x5>
 4ea:	83 36       	cpi	r24, 0x63	; 99
 4ec:	31 f0       	breq	.+12     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4ee:	83 37       	cpi	r24, 0x73	; 115
 4f0:	71 f0       	breq	.+28     	; 0x50e <__stack+0xf>
 4f2:	83 35       	cpi	r24, 0x53	; 83
 4f4:	09 f0       	breq	.+2      	; 0x4f8 <__DATA_REGION_LENGTH__+0xf8>
 4f6:	59 c0       	rjmp	.+178    	; 0x5aa <__stack+0xab>
 4f8:	21 c0       	rjmp	.+66     	; 0x53c <__stack+0x3d>
 4fa:	f8 01       	movw	r30, r16
 4fc:	80 81       	ld	r24, Z
 4fe:	89 83       	std	Y+1, r24	; 0x01
 500:	0e 5f       	subi	r16, 0xFE	; 254
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	88 24       	eor	r8, r8
 506:	83 94       	inc	r8
 508:	91 2c       	mov	r9, r1
 50a:	53 01       	movw	r10, r6
 50c:	13 c0       	rjmp	.+38     	; 0x534 <__stack+0x35>
 50e:	28 01       	movw	r4, r16
 510:	f2 e0       	ldi	r31, 0x02	; 2
 512:	4f 0e       	add	r4, r31
 514:	51 1c       	adc	r5, r1
 516:	f8 01       	movw	r30, r16
 518:	a0 80       	ld	r10, Z
 51a:	b1 80       	ldd	r11, Z+1	; 0x01
 51c:	36 fe       	sbrs	r3, 6
 51e:	03 c0       	rjmp	.+6      	; 0x526 <__stack+0x27>
 520:	69 2d       	mov	r22, r9
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	02 c0       	rjmp	.+4      	; 0x52a <__stack+0x2b>
 526:	6f ef       	ldi	r22, 0xFF	; 255
 528:	7f ef       	ldi	r23, 0xFF	; 255
 52a:	c5 01       	movw	r24, r10
 52c:	0e 94 20 05 	call	0xa40	; 0xa40 <strnlen>
 530:	4c 01       	movw	r8, r24
 532:	82 01       	movw	r16, r4
 534:	f3 2d       	mov	r31, r3
 536:	ff 77       	andi	r31, 0x7F	; 127
 538:	3f 2e       	mov	r3, r31
 53a:	16 c0       	rjmp	.+44     	; 0x568 <__stack+0x69>
 53c:	28 01       	movw	r4, r16
 53e:	22 e0       	ldi	r18, 0x02	; 2
 540:	42 0e       	add	r4, r18
 542:	51 1c       	adc	r5, r1
 544:	f8 01       	movw	r30, r16
 546:	a0 80       	ld	r10, Z
 548:	b1 80       	ldd	r11, Z+1	; 0x01
 54a:	36 fe       	sbrs	r3, 6
 54c:	03 c0       	rjmp	.+6      	; 0x554 <__stack+0x55>
 54e:	69 2d       	mov	r22, r9
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	02 c0       	rjmp	.+4      	; 0x558 <__stack+0x59>
 554:	6f ef       	ldi	r22, 0xFF	; 255
 556:	7f ef       	ldi	r23, 0xFF	; 255
 558:	c5 01       	movw	r24, r10
 55a:	0e 94 0e 05 	call	0xa1c	; 0xa1c <strnlen_P>
 55e:	4c 01       	movw	r8, r24
 560:	f3 2d       	mov	r31, r3
 562:	f0 68       	ori	r31, 0x80	; 128
 564:	3f 2e       	mov	r3, r31
 566:	82 01       	movw	r16, r4
 568:	33 fc       	sbrc	r3, 3
 56a:	1b c0       	rjmp	.+54     	; 0x5a2 <__stack+0xa3>
 56c:	82 2d       	mov	r24, r2
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	88 16       	cp	r8, r24
 572:	99 06       	cpc	r9, r25
 574:	b0 f4       	brcc	.+44     	; 0x5a2 <__stack+0xa3>
 576:	b6 01       	movw	r22, r12
 578:	80 e2       	ldi	r24, 0x20	; 32
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 580:	2a 94       	dec	r2
 582:	f4 cf       	rjmp	.-24     	; 0x56c <__stack+0x6d>
 584:	f5 01       	movw	r30, r10
 586:	37 fc       	sbrc	r3, 7
 588:	85 91       	lpm	r24, Z+
 58a:	37 fe       	sbrs	r3, 7
 58c:	81 91       	ld	r24, Z+
 58e:	5f 01       	movw	r10, r30
 590:	b6 01       	movw	r22, r12
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 598:	21 10       	cpse	r2, r1
 59a:	2a 94       	dec	r2
 59c:	21 e0       	ldi	r18, 0x01	; 1
 59e:	82 1a       	sub	r8, r18
 5a0:	91 08       	sbc	r9, r1
 5a2:	81 14       	cp	r8, r1
 5a4:	91 04       	cpc	r9, r1
 5a6:	71 f7       	brne	.-36     	; 0x584 <__stack+0x85>
 5a8:	e8 c0       	rjmp	.+464    	; 0x77a <__stack+0x27b>
 5aa:	84 36       	cpi	r24, 0x64	; 100
 5ac:	11 f0       	breq	.+4      	; 0x5b2 <__stack+0xb3>
 5ae:	89 36       	cpi	r24, 0x69	; 105
 5b0:	41 f5       	brne	.+80     	; 0x602 <__stack+0x103>
 5b2:	f8 01       	movw	r30, r16
 5b4:	37 fe       	sbrs	r3, 7
 5b6:	07 c0       	rjmp	.+14     	; 0x5c6 <__stack+0xc7>
 5b8:	60 81       	ld	r22, Z
 5ba:	71 81       	ldd	r23, Z+1	; 0x01
 5bc:	82 81       	ldd	r24, Z+2	; 0x02
 5be:	93 81       	ldd	r25, Z+3	; 0x03
 5c0:	0c 5f       	subi	r16, 0xFC	; 252
 5c2:	1f 4f       	sbci	r17, 0xFF	; 255
 5c4:	08 c0       	rjmp	.+16     	; 0x5d6 <__stack+0xd7>
 5c6:	60 81       	ld	r22, Z
 5c8:	71 81       	ldd	r23, Z+1	; 0x01
 5ca:	07 2e       	mov	r0, r23
 5cc:	00 0c       	add	r0, r0
 5ce:	88 0b       	sbc	r24, r24
 5d0:	99 0b       	sbc	r25, r25
 5d2:	0e 5f       	subi	r16, 0xFE	; 254
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	f3 2d       	mov	r31, r3
 5d8:	ff 76       	andi	r31, 0x6F	; 111
 5da:	3f 2e       	mov	r3, r31
 5dc:	97 ff       	sbrs	r25, 7
 5de:	09 c0       	rjmp	.+18     	; 0x5f2 <__stack+0xf3>
 5e0:	90 95       	com	r25
 5e2:	80 95       	com	r24
 5e4:	70 95       	com	r23
 5e6:	61 95       	neg	r22
 5e8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ea:	8f 4f       	sbci	r24, 0xFF	; 255
 5ec:	9f 4f       	sbci	r25, 0xFF	; 255
 5ee:	f0 68       	ori	r31, 0x80	; 128
 5f0:	3f 2e       	mov	r3, r31
 5f2:	2a e0       	ldi	r18, 0x0A	; 10
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	a3 01       	movw	r20, r6
 5f8:	0e 94 67 05 	call	0xace	; 0xace <__ultoa_invert>
 5fc:	88 2e       	mov	r8, r24
 5fe:	86 18       	sub	r8, r6
 600:	45 c0       	rjmp	.+138    	; 0x68c <__stack+0x18d>
 602:	85 37       	cpi	r24, 0x75	; 117
 604:	31 f4       	brne	.+12     	; 0x612 <__stack+0x113>
 606:	23 2d       	mov	r18, r3
 608:	2f 7e       	andi	r18, 0xEF	; 239
 60a:	b2 2e       	mov	r11, r18
 60c:	2a e0       	ldi	r18, 0x0A	; 10
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	25 c0       	rjmp	.+74     	; 0x65c <__stack+0x15d>
 612:	93 2d       	mov	r25, r3
 614:	99 7f       	andi	r25, 0xF9	; 249
 616:	b9 2e       	mov	r11, r25
 618:	8f 36       	cpi	r24, 0x6F	; 111
 61a:	c1 f0       	breq	.+48     	; 0x64c <__stack+0x14d>
 61c:	18 f4       	brcc	.+6      	; 0x624 <__stack+0x125>
 61e:	88 35       	cpi	r24, 0x58	; 88
 620:	79 f0       	breq	.+30     	; 0x640 <__stack+0x141>
 622:	b5 c0       	rjmp	.+362    	; 0x78e <__stack+0x28f>
 624:	80 37       	cpi	r24, 0x70	; 112
 626:	19 f0       	breq	.+6      	; 0x62e <__stack+0x12f>
 628:	88 37       	cpi	r24, 0x78	; 120
 62a:	21 f0       	breq	.+8      	; 0x634 <__stack+0x135>
 62c:	b0 c0       	rjmp	.+352    	; 0x78e <__stack+0x28f>
 62e:	e9 2f       	mov	r30, r25
 630:	e0 61       	ori	r30, 0x10	; 16
 632:	be 2e       	mov	r11, r30
 634:	b4 fe       	sbrs	r11, 4
 636:	0d c0       	rjmp	.+26     	; 0x652 <__stack+0x153>
 638:	fb 2d       	mov	r31, r11
 63a:	f4 60       	ori	r31, 0x04	; 4
 63c:	bf 2e       	mov	r11, r31
 63e:	09 c0       	rjmp	.+18     	; 0x652 <__stack+0x153>
 640:	34 fe       	sbrs	r3, 4
 642:	0a c0       	rjmp	.+20     	; 0x658 <__stack+0x159>
 644:	29 2f       	mov	r18, r25
 646:	26 60       	ori	r18, 0x06	; 6
 648:	b2 2e       	mov	r11, r18
 64a:	06 c0       	rjmp	.+12     	; 0x658 <__stack+0x159>
 64c:	28 e0       	ldi	r18, 0x08	; 8
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	05 c0       	rjmp	.+10     	; 0x65c <__stack+0x15d>
 652:	20 e1       	ldi	r18, 0x10	; 16
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	02 c0       	rjmp	.+4      	; 0x65c <__stack+0x15d>
 658:	20 e1       	ldi	r18, 0x10	; 16
 65a:	32 e0       	ldi	r19, 0x02	; 2
 65c:	f8 01       	movw	r30, r16
 65e:	b7 fe       	sbrs	r11, 7
 660:	07 c0       	rjmp	.+14     	; 0x670 <__stack+0x171>
 662:	60 81       	ld	r22, Z
 664:	71 81       	ldd	r23, Z+1	; 0x01
 666:	82 81       	ldd	r24, Z+2	; 0x02
 668:	93 81       	ldd	r25, Z+3	; 0x03
 66a:	0c 5f       	subi	r16, 0xFC	; 252
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	06 c0       	rjmp	.+12     	; 0x67c <__stack+0x17d>
 670:	60 81       	ld	r22, Z
 672:	71 81       	ldd	r23, Z+1	; 0x01
 674:	80 e0       	ldi	r24, 0x00	; 0
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0e 5f       	subi	r16, 0xFE	; 254
 67a:	1f 4f       	sbci	r17, 0xFF	; 255
 67c:	a3 01       	movw	r20, r6
 67e:	0e 94 67 05 	call	0xace	; 0xace <__ultoa_invert>
 682:	88 2e       	mov	r8, r24
 684:	86 18       	sub	r8, r6
 686:	fb 2d       	mov	r31, r11
 688:	ff 77       	andi	r31, 0x7F	; 127
 68a:	3f 2e       	mov	r3, r31
 68c:	36 fe       	sbrs	r3, 6
 68e:	0d c0       	rjmp	.+26     	; 0x6aa <__stack+0x1ab>
 690:	23 2d       	mov	r18, r3
 692:	2e 7f       	andi	r18, 0xFE	; 254
 694:	a2 2e       	mov	r10, r18
 696:	89 14       	cp	r8, r9
 698:	58 f4       	brcc	.+22     	; 0x6b0 <__stack+0x1b1>
 69a:	34 fe       	sbrs	r3, 4
 69c:	0b c0       	rjmp	.+22     	; 0x6b4 <__stack+0x1b5>
 69e:	32 fc       	sbrc	r3, 2
 6a0:	09 c0       	rjmp	.+18     	; 0x6b4 <__stack+0x1b5>
 6a2:	83 2d       	mov	r24, r3
 6a4:	8e 7e       	andi	r24, 0xEE	; 238
 6a6:	a8 2e       	mov	r10, r24
 6a8:	05 c0       	rjmp	.+10     	; 0x6b4 <__stack+0x1b5>
 6aa:	b8 2c       	mov	r11, r8
 6ac:	a3 2c       	mov	r10, r3
 6ae:	03 c0       	rjmp	.+6      	; 0x6b6 <__stack+0x1b7>
 6b0:	b8 2c       	mov	r11, r8
 6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <__stack+0x1b7>
 6b4:	b9 2c       	mov	r11, r9
 6b6:	a4 fe       	sbrs	r10, 4
 6b8:	0f c0       	rjmp	.+30     	; 0x6d8 <__stack+0x1d9>
 6ba:	fe 01       	movw	r30, r28
 6bc:	e8 0d       	add	r30, r8
 6be:	f1 1d       	adc	r31, r1
 6c0:	80 81       	ld	r24, Z
 6c2:	80 33       	cpi	r24, 0x30	; 48
 6c4:	21 f4       	brne	.+8      	; 0x6ce <__stack+0x1cf>
 6c6:	9a 2d       	mov	r25, r10
 6c8:	99 7e       	andi	r25, 0xE9	; 233
 6ca:	a9 2e       	mov	r10, r25
 6cc:	09 c0       	rjmp	.+18     	; 0x6e0 <__stack+0x1e1>
 6ce:	a2 fe       	sbrs	r10, 2
 6d0:	06 c0       	rjmp	.+12     	; 0x6de <__stack+0x1df>
 6d2:	b3 94       	inc	r11
 6d4:	b3 94       	inc	r11
 6d6:	04 c0       	rjmp	.+8      	; 0x6e0 <__stack+0x1e1>
 6d8:	8a 2d       	mov	r24, r10
 6da:	86 78       	andi	r24, 0x86	; 134
 6dc:	09 f0       	breq	.+2      	; 0x6e0 <__stack+0x1e1>
 6de:	b3 94       	inc	r11
 6e0:	a3 fc       	sbrc	r10, 3
 6e2:	11 c0       	rjmp	.+34     	; 0x706 <__stack+0x207>
 6e4:	a0 fe       	sbrs	r10, 0
 6e6:	06 c0       	rjmp	.+12     	; 0x6f4 <__stack+0x1f5>
 6e8:	b2 14       	cp	r11, r2
 6ea:	88 f4       	brcc	.+34     	; 0x70e <__stack+0x20f>
 6ec:	28 0c       	add	r2, r8
 6ee:	92 2c       	mov	r9, r2
 6f0:	9b 18       	sub	r9, r11
 6f2:	0e c0       	rjmp	.+28     	; 0x710 <__stack+0x211>
 6f4:	b2 14       	cp	r11, r2
 6f6:	60 f4       	brcc	.+24     	; 0x710 <__stack+0x211>
 6f8:	b6 01       	movw	r22, r12
 6fa:	80 e2       	ldi	r24, 0x20	; 32
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 702:	b3 94       	inc	r11
 704:	f7 cf       	rjmp	.-18     	; 0x6f4 <__stack+0x1f5>
 706:	b2 14       	cp	r11, r2
 708:	18 f4       	brcc	.+6      	; 0x710 <__stack+0x211>
 70a:	2b 18       	sub	r2, r11
 70c:	02 c0       	rjmp	.+4      	; 0x712 <__stack+0x213>
 70e:	98 2c       	mov	r9, r8
 710:	21 2c       	mov	r2, r1
 712:	a4 fe       	sbrs	r10, 4
 714:	10 c0       	rjmp	.+32     	; 0x736 <__stack+0x237>
 716:	b6 01       	movw	r22, r12
 718:	80 e3       	ldi	r24, 0x30	; 48
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 720:	a2 fe       	sbrs	r10, 2
 722:	17 c0       	rjmp	.+46     	; 0x752 <__stack+0x253>
 724:	a1 fc       	sbrc	r10, 1
 726:	03 c0       	rjmp	.+6      	; 0x72e <__stack+0x22f>
 728:	88 e7       	ldi	r24, 0x78	; 120
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	02 c0       	rjmp	.+4      	; 0x732 <__stack+0x233>
 72e:	88 e5       	ldi	r24, 0x58	; 88
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	b6 01       	movw	r22, r12
 734:	0c c0       	rjmp	.+24     	; 0x74e <__stack+0x24f>
 736:	8a 2d       	mov	r24, r10
 738:	86 78       	andi	r24, 0x86	; 134
 73a:	59 f0       	breq	.+22     	; 0x752 <__stack+0x253>
 73c:	a1 fe       	sbrs	r10, 1
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__stack+0x245>
 740:	8b e2       	ldi	r24, 0x2B	; 43
 742:	01 c0       	rjmp	.+2      	; 0x746 <__stack+0x247>
 744:	80 e2       	ldi	r24, 0x20	; 32
 746:	a7 fc       	sbrc	r10, 7
 748:	8d e2       	ldi	r24, 0x2D	; 45
 74a:	b6 01       	movw	r22, r12
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 752:	89 14       	cp	r8, r9
 754:	38 f4       	brcc	.+14     	; 0x764 <__stack+0x265>
 756:	b6 01       	movw	r22, r12
 758:	80 e3       	ldi	r24, 0x30	; 48
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 760:	9a 94       	dec	r9
 762:	f7 cf       	rjmp	.-18     	; 0x752 <__stack+0x253>
 764:	8a 94       	dec	r8
 766:	f3 01       	movw	r30, r6
 768:	e8 0d       	add	r30, r8
 76a:	f1 1d       	adc	r31, r1
 76c:	80 81       	ld	r24, Z
 76e:	b6 01       	movw	r22, r12
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 776:	81 10       	cpse	r8, r1
 778:	f5 cf       	rjmp	.-22     	; 0x764 <__stack+0x265>
 77a:	22 20       	and	r2, r2
 77c:	09 f4       	brne	.+2      	; 0x780 <__stack+0x281>
 77e:	42 ce       	rjmp	.-892    	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 780:	b6 01       	movw	r22, r12
 782:	80 e2       	ldi	r24, 0x20	; 32
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 2b 05 	call	0xa56	; 0xa56 <fputc>
 78a:	2a 94       	dec	r2
 78c:	f6 cf       	rjmp	.-20     	; 0x77a <__stack+0x27b>
 78e:	f6 01       	movw	r30, r12
 790:	86 81       	ldd	r24, Z+6	; 0x06
 792:	97 81       	ldd	r25, Z+7	; 0x07
 794:	02 c0       	rjmp	.+4      	; 0x79a <__stack+0x29b>
 796:	8f ef       	ldi	r24, 0xFF	; 255
 798:	9f ef       	ldi	r25, 0xFF	; 255
 79a:	2b 96       	adiw	r28, 0x0b	; 11
 79c:	e2 e1       	ldi	r30, 0x12	; 18
 79e:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__epilogue_restores__>

000007a2 <calloc>:
 7a2:	0f 93       	push	r16
 7a4:	1f 93       	push	r17
 7a6:	cf 93       	push	r28
 7a8:	df 93       	push	r29
 7aa:	86 9f       	mul	r24, r22
 7ac:	80 01       	movw	r16, r0
 7ae:	87 9f       	mul	r24, r23
 7b0:	10 0d       	add	r17, r0
 7b2:	96 9f       	mul	r25, r22
 7b4:	10 0d       	add	r17, r0
 7b6:	11 24       	eor	r1, r1
 7b8:	c8 01       	movw	r24, r16
 7ba:	0e 94 ed 03 	call	0x7da	; 0x7da <malloc>
 7be:	ec 01       	movw	r28, r24
 7c0:	00 97       	sbiw	r24, 0x00	; 0
 7c2:	29 f0       	breq	.+10     	; 0x7ce <calloc+0x2c>
 7c4:	a8 01       	movw	r20, r16
 7c6:	60 e0       	ldi	r22, 0x00	; 0
 7c8:	70 e0       	ldi	r23, 0x00	; 0
 7ca:	0e 94 19 05 	call	0xa32	; 0xa32 <memset>
 7ce:	ce 01       	movw	r24, r28
 7d0:	df 91       	pop	r29
 7d2:	cf 91       	pop	r28
 7d4:	1f 91       	pop	r17
 7d6:	0f 91       	pop	r16
 7d8:	08 95       	ret

000007da <malloc>:
 7da:	0f 93       	push	r16
 7dc:	1f 93       	push	r17
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	82 30       	cpi	r24, 0x02	; 2
 7e4:	91 05       	cpc	r25, r1
 7e6:	10 f4       	brcc	.+4      	; 0x7ec <malloc+0x12>
 7e8:	82 e0       	ldi	r24, 0x02	; 2
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	e0 91 49 01 	lds	r30, 0x0149	; 0x800149 <__flp>
 7f0:	f0 91 4a 01 	lds	r31, 0x014A	; 0x80014a <__flp+0x1>
 7f4:	20 e0       	ldi	r18, 0x00	; 0
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	a0 e0       	ldi	r26, 0x00	; 0
 7fa:	b0 e0       	ldi	r27, 0x00	; 0
 7fc:	30 97       	sbiw	r30, 0x00	; 0
 7fe:	19 f1       	breq	.+70     	; 0x846 <malloc+0x6c>
 800:	40 81       	ld	r20, Z
 802:	51 81       	ldd	r21, Z+1	; 0x01
 804:	02 81       	ldd	r16, Z+2	; 0x02
 806:	13 81       	ldd	r17, Z+3	; 0x03
 808:	48 17       	cp	r20, r24
 80a:	59 07       	cpc	r21, r25
 80c:	c8 f0       	brcs	.+50     	; 0x840 <malloc+0x66>
 80e:	84 17       	cp	r24, r20
 810:	95 07       	cpc	r25, r21
 812:	69 f4       	brne	.+26     	; 0x82e <malloc+0x54>
 814:	10 97       	sbiw	r26, 0x00	; 0
 816:	31 f0       	breq	.+12     	; 0x824 <malloc+0x4a>
 818:	12 96       	adiw	r26, 0x02	; 2
 81a:	0c 93       	st	X, r16
 81c:	12 97       	sbiw	r26, 0x02	; 2
 81e:	13 96       	adiw	r26, 0x03	; 3
 820:	1c 93       	st	X, r17
 822:	27 c0       	rjmp	.+78     	; 0x872 <malloc+0x98>
 824:	00 93 49 01 	sts	0x0149, r16	; 0x800149 <__flp>
 828:	10 93 4a 01 	sts	0x014A, r17	; 0x80014a <__flp+0x1>
 82c:	22 c0       	rjmp	.+68     	; 0x872 <malloc+0x98>
 82e:	21 15       	cp	r18, r1
 830:	31 05       	cpc	r19, r1
 832:	19 f0       	breq	.+6      	; 0x83a <malloc+0x60>
 834:	42 17       	cp	r20, r18
 836:	53 07       	cpc	r21, r19
 838:	18 f4       	brcc	.+6      	; 0x840 <malloc+0x66>
 83a:	9a 01       	movw	r18, r20
 83c:	bd 01       	movw	r22, r26
 83e:	ef 01       	movw	r28, r30
 840:	df 01       	movw	r26, r30
 842:	f8 01       	movw	r30, r16
 844:	db cf       	rjmp	.-74     	; 0x7fc <malloc+0x22>
 846:	21 15       	cp	r18, r1
 848:	31 05       	cpc	r19, r1
 84a:	f9 f0       	breq	.+62     	; 0x88a <malloc+0xb0>
 84c:	28 1b       	sub	r18, r24
 84e:	39 0b       	sbc	r19, r25
 850:	24 30       	cpi	r18, 0x04	; 4
 852:	31 05       	cpc	r19, r1
 854:	80 f4       	brcc	.+32     	; 0x876 <malloc+0x9c>
 856:	8a 81       	ldd	r24, Y+2	; 0x02
 858:	9b 81       	ldd	r25, Y+3	; 0x03
 85a:	61 15       	cp	r22, r1
 85c:	71 05       	cpc	r23, r1
 85e:	21 f0       	breq	.+8      	; 0x868 <malloc+0x8e>
 860:	fb 01       	movw	r30, r22
 862:	93 83       	std	Z+3, r25	; 0x03
 864:	82 83       	std	Z+2, r24	; 0x02
 866:	04 c0       	rjmp	.+8      	; 0x870 <malloc+0x96>
 868:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <__flp+0x1>
 86c:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <__flp>
 870:	fe 01       	movw	r30, r28
 872:	32 96       	adiw	r30, 0x02	; 2
 874:	44 c0       	rjmp	.+136    	; 0x8fe <malloc+0x124>
 876:	fe 01       	movw	r30, r28
 878:	e2 0f       	add	r30, r18
 87a:	f3 1f       	adc	r31, r19
 87c:	81 93       	st	Z+, r24
 87e:	91 93       	st	Z+, r25
 880:	22 50       	subi	r18, 0x02	; 2
 882:	31 09       	sbc	r19, r1
 884:	39 83       	std	Y+1, r19	; 0x01
 886:	28 83       	st	Y, r18
 888:	3a c0       	rjmp	.+116    	; 0x8fe <malloc+0x124>
 88a:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 88e:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 892:	23 2b       	or	r18, r19
 894:	41 f4       	brne	.+16     	; 0x8a6 <malloc+0xcc>
 896:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 89a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 89e:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <__brkval+0x1>
 8a2:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <__brkval>
 8a6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8aa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8ae:	21 15       	cp	r18, r1
 8b0:	31 05       	cpc	r19, r1
 8b2:	41 f4       	brne	.+16     	; 0x8c4 <malloc+0xea>
 8b4:	2d b7       	in	r18, 0x3d	; 61
 8b6:	3e b7       	in	r19, 0x3e	; 62
 8b8:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 8bc:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 8c0:	24 1b       	sub	r18, r20
 8c2:	35 0b       	sbc	r19, r21
 8c4:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <__brkval>
 8c8:	f0 91 48 01 	lds	r31, 0x0148	; 0x800148 <__brkval+0x1>
 8cc:	e2 17       	cp	r30, r18
 8ce:	f3 07       	cpc	r31, r19
 8d0:	a0 f4       	brcc	.+40     	; 0x8fa <malloc+0x120>
 8d2:	2e 1b       	sub	r18, r30
 8d4:	3f 0b       	sbc	r19, r31
 8d6:	28 17       	cp	r18, r24
 8d8:	39 07       	cpc	r19, r25
 8da:	78 f0       	brcs	.+30     	; 0x8fa <malloc+0x120>
 8dc:	ac 01       	movw	r20, r24
 8de:	4e 5f       	subi	r20, 0xFE	; 254
 8e0:	5f 4f       	sbci	r21, 0xFF	; 255
 8e2:	24 17       	cp	r18, r20
 8e4:	35 07       	cpc	r19, r21
 8e6:	48 f0       	brcs	.+18     	; 0x8fa <malloc+0x120>
 8e8:	4e 0f       	add	r20, r30
 8ea:	5f 1f       	adc	r21, r31
 8ec:	50 93 48 01 	sts	0x0148, r21	; 0x800148 <__brkval+0x1>
 8f0:	40 93 47 01 	sts	0x0147, r20	; 0x800147 <__brkval>
 8f4:	81 93       	st	Z+, r24
 8f6:	91 93       	st	Z+, r25
 8f8:	02 c0       	rjmp	.+4      	; 0x8fe <malloc+0x124>
 8fa:	e0 e0       	ldi	r30, 0x00	; 0
 8fc:	f0 e0       	ldi	r31, 0x00	; 0
 8fe:	cf 01       	movw	r24, r30
 900:	df 91       	pop	r29
 902:	cf 91       	pop	r28
 904:	1f 91       	pop	r17
 906:	0f 91       	pop	r16
 908:	08 95       	ret

0000090a <free>:
 90a:	cf 93       	push	r28
 90c:	df 93       	push	r29
 90e:	00 97       	sbiw	r24, 0x00	; 0
 910:	09 f4       	brne	.+2      	; 0x914 <free+0xa>
 912:	81 c0       	rjmp	.+258    	; 0xa16 <free+0x10c>
 914:	fc 01       	movw	r30, r24
 916:	32 97       	sbiw	r30, 0x02	; 2
 918:	13 82       	std	Z+3, r1	; 0x03
 91a:	12 82       	std	Z+2, r1	; 0x02
 91c:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <__flp>
 920:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <__flp+0x1>
 924:	10 97       	sbiw	r26, 0x00	; 0
 926:	81 f4       	brne	.+32     	; 0x948 <free+0x3e>
 928:	20 81       	ld	r18, Z
 92a:	31 81       	ldd	r19, Z+1	; 0x01
 92c:	82 0f       	add	r24, r18
 92e:	93 1f       	adc	r25, r19
 930:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 934:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 938:	28 17       	cp	r18, r24
 93a:	39 07       	cpc	r19, r25
 93c:	51 f5       	brne	.+84     	; 0x992 <free+0x88>
 93e:	f0 93 48 01 	sts	0x0148, r31	; 0x800148 <__brkval+0x1>
 942:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <__brkval>
 946:	67 c0       	rjmp	.+206    	; 0xa16 <free+0x10c>
 948:	ed 01       	movw	r28, r26
 94a:	20 e0       	ldi	r18, 0x00	; 0
 94c:	30 e0       	ldi	r19, 0x00	; 0
 94e:	ce 17       	cp	r28, r30
 950:	df 07       	cpc	r29, r31
 952:	40 f4       	brcc	.+16     	; 0x964 <free+0x5a>
 954:	4a 81       	ldd	r20, Y+2	; 0x02
 956:	5b 81       	ldd	r21, Y+3	; 0x03
 958:	9e 01       	movw	r18, r28
 95a:	41 15       	cp	r20, r1
 95c:	51 05       	cpc	r21, r1
 95e:	f1 f0       	breq	.+60     	; 0x99c <free+0x92>
 960:	ea 01       	movw	r28, r20
 962:	f5 cf       	rjmp	.-22     	; 0x94e <free+0x44>
 964:	d3 83       	std	Z+3, r29	; 0x03
 966:	c2 83       	std	Z+2, r28	; 0x02
 968:	40 81       	ld	r20, Z
 96a:	51 81       	ldd	r21, Z+1	; 0x01
 96c:	84 0f       	add	r24, r20
 96e:	95 1f       	adc	r25, r21
 970:	c8 17       	cp	r28, r24
 972:	d9 07       	cpc	r29, r25
 974:	59 f4       	brne	.+22     	; 0x98c <free+0x82>
 976:	88 81       	ld	r24, Y
 978:	99 81       	ldd	r25, Y+1	; 0x01
 97a:	84 0f       	add	r24, r20
 97c:	95 1f       	adc	r25, r21
 97e:	02 96       	adiw	r24, 0x02	; 2
 980:	91 83       	std	Z+1, r25	; 0x01
 982:	80 83       	st	Z, r24
 984:	8a 81       	ldd	r24, Y+2	; 0x02
 986:	9b 81       	ldd	r25, Y+3	; 0x03
 988:	93 83       	std	Z+3, r25	; 0x03
 98a:	82 83       	std	Z+2, r24	; 0x02
 98c:	21 15       	cp	r18, r1
 98e:	31 05       	cpc	r19, r1
 990:	29 f4       	brne	.+10     	; 0x99c <free+0x92>
 992:	f0 93 4a 01 	sts	0x014A, r31	; 0x80014a <__flp+0x1>
 996:	e0 93 49 01 	sts	0x0149, r30	; 0x800149 <__flp>
 99a:	3d c0       	rjmp	.+122    	; 0xa16 <free+0x10c>
 99c:	e9 01       	movw	r28, r18
 99e:	fb 83       	std	Y+3, r31	; 0x03
 9a0:	ea 83       	std	Y+2, r30	; 0x02
 9a2:	49 91       	ld	r20, Y+
 9a4:	59 91       	ld	r21, Y+
 9a6:	c4 0f       	add	r28, r20
 9a8:	d5 1f       	adc	r29, r21
 9aa:	ec 17       	cp	r30, r28
 9ac:	fd 07       	cpc	r31, r29
 9ae:	61 f4       	brne	.+24     	; 0x9c8 <free+0xbe>
 9b0:	80 81       	ld	r24, Z
 9b2:	91 81       	ldd	r25, Z+1	; 0x01
 9b4:	84 0f       	add	r24, r20
 9b6:	95 1f       	adc	r25, r21
 9b8:	02 96       	adiw	r24, 0x02	; 2
 9ba:	e9 01       	movw	r28, r18
 9bc:	99 83       	std	Y+1, r25	; 0x01
 9be:	88 83       	st	Y, r24
 9c0:	82 81       	ldd	r24, Z+2	; 0x02
 9c2:	93 81       	ldd	r25, Z+3	; 0x03
 9c4:	9b 83       	std	Y+3, r25	; 0x03
 9c6:	8a 83       	std	Y+2, r24	; 0x02
 9c8:	e0 e0       	ldi	r30, 0x00	; 0
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	12 96       	adiw	r26, 0x02	; 2
 9ce:	8d 91       	ld	r24, X+
 9d0:	9c 91       	ld	r25, X
 9d2:	13 97       	sbiw	r26, 0x03	; 3
 9d4:	00 97       	sbiw	r24, 0x00	; 0
 9d6:	19 f0       	breq	.+6      	; 0x9de <free+0xd4>
 9d8:	fd 01       	movw	r30, r26
 9da:	dc 01       	movw	r26, r24
 9dc:	f7 cf       	rjmp	.-18     	; 0x9cc <free+0xc2>
 9de:	8d 91       	ld	r24, X+
 9e0:	9c 91       	ld	r25, X
 9e2:	11 97       	sbiw	r26, 0x01	; 1
 9e4:	9d 01       	movw	r18, r26
 9e6:	2e 5f       	subi	r18, 0xFE	; 254
 9e8:	3f 4f       	sbci	r19, 0xFF	; 255
 9ea:	82 0f       	add	r24, r18
 9ec:	93 1f       	adc	r25, r19
 9ee:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 9f2:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 9f6:	28 17       	cp	r18, r24
 9f8:	39 07       	cpc	r19, r25
 9fa:	69 f4       	brne	.+26     	; 0xa16 <free+0x10c>
 9fc:	30 97       	sbiw	r30, 0x00	; 0
 9fe:	29 f4       	brne	.+10     	; 0xa0a <free+0x100>
 a00:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__flp+0x1>
 a04:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__flp>
 a08:	02 c0       	rjmp	.+4      	; 0xa0e <free+0x104>
 a0a:	13 82       	std	Z+3, r1	; 0x03
 a0c:	12 82       	std	Z+2, r1	; 0x02
 a0e:	b0 93 48 01 	sts	0x0148, r27	; 0x800148 <__brkval+0x1>
 a12:	a0 93 47 01 	sts	0x0147, r26	; 0x800147 <__brkval>
 a16:	df 91       	pop	r29
 a18:	cf 91       	pop	r28
 a1a:	08 95       	ret

00000a1c <strnlen_P>:
 a1c:	fc 01       	movw	r30, r24
 a1e:	05 90       	lpm	r0, Z+
 a20:	61 50       	subi	r22, 0x01	; 1
 a22:	70 40       	sbci	r23, 0x00	; 0
 a24:	01 10       	cpse	r0, r1
 a26:	d8 f7       	brcc	.-10     	; 0xa1e <strnlen_P+0x2>
 a28:	80 95       	com	r24
 a2a:	90 95       	com	r25
 a2c:	8e 0f       	add	r24, r30
 a2e:	9f 1f       	adc	r25, r31
 a30:	08 95       	ret

00000a32 <memset>:
 a32:	dc 01       	movw	r26, r24
 a34:	01 c0       	rjmp	.+2      	; 0xa38 <memset+0x6>
 a36:	6d 93       	st	X+, r22
 a38:	41 50       	subi	r20, 0x01	; 1
 a3a:	50 40       	sbci	r21, 0x00	; 0
 a3c:	e0 f7       	brcc	.-8      	; 0xa36 <memset+0x4>
 a3e:	08 95       	ret

00000a40 <strnlen>:
 a40:	fc 01       	movw	r30, r24
 a42:	61 50       	subi	r22, 0x01	; 1
 a44:	70 40       	sbci	r23, 0x00	; 0
 a46:	01 90       	ld	r0, Z+
 a48:	01 10       	cpse	r0, r1
 a4a:	d8 f7       	brcc	.-10     	; 0xa42 <strnlen+0x2>
 a4c:	80 95       	com	r24
 a4e:	90 95       	com	r25
 a50:	8e 0f       	add	r24, r30
 a52:	9f 1f       	adc	r25, r31
 a54:	08 95       	ret

00000a56 <fputc>:
 a56:	0f 93       	push	r16
 a58:	1f 93       	push	r17
 a5a:	cf 93       	push	r28
 a5c:	df 93       	push	r29
 a5e:	fb 01       	movw	r30, r22
 a60:	23 81       	ldd	r18, Z+3	; 0x03
 a62:	21 fd       	sbrc	r18, 1
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <fputc+0x16>
 a66:	8f ef       	ldi	r24, 0xFF	; 255
 a68:	9f ef       	ldi	r25, 0xFF	; 255
 a6a:	2c c0       	rjmp	.+88     	; 0xac4 <fputc+0x6e>
 a6c:	22 ff       	sbrs	r18, 2
 a6e:	16 c0       	rjmp	.+44     	; 0xa9c <fputc+0x46>
 a70:	46 81       	ldd	r20, Z+6	; 0x06
 a72:	57 81       	ldd	r21, Z+7	; 0x07
 a74:	24 81       	ldd	r18, Z+4	; 0x04
 a76:	35 81       	ldd	r19, Z+5	; 0x05
 a78:	42 17       	cp	r20, r18
 a7a:	53 07       	cpc	r21, r19
 a7c:	44 f4       	brge	.+16     	; 0xa8e <fputc+0x38>
 a7e:	a0 81       	ld	r26, Z
 a80:	b1 81       	ldd	r27, Z+1	; 0x01
 a82:	9d 01       	movw	r18, r26
 a84:	2f 5f       	subi	r18, 0xFF	; 255
 a86:	3f 4f       	sbci	r19, 0xFF	; 255
 a88:	31 83       	std	Z+1, r19	; 0x01
 a8a:	20 83       	st	Z, r18
 a8c:	8c 93       	st	X, r24
 a8e:	26 81       	ldd	r18, Z+6	; 0x06
 a90:	37 81       	ldd	r19, Z+7	; 0x07
 a92:	2f 5f       	subi	r18, 0xFF	; 255
 a94:	3f 4f       	sbci	r19, 0xFF	; 255
 a96:	37 83       	std	Z+7, r19	; 0x07
 a98:	26 83       	std	Z+6, r18	; 0x06
 a9a:	14 c0       	rjmp	.+40     	; 0xac4 <fputc+0x6e>
 a9c:	8b 01       	movw	r16, r22
 a9e:	ec 01       	movw	r28, r24
 aa0:	fb 01       	movw	r30, r22
 aa2:	00 84       	ldd	r0, Z+8	; 0x08
 aa4:	f1 85       	ldd	r31, Z+9	; 0x09
 aa6:	e0 2d       	mov	r30, r0
 aa8:	09 95       	icall
 aaa:	89 2b       	or	r24, r25
 aac:	e1 f6       	brne	.-72     	; 0xa66 <fputc+0x10>
 aae:	d8 01       	movw	r26, r16
 ab0:	16 96       	adiw	r26, 0x06	; 6
 ab2:	8d 91       	ld	r24, X+
 ab4:	9c 91       	ld	r25, X
 ab6:	17 97       	sbiw	r26, 0x07	; 7
 ab8:	01 96       	adiw	r24, 0x01	; 1
 aba:	17 96       	adiw	r26, 0x07	; 7
 abc:	9c 93       	st	X, r25
 abe:	8e 93       	st	-X, r24
 ac0:	16 97       	sbiw	r26, 0x06	; 6
 ac2:	ce 01       	movw	r24, r28
 ac4:	df 91       	pop	r29
 ac6:	cf 91       	pop	r28
 ac8:	1f 91       	pop	r17
 aca:	0f 91       	pop	r16
 acc:	08 95       	ret

00000ace <__ultoa_invert>:
 ace:	fa 01       	movw	r30, r20
 ad0:	aa 27       	eor	r26, r26
 ad2:	28 30       	cpi	r18, 0x08	; 8
 ad4:	51 f1       	breq	.+84     	; 0xb2a <__ultoa_invert+0x5c>
 ad6:	20 31       	cpi	r18, 0x10	; 16
 ad8:	81 f1       	breq	.+96     	; 0xb3a <__ultoa_invert+0x6c>
 ada:	e8 94       	clt
 adc:	6f 93       	push	r22
 ade:	6e 7f       	andi	r22, 0xFE	; 254
 ae0:	6e 5f       	subi	r22, 0xFE	; 254
 ae2:	7f 4f       	sbci	r23, 0xFF	; 255
 ae4:	8f 4f       	sbci	r24, 0xFF	; 255
 ae6:	9f 4f       	sbci	r25, 0xFF	; 255
 ae8:	af 4f       	sbci	r26, 0xFF	; 255
 aea:	b1 e0       	ldi	r27, 0x01	; 1
 aec:	3e d0       	rcall	.+124    	; 0xb6a <__ultoa_invert+0x9c>
 aee:	b4 e0       	ldi	r27, 0x04	; 4
 af0:	3c d0       	rcall	.+120    	; 0xb6a <__ultoa_invert+0x9c>
 af2:	67 0f       	add	r22, r23
 af4:	78 1f       	adc	r23, r24
 af6:	89 1f       	adc	r24, r25
 af8:	9a 1f       	adc	r25, r26
 afa:	a1 1d       	adc	r26, r1
 afc:	68 0f       	add	r22, r24
 afe:	79 1f       	adc	r23, r25
 b00:	8a 1f       	adc	r24, r26
 b02:	91 1d       	adc	r25, r1
 b04:	a1 1d       	adc	r26, r1
 b06:	6a 0f       	add	r22, r26
 b08:	71 1d       	adc	r23, r1
 b0a:	81 1d       	adc	r24, r1
 b0c:	91 1d       	adc	r25, r1
 b0e:	a1 1d       	adc	r26, r1
 b10:	20 d0       	rcall	.+64     	; 0xb52 <__ultoa_invert+0x84>
 b12:	09 f4       	brne	.+2      	; 0xb16 <__ultoa_invert+0x48>
 b14:	68 94       	set
 b16:	3f 91       	pop	r19
 b18:	2a e0       	ldi	r18, 0x0A	; 10
 b1a:	26 9f       	mul	r18, r22
 b1c:	11 24       	eor	r1, r1
 b1e:	30 19       	sub	r19, r0
 b20:	30 5d       	subi	r19, 0xD0	; 208
 b22:	31 93       	st	Z+, r19
 b24:	de f6       	brtc	.-74     	; 0xadc <__ultoa_invert+0xe>
 b26:	cf 01       	movw	r24, r30
 b28:	08 95       	ret
 b2a:	46 2f       	mov	r20, r22
 b2c:	47 70       	andi	r20, 0x07	; 7
 b2e:	40 5d       	subi	r20, 0xD0	; 208
 b30:	41 93       	st	Z+, r20
 b32:	b3 e0       	ldi	r27, 0x03	; 3
 b34:	0f d0       	rcall	.+30     	; 0xb54 <__ultoa_invert+0x86>
 b36:	c9 f7       	brne	.-14     	; 0xb2a <__ultoa_invert+0x5c>
 b38:	f6 cf       	rjmp	.-20     	; 0xb26 <__ultoa_invert+0x58>
 b3a:	46 2f       	mov	r20, r22
 b3c:	4f 70       	andi	r20, 0x0F	; 15
 b3e:	40 5d       	subi	r20, 0xD0	; 208
 b40:	4a 33       	cpi	r20, 0x3A	; 58
 b42:	18 f0       	brcs	.+6      	; 0xb4a <__ultoa_invert+0x7c>
 b44:	49 5d       	subi	r20, 0xD9	; 217
 b46:	31 fd       	sbrc	r19, 1
 b48:	40 52       	subi	r20, 0x20	; 32
 b4a:	41 93       	st	Z+, r20
 b4c:	02 d0       	rcall	.+4      	; 0xb52 <__ultoa_invert+0x84>
 b4e:	a9 f7       	brne	.-22     	; 0xb3a <__ultoa_invert+0x6c>
 b50:	ea cf       	rjmp	.-44     	; 0xb26 <__ultoa_invert+0x58>
 b52:	b4 e0       	ldi	r27, 0x04	; 4
 b54:	a6 95       	lsr	r26
 b56:	97 95       	ror	r25
 b58:	87 95       	ror	r24
 b5a:	77 95       	ror	r23
 b5c:	67 95       	ror	r22
 b5e:	ba 95       	dec	r27
 b60:	c9 f7       	brne	.-14     	; 0xb54 <__ultoa_invert+0x86>
 b62:	00 97       	sbiw	r24, 0x00	; 0
 b64:	61 05       	cpc	r22, r1
 b66:	71 05       	cpc	r23, r1
 b68:	08 95       	ret
 b6a:	9b 01       	movw	r18, r22
 b6c:	ac 01       	movw	r20, r24
 b6e:	0a 2e       	mov	r0, r26
 b70:	06 94       	lsr	r0
 b72:	57 95       	ror	r21
 b74:	47 95       	ror	r20
 b76:	37 95       	ror	r19
 b78:	27 95       	ror	r18
 b7a:	ba 95       	dec	r27
 b7c:	c9 f7       	brne	.-14     	; 0xb70 <__ultoa_invert+0xa2>
 b7e:	62 0f       	add	r22, r18
 b80:	73 1f       	adc	r23, r19
 b82:	84 1f       	adc	r24, r20
 b84:	95 1f       	adc	r25, r21
 b86:	a0 1d       	adc	r26, r0
 b88:	08 95       	ret

00000b8a <__prologue_saves__>:
 b8a:	2f 92       	push	r2
 b8c:	3f 92       	push	r3
 b8e:	4f 92       	push	r4
 b90:	5f 92       	push	r5
 b92:	6f 92       	push	r6
 b94:	7f 92       	push	r7
 b96:	8f 92       	push	r8
 b98:	9f 92       	push	r9
 b9a:	af 92       	push	r10
 b9c:	bf 92       	push	r11
 b9e:	cf 92       	push	r12
 ba0:	df 92       	push	r13
 ba2:	ef 92       	push	r14
 ba4:	ff 92       	push	r15
 ba6:	0f 93       	push	r16
 ba8:	1f 93       	push	r17
 baa:	cf 93       	push	r28
 bac:	df 93       	push	r29
 bae:	cd b7       	in	r28, 0x3d	; 61
 bb0:	de b7       	in	r29, 0x3e	; 62
 bb2:	ca 1b       	sub	r28, r26
 bb4:	db 0b       	sbc	r29, r27
 bb6:	0f b6       	in	r0, 0x3f	; 63
 bb8:	f8 94       	cli
 bba:	de bf       	out	0x3e, r29	; 62
 bbc:	0f be       	out	0x3f, r0	; 63
 bbe:	cd bf       	out	0x3d, r28	; 61
 bc0:	09 94       	ijmp

00000bc2 <__epilogue_restores__>:
 bc2:	2a 88       	ldd	r2, Y+18	; 0x12
 bc4:	39 88       	ldd	r3, Y+17	; 0x11
 bc6:	48 88       	ldd	r4, Y+16	; 0x10
 bc8:	5f 84       	ldd	r5, Y+15	; 0x0f
 bca:	6e 84       	ldd	r6, Y+14	; 0x0e
 bcc:	7d 84       	ldd	r7, Y+13	; 0x0d
 bce:	8c 84       	ldd	r8, Y+12	; 0x0c
 bd0:	9b 84       	ldd	r9, Y+11	; 0x0b
 bd2:	aa 84       	ldd	r10, Y+10	; 0x0a
 bd4:	b9 84       	ldd	r11, Y+9	; 0x09
 bd6:	c8 84       	ldd	r12, Y+8	; 0x08
 bd8:	df 80       	ldd	r13, Y+7	; 0x07
 bda:	ee 80       	ldd	r14, Y+6	; 0x06
 bdc:	fd 80       	ldd	r15, Y+5	; 0x05
 bde:	0c 81       	ldd	r16, Y+4	; 0x04
 be0:	1b 81       	ldd	r17, Y+3	; 0x03
 be2:	aa 81       	ldd	r26, Y+2	; 0x02
 be4:	b9 81       	ldd	r27, Y+1	; 0x01
 be6:	ce 0f       	add	r28, r30
 be8:	d1 1d       	adc	r29, r1
 bea:	0f b6       	in	r0, 0x3f	; 63
 bec:	f8 94       	cli
 bee:	de bf       	out	0x3e, r29	; 62
 bf0:	0f be       	out	0x3f, r0	; 63
 bf2:	cd bf       	out	0x3d, r28	; 61
 bf4:	ed 01       	movw	r28, r26
 bf6:	08 95       	ret

00000bf8 <_exit>:
 bf8:	f8 94       	cli

00000bfa <__stop_program>:
 bfa:	ff cf       	rjmp	.-2      	; 0xbfa <__stop_program>
