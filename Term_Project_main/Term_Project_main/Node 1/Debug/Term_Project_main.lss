
Term_Project_main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000c0e  00000ca2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800140  00800140  00000ce2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ce2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ac6  00000000  00000000  00000f64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d9f  00000000  00000000  00002a2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f48  00000000  00000000  000037c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004a0  00000000  00000000  00004714  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000779  00000000  00000000  00004bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c39  00000000  00000000  0000532d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00005f66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_1>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e0       	ldi	r30, 0x0E	; 14
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 34       	cpi	r26, 0x40	; 64
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e4       	ldi	r26, 0x40	; 64
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ab 34       	cpi	r26, 0x4B	; 75
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 76 00 	call	0xec	; 0xec <main>
  a6:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_Init>:
			return LEFT;
		}
	}else{
		return NEUTRAL;
	}
}
  ae:	82 e8       	ldi	r24, 0x82	; 130
  b0:	8f bd       	out	0x2f, r24	; 47
  b2:	89 e1       	ldi	r24, 0x19	; 25
  b4:	8e bd       	out	0x2e, r24	; 46
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	95 bd       	out	0x25, r25	; 37
  bc:	84 bd       	out	0x24, r24	; 36
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	81 b3       	in	r24, 0x11	; 17
  c8:	80 62       	ori	r24, 0x20	; 32
  ca:	81 bb       	out	0x11, r24	; 17
  cc:	08 95       	ret

000000ce <__vector_1>:

ISR(INT0_vect){
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	8f 93       	push	r24
    BUSY_flag = 1;
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
}
  e0:	8f 91       	pop	r24
  e2:	0f 90       	pop	r0
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	0f 90       	pop	r0
  e8:	1f 90       	pop	r1
  ea:	18 95       	reti

000000ec <main>:
#include "SPI/SPIdrv.h"
#include "MCP2515/MCP2515drv.h"

int main(void)
{
	USART_Init(MYUBRR);
  ec:	8f e1       	ldi	r24, 0x1F	; 31
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 8b 01 	call	0x316	; 0x316 <USART_Init>
	XMEM_init();
  f4:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <XMEM_init>
	//Int_INIT();
	ADC_Init();
  f8:	0e 94 57 00 	call	0xae	; 0xae <ADC_Init>
	oled_init();
  fc:	0e 94 1e 01 	call	0x23c	; 0x23c <oled_init>
	//spi_init_master();
	mcp2515_init();
 100:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <mcp2515_init>

	//printf("her\n\r");
	//spi_init_master();
	//oled_refresh_rate_init();
	sei();	
 104:	78 94       	sei
	
    while (1) 
    {	
		
		//_delay_ms(1000);
		DDRB &= ~(1 << PB4);
 106:	87 b3       	in	r24, 0x17	; 23
 108:	8f 7e       	andi	r24, 0xEF	; 239
 10a:	87 bb       	out	0x17, r24	; 23

		spi_write_char(MCP_CNF1);
 10c:	8a e2       	ldi	r24, 0x2A	; 42
 10e:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
		spi_write_char(0xAA);
 112:	8a ea       	ldi	r24, 0xAA	; 170
 114:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
		DDRB |= (1 << PB4);
 118:	87 b3       	in	r24, 0x17	; 23
 11a:	80 61       	ori	r24, 0x10	; 16
 11c:	87 bb       	out	0x17, r24	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	9f e2       	ldi	r25, 0x2F	; 47
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <main+0x36>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0x3c>
 128:	00 00       	nop
		_delay_ms(10);
		DDRB &= ~(1 << PB4);
 12a:	87 b3       	in	r24, 0x17	; 23
 12c:	8f 7e       	andi	r24, 0xEF	; 239
 12e:	87 bb       	out	0x17, r24	; 23
		//value = spi_read_char();
		spi_write_char(MCP_READ); // Send read instruction
 130:	83 e0       	ldi	r24, 0x03	; 3
 132:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
		spi_write_char(MCP_CNF1); // Send address
 136:	8a e2       	ldi	r24, 0x2A	; 42
 138:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
		 
		value = spi_read_char() ; // Read result
 13c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <spi_read_char>
		//mcp2515_write(MCP_CNF1, 0xAA);
		printf("value: %d\n\r", value);
 140:	1f 92       	push	r1
 142:	8f 93       	push	r24
 144:	86 e0       	ldi	r24, 0x06	; 6
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	9f 93       	push	r25
 14a:	8f 93       	push	r24
 14c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <printf>
		DDRB |= (1 << PB4);
 150:	87 b3       	in	r24, 0x17	; 23
 152:	80 61       	ori	r24, 0x10	; 16
 154:	87 bb       	out	0x17, r24	; 23
 156:	9f ef       	ldi	r25, 0xFF	; 255
 158:	2f ef       	ldi	r18, 0xFF	; 255
 15a:	8e e0       	ldi	r24, 0x0E	; 14
 15c:	91 50       	subi	r25, 0x01	; 1
 15e:	20 40       	sbci	r18, 0x00	; 0
 160:	80 40       	sbci	r24, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0x70>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0x7a>
 166:	00 00       	nop
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	0f 90       	pop	r0
 170:	ca cf       	rjmp	.-108    	; 0x106 <main+0x1a>

00000172 <mcp2515_read>:
    status = spi_read_char();
    DDRB |= (1 << PB4); // Deselect CAN - controller

    return status;

}
 172:	cf 93       	push	r28
 174:	c8 2f       	mov	r28, r24
 176:	87 b3       	in	r24, 0x17	; 23
 178:	8f 7e       	andi	r24, 0xEF	; 239
 17a:	87 bb       	out	0x17, r24	; 23
 17c:	83 e0       	ldi	r24, 0x03	; 3
 17e:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
 182:	8c 2f       	mov	r24, r28
 184:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
 188:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <spi_read_char>
 18c:	97 b3       	in	r25, 0x17	; 23
 18e:	90 61       	ori	r25, 0x10	; 16
 190:	97 bb       	out	0x17, r25	; 23
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <mcp2515_reset>:
 196:	87 b3       	in	r24, 0x17	; 23
 198:	8f 7e       	andi	r24, 0xEF	; 239
 19a:	87 bb       	out	0x17, r24	; 23
 19c:	80 ec       	ldi	r24, 0xC0	; 192
 19e:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
 1a2:	87 b3       	in	r24, 0x17	; 23
 1a4:	80 61       	ori	r24, 0x10	; 16
 1a6:	87 bb       	out	0x17, r24	; 23
 1a8:	08 95       	ret

000001aa <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	18 2f       	mov	r17, r24
 1b2:	d6 2f       	mov	r29, r22
 1b4:	c4 2f       	mov	r28, r20
    DDRB &= ~(1 << DD_SS); // Select CAN - controller
 1b6:	87 b3       	in	r24, 0x17	; 23
 1b8:	8f 7e       	andi	r24, 0xEF	; 239
 1ba:	87 bb       	out	0x17, r24	; 23
    spi_write_char(MCP_BITMOD);   //Write read_status bit to SPI
 1bc:	85 e0       	ldi	r24, 0x05	; 5
 1be:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
    spi_write_char(address); // Send address
 1c2:	81 2f       	mov	r24, r17
 1c4:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
    spi_write_char(mask); // Send mask
 1c8:	8d 2f       	mov	r24, r29
 1ca:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
    spi_write_char(data); // Send data
 1ce:	8c 2f       	mov	r24, r28
 1d0:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_write_char>
    DDRB |= (1 << DD_SS); // Deselect CAN - controller
 1d4:	87 b3       	in	r24, 0x17	; 23
 1d6:	80 61       	ori	r24, 0x10	; 16
 1d8:	87 bb       	out	0x17, r24	; 23
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	08 95       	ret

000001e2 <mcp2515_init>:
#include "../SPI/SPIdrv.h"




uint8_t mcp2515_init(){
 1e2:	cf 93       	push	r28
    uint8_t value;
	spi_init_master(); // Initialize SPI
 1e4:	0e 94 75 01 	call	0x2ea	; 0x2ea <spi_init_master>
    mcp2515_reset(); // end reset - command
 1e8:	0e 94 cb 00 	call	0x196	; 0x196 <mcp2515_reset>
    // Self - testS
	//mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_CONFIG);

    value = mcp2515_read(MCP_CANSTAT);
 1ec:	8e e0       	ldi	r24, 0x0E	; 14
 1ee:	0e 94 b9 00 	call	0x172	; 0x172 <mcp2515_read>
 1f2:	c8 2f       	mov	r28, r24
	//printf("value: %d\n\r", value);
    if ((value & MODE_MASK) != MODE_CONFIG) {
 1f4:	80 7e       	andi	r24, 0xE0	; 224
 1f6:	80 38       	cpi	r24, 0x80	; 128
 1f8:	51 f0       	breq	.+20     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
        printf ("MCP2515 is NOT in config mode after reset !\n\r");
 1fa:	82 e1       	ldi	r24, 0x12	; 18
 1fc:	91 e0       	ldi	r25, 0x01	; 1
 1fe:	9f 93       	push	r25
 200:	8f 93       	push	r24
 202:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <printf>
		return -1;
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	12 c0       	rjmp	.+36     	; 0x232 <__EEPROM_REGION_LENGTH__+0x32>
    }
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_LOOPBACK);
 20e:	40 e4       	ldi	r20, 0x40	; 64
 210:	60 ee       	ldi	r22, 0xE0	; 224
 212:	8f e0       	ldi	r24, 0x0F	; 15
 214:	0e 94 d5 00 	call	0x1aa	; 0x1aa <mcp2515_bit_modify>
	printf("value: %d\n\r", value);
 218:	1f 92       	push	r1
 21a:	cf 93       	push	r28
 21c:	86 e0       	ldi	r24, 0x06	; 6
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	9f 93       	push	r25
 222:	8f 93       	push	r24
 224:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <printf>

    return 0;
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
 230:	80 e0       	ldi	r24, 0x00	; 0
}
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <oled_write_command>:
	ext_mem[0]= data;
}

void oled_write_data(uint8_t data){
	volatile char *ext_mem = (char *) OLED_DATA_ADDRESS;
	ext_mem[0]= data;
 236:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xeb5>
 23a:	08 95       	ret

0000023c <oled_init>:
}

void oled_init(){
    //Set inits according to datasheet
    oled_write_command(0xae); // display off
 23c:	8e ea       	ldi	r24, 0xAE	; 174
 23e:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xa1); //segment remap
 242:	81 ea       	ldi	r24, 0xA1	; 161
 244:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xda); //common pads hardware: alternative
 248:	8a ed       	ldi	r24, 0xDA	; 218
 24a:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x12);
 24e:	82 e1       	ldi	r24, 0x12	; 18
 250:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xc8); //common output scan direction:com63~com0
 254:	88 ec       	ldi	r24, 0xC8	; 200
 256:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xa8); //multiplex ration mode:63
 25a:	88 ea       	ldi	r24, 0xA8	; 168
 25c:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x3f);
 260:	8f e3       	ldi	r24, 0x3F	; 63
 262:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xd5); //display divide ratio/osc. freq. mode
 266:	85 ed       	ldi	r24, 0xD5	; 213
 268:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x80);
 26c:	80 e8       	ldi	r24, 0x80	; 128
 26e:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x81); //contrast control
 272:	81 e8       	ldi	r24, 0x81	; 129
 274:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x50);
 278:	80 e5       	ldi	r24, 0x50	; 80
 27a:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xd9); //set pre-charge period
 27e:	89 ed       	ldi	r24, 0xD9	; 217
 280:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x21);
 284:	81 e2       	ldi	r24, 0x21	; 33
 286:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x20); //Set Memory Addressing Mode
 28a:	80 e2       	ldi	r24, 0x20	; 32
 28c:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x02);
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xdb); //VCOM deselect level mode
 296:	8b ed       	ldi	r24, 0xDB	; 219
 298:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x30);
 29c:	80 e3       	ldi	r24, 0x30	; 48
 29e:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xad); //master configuration
 2a2:	8d ea       	ldi	r24, 0xAD	; 173
 2a4:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0x00);
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xa4); //out follows RAM content
 2ae:	84 ea       	ldi	r24, 0xA4	; 164
 2b0:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xa6); //set normal display
 2b4:	86 ea       	ldi	r24, 0xA6	; 166
 2b6:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
    oled_write_command(0xaf); // display on
 2ba:	8f ea       	ldi	r24, 0xAF	; 175
 2bc:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>

    //Set to page adressing mode
    oled_write_command(0x20);
 2c0:	80 e2       	ldi	r24, 0x20	; 32
 2c2:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
	oled_write_command(0b10);
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	0e 94 1b 01 	call	0x236	; 0x236 <oled_write_command>
 2cc:	08 95       	ret

000002ce <spi_write_char>:
	SPCR = (1<<SPE);
}
*/
void spi_write_char(char cData){
	//char flushbuffer;
    SPDR = cData;
 2ce:	8f b9       	out	0x0f, r24	; 15
    //Wait for send to complete

	loop_until_bit_is_set(SPSR, SPIF);
 2d0:	77 9b       	sbis	0x0e, 7	; 14
 2d2:	fe cf       	rjmp	.-4      	; 0x2d0 <spi_write_char+0x2>
	//while(!(SPSR & (1<<SPIF)));
	//flushbuffer = SPDR;
}
 2d4:	08 95       	ret

000002d6 <spi_read_char>:

char spi_read_char(){
    SPDR = 0xAA;
 2d6:	8a ea       	ldi	r24, 0xAA	; 170
 2d8:	8f b9       	out	0x0f, r24	; 15
	// Wait for reception to complete

    loop_until_bit_is_set(SPSR, SPIF);
 2da:	77 9b       	sbis	0x0e, 7	; 14
 2dc:	fe cf       	rjmp	.-4      	; 0x2da <spi_read_char+0x4>
	//while(!(SPSR & (1<<SPIF)));
	// Return char in data register
	return SPDR;
 2de:	8f b1       	in	r24, 0x0f	; 15

}
 2e0:	08 95       	ret

000002e2 <spi_set_ss_high>:

void spi_set_ss_high(){
    PORTB |= (1<<DD_SS);
 2e2:	88 b3       	in	r24, 0x18	; 24
 2e4:	80 61       	ori	r24, 0x10	; 16
 2e6:	88 bb       	out	0x18, r24	; 24
 2e8:	08 95       	ret

000002ea <spi_init_master>:
#include "SPIdrv.h"


void spi_init_master(){
    // Set MOSI and SCK - og SS - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
 2ea:	80 eb       	ldi	r24, 0xB0	; 176
 2ec:	87 bb       	out	0x17, r24	; 23
	
	//DDR_SPI &= ~(1<<DD_MISO);
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);//|(1<<SPIE);
 2ee:	81 e5       	ldi	r24, 0x51	; 81
 2f0:	8d b9       	out	0x0d, r24	; 13
	//SPCR &= ~((1<<CPOL)|(1<<CPHA));
	spi_set_ss_high();
 2f2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <spi_set_ss_high>
 2f6:	08 95       	ret

000002f8 <XMEM_init>:
#include "SRAMdrv.h"

void XMEM_init(void){
	MCUCR |= (1<<SRE); //enable XMEM
 2f8:	85 b7       	in	r24, 0x35	; 53
 2fa:	80 68       	ori	r24, 0x80	; 128
 2fc:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2); // Masking P7-P4
 2fe:	80 b7       	in	r24, 0x30	; 48
 300:	80 62       	ori	r24, 0x20	; 32
 302:	80 bf       	out	0x30, r24	; 48
 304:	08 95       	ret

00000306 <USART_Transmit>:
#include "UARTdrv.h"

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 306:	5d 9b       	sbis	0x0b, 5	; 11
 308:	fe cf       	rjmp	.-4      	; 0x306 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 30a:	8c b9       	out	0x0c, r24	; 12
 30c:	08 95       	ret

0000030e <USART_Receive>:
}
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 30e:	5f 9b       	sbis	0x0b, 7	; 11
 310:	fe cf       	rjmp	.-4      	; 0x30e <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 312:	8c b1       	in	r24, 0x0c	; 12
}
 314:	08 95       	ret

00000316 <USART_Init>:
void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 316:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 318:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 31a:	88 e1       	ldi	r24, 0x18	; 24
 31c:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 31e:	8e e8       	ldi	r24, 0x8E	; 142
 320:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit,USART_Receive);
 322:	67 e8       	ldi	r22, 0x87	; 135
 324:	71 e0       	ldi	r23, 0x01	; 1
 326:	83 e8       	ldi	r24, 0x83	; 131
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	0e 94 98 01 	call	0x330	; 0x330 <fdevopen>
 32e:	08 95       	ret

00000330 <fdevopen>:
 330:	0f 93       	push	r16
 332:	1f 93       	push	r17
 334:	cf 93       	push	r28
 336:	df 93       	push	r29
 338:	00 97       	sbiw	r24, 0x00	; 0
 33a:	31 f4       	brne	.+12     	; 0x348 <fdevopen+0x18>
 33c:	61 15       	cp	r22, r1
 33e:	71 05       	cpc	r23, r1
 340:	19 f4       	brne	.+6      	; 0x348 <fdevopen+0x18>
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	3a c0       	rjmp	.+116    	; 0x3bc <fdevopen+0x8c>
 348:	8b 01       	movw	r16, r22
 34a:	ec 01       	movw	r28, r24
 34c:	6e e0       	ldi	r22, 0x0E	; 14
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	0e 94 da 03 	call	0x7b4	; 0x7b4 <calloc>
 358:	fc 01       	movw	r30, r24
 35a:	89 2b       	or	r24, r25
 35c:	91 f3       	breq	.-28     	; 0x342 <fdevopen+0x12>
 35e:	80 e8       	ldi	r24, 0x80	; 128
 360:	83 83       	std	Z+3, r24	; 0x03
 362:	01 15       	cp	r16, r1
 364:	11 05       	cpc	r17, r1
 366:	71 f0       	breq	.+28     	; 0x384 <fdevopen+0x54>
 368:	13 87       	std	Z+11, r17	; 0x0b
 36a:	02 87       	std	Z+10, r16	; 0x0a
 36c:	81 e8       	ldi	r24, 0x81	; 129
 36e:	83 83       	std	Z+3, r24	; 0x03
 370:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__iob>
 374:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <__iob+0x1>
 378:	89 2b       	or	r24, r25
 37a:	21 f4       	brne	.+8      	; 0x384 <fdevopen+0x54>
 37c:	f0 93 42 01 	sts	0x0142, r31	; 0x800142 <__iob+0x1>
 380:	e0 93 41 01 	sts	0x0141, r30	; 0x800141 <__iob>
 384:	20 97       	sbiw	r28, 0x00	; 0
 386:	c9 f0       	breq	.+50     	; 0x3ba <fdevopen+0x8a>
 388:	d1 87       	std	Z+9, r29	; 0x09
 38a:	c0 87       	std	Z+8, r28	; 0x08
 38c:	83 81       	ldd	r24, Z+3	; 0x03
 38e:	82 60       	ori	r24, 0x02	; 2
 390:	83 83       	std	Z+3, r24	; 0x03
 392:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 396:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 39a:	89 2b       	or	r24, r25
 39c:	71 f4       	brne	.+28     	; 0x3ba <fdevopen+0x8a>
 39e:	f0 93 44 01 	sts	0x0144, r31	; 0x800144 <__iob+0x3>
 3a2:	e0 93 43 01 	sts	0x0143, r30	; 0x800143 <__iob+0x2>
 3a6:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__iob+0x4>
 3aa:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__iob+0x5>
 3ae:	89 2b       	or	r24, r25
 3b0:	21 f4       	brne	.+8      	; 0x3ba <fdevopen+0x8a>
 3b2:	f0 93 46 01 	sts	0x0146, r31	; 0x800146 <__iob+0x5>
 3b6:	e0 93 45 01 	sts	0x0145, r30	; 0x800145 <__iob+0x4>
 3ba:	cf 01       	movw	r24, r30
 3bc:	df 91       	pop	r29
 3be:	cf 91       	pop	r28
 3c0:	1f 91       	pop	r17
 3c2:	0f 91       	pop	r16
 3c4:	08 95       	ret

000003c6 <printf>:
 3c6:	a0 e0       	ldi	r26, 0x00	; 0
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	e9 ee       	ldi	r30, 0xE9	; 233
 3cc:	f1 e0       	ldi	r31, 0x01	; 1
 3ce:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__prologue_saves__+0x20>
 3d2:	ae 01       	movw	r20, r28
 3d4:	4b 5f       	subi	r20, 0xFB	; 251
 3d6:	5f 4f       	sbci	r21, 0xFF	; 255
 3d8:	fa 01       	movw	r30, r20
 3da:	61 91       	ld	r22, Z+
 3dc:	71 91       	ld	r23, Z+
 3de:	af 01       	movw	r20, r30
 3e0:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 3e4:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 3e8:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <vfprintf>
 3ec:	e2 e0       	ldi	r30, 0x02	; 2
 3ee:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__epilogue_restores__+0x20>

000003f2 <vfprintf>:
 3f2:	ab e0       	ldi	r26, 0x0B	; 11
 3f4:	b0 e0       	ldi	r27, 0x00	; 0
 3f6:	ef ef       	ldi	r30, 0xFF	; 255
 3f8:	f1 e0       	ldi	r31, 0x01	; 1
 3fa:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__prologue_saves__>
 3fe:	6c 01       	movw	r12, r24
 400:	7b 01       	movw	r14, r22
 402:	8a 01       	movw	r16, r20
 404:	fc 01       	movw	r30, r24
 406:	17 82       	std	Z+7, r1	; 0x07
 408:	16 82       	std	Z+6, r1	; 0x06
 40a:	83 81       	ldd	r24, Z+3	; 0x03
 40c:	81 ff       	sbrs	r24, 1
 40e:	cc c1       	rjmp	.+920    	; 0x7a8 <__stack+0x2a9>
 410:	ce 01       	movw	r24, r28
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	3c 01       	movw	r6, r24
 416:	f6 01       	movw	r30, r12
 418:	93 81       	ldd	r25, Z+3	; 0x03
 41a:	f7 01       	movw	r30, r14
 41c:	93 fd       	sbrc	r25, 3
 41e:	85 91       	lpm	r24, Z+
 420:	93 ff       	sbrs	r25, 3
 422:	81 91       	ld	r24, Z+
 424:	7f 01       	movw	r14, r30
 426:	88 23       	and	r24, r24
 428:	09 f4       	brne	.+2      	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 42a:	ba c1       	rjmp	.+884    	; 0x7a0 <__stack+0x2a1>
 42c:	85 32       	cpi	r24, 0x25	; 37
 42e:	39 f4       	brne	.+14     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 430:	93 fd       	sbrc	r25, 3
 432:	85 91       	lpm	r24, Z+
 434:	93 ff       	sbrs	r25, 3
 436:	81 91       	ld	r24, Z+
 438:	7f 01       	movw	r14, r30
 43a:	85 32       	cpi	r24, 0x25	; 37
 43c:	29 f4       	brne	.+10     	; 0x448 <__DATA_REGION_LENGTH__+0x48>
 43e:	b6 01       	movw	r22, r12
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 446:	e7 cf       	rjmp	.-50     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 448:	91 2c       	mov	r9, r1
 44a:	21 2c       	mov	r2, r1
 44c:	31 2c       	mov	r3, r1
 44e:	ff e1       	ldi	r31, 0x1F	; 31
 450:	f3 15       	cp	r31, r3
 452:	d8 f0       	brcs	.+54     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 454:	8b 32       	cpi	r24, 0x2B	; 43
 456:	79 f0       	breq	.+30     	; 0x476 <__DATA_REGION_LENGTH__+0x76>
 458:	38 f4       	brcc	.+14     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 45a:	80 32       	cpi	r24, 0x20	; 32
 45c:	79 f0       	breq	.+30     	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 45e:	83 32       	cpi	r24, 0x23	; 35
 460:	a1 f4       	brne	.+40     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 462:	23 2d       	mov	r18, r3
 464:	20 61       	ori	r18, 0x10	; 16
 466:	1d c0       	rjmp	.+58     	; 0x4a2 <__DATA_REGION_LENGTH__+0xa2>
 468:	8d 32       	cpi	r24, 0x2D	; 45
 46a:	61 f0       	breq	.+24     	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 46c:	80 33       	cpi	r24, 0x30	; 48
 46e:	69 f4       	brne	.+26     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 470:	23 2d       	mov	r18, r3
 472:	21 60       	ori	r18, 0x01	; 1
 474:	16 c0       	rjmp	.+44     	; 0x4a2 <__DATA_REGION_LENGTH__+0xa2>
 476:	83 2d       	mov	r24, r3
 478:	82 60       	ori	r24, 0x02	; 2
 47a:	38 2e       	mov	r3, r24
 47c:	e3 2d       	mov	r30, r3
 47e:	e4 60       	ori	r30, 0x04	; 4
 480:	3e 2e       	mov	r3, r30
 482:	2a c0       	rjmp	.+84     	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 484:	f3 2d       	mov	r31, r3
 486:	f8 60       	ori	r31, 0x08	; 8
 488:	1d c0       	rjmp	.+58     	; 0x4c4 <__DATA_REGION_LENGTH__+0xc4>
 48a:	37 fc       	sbrc	r3, 7
 48c:	2d c0       	rjmp	.+90     	; 0x4e8 <__DATA_REGION_LENGTH__+0xe8>
 48e:	20 ed       	ldi	r18, 0xD0	; 208
 490:	28 0f       	add	r18, r24
 492:	2a 30       	cpi	r18, 0x0A	; 10
 494:	40 f0       	brcs	.+16     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 496:	8e 32       	cpi	r24, 0x2E	; 46
 498:	b9 f4       	brne	.+46     	; 0x4c8 <__DATA_REGION_LENGTH__+0xc8>
 49a:	36 fc       	sbrc	r3, 6
 49c:	81 c1       	rjmp	.+770    	; 0x7a0 <__stack+0x2a1>
 49e:	23 2d       	mov	r18, r3
 4a0:	20 64       	ori	r18, 0x40	; 64
 4a2:	32 2e       	mov	r3, r18
 4a4:	19 c0       	rjmp	.+50     	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 4a6:	36 fe       	sbrs	r3, 6
 4a8:	06 c0       	rjmp	.+12     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 4aa:	8a e0       	ldi	r24, 0x0A	; 10
 4ac:	98 9e       	mul	r9, r24
 4ae:	20 0d       	add	r18, r0
 4b0:	11 24       	eor	r1, r1
 4b2:	92 2e       	mov	r9, r18
 4b4:	11 c0       	rjmp	.+34     	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 4b6:	ea e0       	ldi	r30, 0x0A	; 10
 4b8:	2e 9e       	mul	r2, r30
 4ba:	20 0d       	add	r18, r0
 4bc:	11 24       	eor	r1, r1
 4be:	22 2e       	mov	r2, r18
 4c0:	f3 2d       	mov	r31, r3
 4c2:	f0 62       	ori	r31, 0x20	; 32
 4c4:	3f 2e       	mov	r3, r31
 4c6:	08 c0       	rjmp	.+16     	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 4c8:	8c 36       	cpi	r24, 0x6C	; 108
 4ca:	21 f4       	brne	.+8      	; 0x4d4 <__DATA_REGION_LENGTH__+0xd4>
 4cc:	83 2d       	mov	r24, r3
 4ce:	80 68       	ori	r24, 0x80	; 128
 4d0:	38 2e       	mov	r3, r24
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 4d4:	88 36       	cpi	r24, 0x68	; 104
 4d6:	41 f4       	brne	.+16     	; 0x4e8 <__DATA_REGION_LENGTH__+0xe8>
 4d8:	f7 01       	movw	r30, r14
 4da:	93 fd       	sbrc	r25, 3
 4dc:	85 91       	lpm	r24, Z+
 4de:	93 ff       	sbrs	r25, 3
 4e0:	81 91       	ld	r24, Z+
 4e2:	7f 01       	movw	r14, r30
 4e4:	81 11       	cpse	r24, r1
 4e6:	b3 cf       	rjmp	.-154    	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 4e8:	98 2f       	mov	r25, r24
 4ea:	9f 7d       	andi	r25, 0xDF	; 223
 4ec:	95 54       	subi	r25, 0x45	; 69
 4ee:	93 30       	cpi	r25, 0x03	; 3
 4f0:	28 f4       	brcc	.+10     	; 0x4fc <__DATA_REGION_LENGTH__+0xfc>
 4f2:	0c 5f       	subi	r16, 0xFC	; 252
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	9f e3       	ldi	r25, 0x3F	; 63
 4f8:	99 83       	std	Y+1, r25	; 0x01
 4fa:	0d c0       	rjmp	.+26     	; 0x516 <__stack+0x17>
 4fc:	83 36       	cpi	r24, 0x63	; 99
 4fe:	31 f0       	breq	.+12     	; 0x50c <__stack+0xd>
 500:	83 37       	cpi	r24, 0x73	; 115
 502:	71 f0       	breq	.+28     	; 0x520 <__stack+0x21>
 504:	83 35       	cpi	r24, 0x53	; 83
 506:	09 f0       	breq	.+2      	; 0x50a <__stack+0xb>
 508:	59 c0       	rjmp	.+178    	; 0x5bc <__stack+0xbd>
 50a:	21 c0       	rjmp	.+66     	; 0x54e <__stack+0x4f>
 50c:	f8 01       	movw	r30, r16
 50e:	80 81       	ld	r24, Z
 510:	89 83       	std	Y+1, r24	; 0x01
 512:	0e 5f       	subi	r16, 0xFE	; 254
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	88 24       	eor	r8, r8
 518:	83 94       	inc	r8
 51a:	91 2c       	mov	r9, r1
 51c:	53 01       	movw	r10, r6
 51e:	13 c0       	rjmp	.+38     	; 0x546 <__stack+0x47>
 520:	28 01       	movw	r4, r16
 522:	f2 e0       	ldi	r31, 0x02	; 2
 524:	4f 0e       	add	r4, r31
 526:	51 1c       	adc	r5, r1
 528:	f8 01       	movw	r30, r16
 52a:	a0 80       	ld	r10, Z
 52c:	b1 80       	ldd	r11, Z+1	; 0x01
 52e:	36 fe       	sbrs	r3, 6
 530:	03 c0       	rjmp	.+6      	; 0x538 <__stack+0x39>
 532:	69 2d       	mov	r22, r9
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	02 c0       	rjmp	.+4      	; 0x53c <__stack+0x3d>
 538:	6f ef       	ldi	r22, 0xFF	; 255
 53a:	7f ef       	ldi	r23, 0xFF	; 255
 53c:	c5 01       	movw	r24, r10
 53e:	0e 94 29 05 	call	0xa52	; 0xa52 <strnlen>
 542:	4c 01       	movw	r8, r24
 544:	82 01       	movw	r16, r4
 546:	f3 2d       	mov	r31, r3
 548:	ff 77       	andi	r31, 0x7F	; 127
 54a:	3f 2e       	mov	r3, r31
 54c:	16 c0       	rjmp	.+44     	; 0x57a <__stack+0x7b>
 54e:	28 01       	movw	r4, r16
 550:	22 e0       	ldi	r18, 0x02	; 2
 552:	42 0e       	add	r4, r18
 554:	51 1c       	adc	r5, r1
 556:	f8 01       	movw	r30, r16
 558:	a0 80       	ld	r10, Z
 55a:	b1 80       	ldd	r11, Z+1	; 0x01
 55c:	36 fe       	sbrs	r3, 6
 55e:	03 c0       	rjmp	.+6      	; 0x566 <__stack+0x67>
 560:	69 2d       	mov	r22, r9
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	02 c0       	rjmp	.+4      	; 0x56a <__stack+0x6b>
 566:	6f ef       	ldi	r22, 0xFF	; 255
 568:	7f ef       	ldi	r23, 0xFF	; 255
 56a:	c5 01       	movw	r24, r10
 56c:	0e 94 17 05 	call	0xa2e	; 0xa2e <strnlen_P>
 570:	4c 01       	movw	r8, r24
 572:	f3 2d       	mov	r31, r3
 574:	f0 68       	ori	r31, 0x80	; 128
 576:	3f 2e       	mov	r3, r31
 578:	82 01       	movw	r16, r4
 57a:	33 fc       	sbrc	r3, 3
 57c:	1b c0       	rjmp	.+54     	; 0x5b4 <__stack+0xb5>
 57e:	82 2d       	mov	r24, r2
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	88 16       	cp	r8, r24
 584:	99 06       	cpc	r9, r25
 586:	b0 f4       	brcc	.+44     	; 0x5b4 <__stack+0xb5>
 588:	b6 01       	movw	r22, r12
 58a:	80 e2       	ldi	r24, 0x20	; 32
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 592:	2a 94       	dec	r2
 594:	f4 cf       	rjmp	.-24     	; 0x57e <__stack+0x7f>
 596:	f5 01       	movw	r30, r10
 598:	37 fc       	sbrc	r3, 7
 59a:	85 91       	lpm	r24, Z+
 59c:	37 fe       	sbrs	r3, 7
 59e:	81 91       	ld	r24, Z+
 5a0:	5f 01       	movw	r10, r30
 5a2:	b6 01       	movw	r22, r12
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 5aa:	21 10       	cpse	r2, r1
 5ac:	2a 94       	dec	r2
 5ae:	21 e0       	ldi	r18, 0x01	; 1
 5b0:	82 1a       	sub	r8, r18
 5b2:	91 08       	sbc	r9, r1
 5b4:	81 14       	cp	r8, r1
 5b6:	91 04       	cpc	r9, r1
 5b8:	71 f7       	brne	.-36     	; 0x596 <__stack+0x97>
 5ba:	e8 c0       	rjmp	.+464    	; 0x78c <__stack+0x28d>
 5bc:	84 36       	cpi	r24, 0x64	; 100
 5be:	11 f0       	breq	.+4      	; 0x5c4 <__stack+0xc5>
 5c0:	89 36       	cpi	r24, 0x69	; 105
 5c2:	41 f5       	brne	.+80     	; 0x614 <__stack+0x115>
 5c4:	f8 01       	movw	r30, r16
 5c6:	37 fe       	sbrs	r3, 7
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <__stack+0xd9>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	82 81       	ldd	r24, Z+2	; 0x02
 5d0:	93 81       	ldd	r25, Z+3	; 0x03
 5d2:	0c 5f       	subi	r16, 0xFC	; 252
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	08 c0       	rjmp	.+16     	; 0x5e8 <__stack+0xe9>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	07 2e       	mov	r0, r23
 5de:	00 0c       	add	r0, r0
 5e0:	88 0b       	sbc	r24, r24
 5e2:	99 0b       	sbc	r25, r25
 5e4:	0e 5f       	subi	r16, 0xFE	; 254
 5e6:	1f 4f       	sbci	r17, 0xFF	; 255
 5e8:	f3 2d       	mov	r31, r3
 5ea:	ff 76       	andi	r31, 0x6F	; 111
 5ec:	3f 2e       	mov	r3, r31
 5ee:	97 ff       	sbrs	r25, 7
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <__stack+0x105>
 5f2:	90 95       	com	r25
 5f4:	80 95       	com	r24
 5f6:	70 95       	com	r23
 5f8:	61 95       	neg	r22
 5fa:	7f 4f       	sbci	r23, 0xFF	; 255
 5fc:	8f 4f       	sbci	r24, 0xFF	; 255
 5fe:	9f 4f       	sbci	r25, 0xFF	; 255
 600:	f0 68       	ori	r31, 0x80	; 128
 602:	3f 2e       	mov	r3, r31
 604:	2a e0       	ldi	r18, 0x0A	; 10
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	a3 01       	movw	r20, r6
 60a:	0e 94 70 05 	call	0xae0	; 0xae0 <__ultoa_invert>
 60e:	88 2e       	mov	r8, r24
 610:	86 18       	sub	r8, r6
 612:	45 c0       	rjmp	.+138    	; 0x69e <__stack+0x19f>
 614:	85 37       	cpi	r24, 0x75	; 117
 616:	31 f4       	brne	.+12     	; 0x624 <__stack+0x125>
 618:	23 2d       	mov	r18, r3
 61a:	2f 7e       	andi	r18, 0xEF	; 239
 61c:	b2 2e       	mov	r11, r18
 61e:	2a e0       	ldi	r18, 0x0A	; 10
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	25 c0       	rjmp	.+74     	; 0x66e <__stack+0x16f>
 624:	93 2d       	mov	r25, r3
 626:	99 7f       	andi	r25, 0xF9	; 249
 628:	b9 2e       	mov	r11, r25
 62a:	8f 36       	cpi	r24, 0x6F	; 111
 62c:	c1 f0       	breq	.+48     	; 0x65e <__stack+0x15f>
 62e:	18 f4       	brcc	.+6      	; 0x636 <__stack+0x137>
 630:	88 35       	cpi	r24, 0x58	; 88
 632:	79 f0       	breq	.+30     	; 0x652 <__stack+0x153>
 634:	b5 c0       	rjmp	.+362    	; 0x7a0 <__stack+0x2a1>
 636:	80 37       	cpi	r24, 0x70	; 112
 638:	19 f0       	breq	.+6      	; 0x640 <__stack+0x141>
 63a:	88 37       	cpi	r24, 0x78	; 120
 63c:	21 f0       	breq	.+8      	; 0x646 <__stack+0x147>
 63e:	b0 c0       	rjmp	.+352    	; 0x7a0 <__stack+0x2a1>
 640:	e9 2f       	mov	r30, r25
 642:	e0 61       	ori	r30, 0x10	; 16
 644:	be 2e       	mov	r11, r30
 646:	b4 fe       	sbrs	r11, 4
 648:	0d c0       	rjmp	.+26     	; 0x664 <__stack+0x165>
 64a:	fb 2d       	mov	r31, r11
 64c:	f4 60       	ori	r31, 0x04	; 4
 64e:	bf 2e       	mov	r11, r31
 650:	09 c0       	rjmp	.+18     	; 0x664 <__stack+0x165>
 652:	34 fe       	sbrs	r3, 4
 654:	0a c0       	rjmp	.+20     	; 0x66a <__stack+0x16b>
 656:	29 2f       	mov	r18, r25
 658:	26 60       	ori	r18, 0x06	; 6
 65a:	b2 2e       	mov	r11, r18
 65c:	06 c0       	rjmp	.+12     	; 0x66a <__stack+0x16b>
 65e:	28 e0       	ldi	r18, 0x08	; 8
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	05 c0       	rjmp	.+10     	; 0x66e <__stack+0x16f>
 664:	20 e1       	ldi	r18, 0x10	; 16
 666:	30 e0       	ldi	r19, 0x00	; 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <__stack+0x16f>
 66a:	20 e1       	ldi	r18, 0x10	; 16
 66c:	32 e0       	ldi	r19, 0x02	; 2
 66e:	f8 01       	movw	r30, r16
 670:	b7 fe       	sbrs	r11, 7
 672:	07 c0       	rjmp	.+14     	; 0x682 <__stack+0x183>
 674:	60 81       	ld	r22, Z
 676:	71 81       	ldd	r23, Z+1	; 0x01
 678:	82 81       	ldd	r24, Z+2	; 0x02
 67a:	93 81       	ldd	r25, Z+3	; 0x03
 67c:	0c 5f       	subi	r16, 0xFC	; 252
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	06 c0       	rjmp	.+12     	; 0x68e <__stack+0x18f>
 682:	60 81       	ld	r22, Z
 684:	71 81       	ldd	r23, Z+1	; 0x01
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 5f       	subi	r16, 0xFE	; 254
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	a3 01       	movw	r20, r6
 690:	0e 94 70 05 	call	0xae0	; 0xae0 <__ultoa_invert>
 694:	88 2e       	mov	r8, r24
 696:	86 18       	sub	r8, r6
 698:	fb 2d       	mov	r31, r11
 69a:	ff 77       	andi	r31, 0x7F	; 127
 69c:	3f 2e       	mov	r3, r31
 69e:	36 fe       	sbrs	r3, 6
 6a0:	0d c0       	rjmp	.+26     	; 0x6bc <__stack+0x1bd>
 6a2:	23 2d       	mov	r18, r3
 6a4:	2e 7f       	andi	r18, 0xFE	; 254
 6a6:	a2 2e       	mov	r10, r18
 6a8:	89 14       	cp	r8, r9
 6aa:	58 f4       	brcc	.+22     	; 0x6c2 <__stack+0x1c3>
 6ac:	34 fe       	sbrs	r3, 4
 6ae:	0b c0       	rjmp	.+22     	; 0x6c6 <__stack+0x1c7>
 6b0:	32 fc       	sbrc	r3, 2
 6b2:	09 c0       	rjmp	.+18     	; 0x6c6 <__stack+0x1c7>
 6b4:	83 2d       	mov	r24, r3
 6b6:	8e 7e       	andi	r24, 0xEE	; 238
 6b8:	a8 2e       	mov	r10, r24
 6ba:	05 c0       	rjmp	.+10     	; 0x6c6 <__stack+0x1c7>
 6bc:	b8 2c       	mov	r11, r8
 6be:	a3 2c       	mov	r10, r3
 6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <__stack+0x1c9>
 6c2:	b8 2c       	mov	r11, r8
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <__stack+0x1c9>
 6c6:	b9 2c       	mov	r11, r9
 6c8:	a4 fe       	sbrs	r10, 4
 6ca:	0f c0       	rjmp	.+30     	; 0x6ea <__stack+0x1eb>
 6cc:	fe 01       	movw	r30, r28
 6ce:	e8 0d       	add	r30, r8
 6d0:	f1 1d       	adc	r31, r1
 6d2:	80 81       	ld	r24, Z
 6d4:	80 33       	cpi	r24, 0x30	; 48
 6d6:	21 f4       	brne	.+8      	; 0x6e0 <__stack+0x1e1>
 6d8:	9a 2d       	mov	r25, r10
 6da:	99 7e       	andi	r25, 0xE9	; 233
 6dc:	a9 2e       	mov	r10, r25
 6de:	09 c0       	rjmp	.+18     	; 0x6f2 <__stack+0x1f3>
 6e0:	a2 fe       	sbrs	r10, 2
 6e2:	06 c0       	rjmp	.+12     	; 0x6f0 <__stack+0x1f1>
 6e4:	b3 94       	inc	r11
 6e6:	b3 94       	inc	r11
 6e8:	04 c0       	rjmp	.+8      	; 0x6f2 <__stack+0x1f3>
 6ea:	8a 2d       	mov	r24, r10
 6ec:	86 78       	andi	r24, 0x86	; 134
 6ee:	09 f0       	breq	.+2      	; 0x6f2 <__stack+0x1f3>
 6f0:	b3 94       	inc	r11
 6f2:	a3 fc       	sbrc	r10, 3
 6f4:	11 c0       	rjmp	.+34     	; 0x718 <__stack+0x219>
 6f6:	a0 fe       	sbrs	r10, 0
 6f8:	06 c0       	rjmp	.+12     	; 0x706 <__stack+0x207>
 6fa:	b2 14       	cp	r11, r2
 6fc:	88 f4       	brcc	.+34     	; 0x720 <__stack+0x221>
 6fe:	28 0c       	add	r2, r8
 700:	92 2c       	mov	r9, r2
 702:	9b 18       	sub	r9, r11
 704:	0e c0       	rjmp	.+28     	; 0x722 <__stack+0x223>
 706:	b2 14       	cp	r11, r2
 708:	60 f4       	brcc	.+24     	; 0x722 <__stack+0x223>
 70a:	b6 01       	movw	r22, r12
 70c:	80 e2       	ldi	r24, 0x20	; 32
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 714:	b3 94       	inc	r11
 716:	f7 cf       	rjmp	.-18     	; 0x706 <__stack+0x207>
 718:	b2 14       	cp	r11, r2
 71a:	18 f4       	brcc	.+6      	; 0x722 <__stack+0x223>
 71c:	2b 18       	sub	r2, r11
 71e:	02 c0       	rjmp	.+4      	; 0x724 <__stack+0x225>
 720:	98 2c       	mov	r9, r8
 722:	21 2c       	mov	r2, r1
 724:	a4 fe       	sbrs	r10, 4
 726:	10 c0       	rjmp	.+32     	; 0x748 <__stack+0x249>
 728:	b6 01       	movw	r22, r12
 72a:	80 e3       	ldi	r24, 0x30	; 48
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 732:	a2 fe       	sbrs	r10, 2
 734:	17 c0       	rjmp	.+46     	; 0x764 <__stack+0x265>
 736:	a1 fc       	sbrc	r10, 1
 738:	03 c0       	rjmp	.+6      	; 0x740 <__stack+0x241>
 73a:	88 e7       	ldi	r24, 0x78	; 120
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__stack+0x245>
 740:	88 e5       	ldi	r24, 0x58	; 88
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	b6 01       	movw	r22, r12
 746:	0c c0       	rjmp	.+24     	; 0x760 <__stack+0x261>
 748:	8a 2d       	mov	r24, r10
 74a:	86 78       	andi	r24, 0x86	; 134
 74c:	59 f0       	breq	.+22     	; 0x764 <__stack+0x265>
 74e:	a1 fe       	sbrs	r10, 1
 750:	02 c0       	rjmp	.+4      	; 0x756 <__stack+0x257>
 752:	8b e2       	ldi	r24, 0x2B	; 43
 754:	01 c0       	rjmp	.+2      	; 0x758 <__stack+0x259>
 756:	80 e2       	ldi	r24, 0x20	; 32
 758:	a7 fc       	sbrc	r10, 7
 75a:	8d e2       	ldi	r24, 0x2D	; 45
 75c:	b6 01       	movw	r22, r12
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 764:	89 14       	cp	r8, r9
 766:	38 f4       	brcc	.+14     	; 0x776 <__stack+0x277>
 768:	b6 01       	movw	r22, r12
 76a:	80 e3       	ldi	r24, 0x30	; 48
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 772:	9a 94       	dec	r9
 774:	f7 cf       	rjmp	.-18     	; 0x764 <__stack+0x265>
 776:	8a 94       	dec	r8
 778:	f3 01       	movw	r30, r6
 77a:	e8 0d       	add	r30, r8
 77c:	f1 1d       	adc	r31, r1
 77e:	80 81       	ld	r24, Z
 780:	b6 01       	movw	r22, r12
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 788:	81 10       	cpse	r8, r1
 78a:	f5 cf       	rjmp	.-22     	; 0x776 <__stack+0x277>
 78c:	22 20       	and	r2, r2
 78e:	09 f4       	brne	.+2      	; 0x792 <__stack+0x293>
 790:	42 ce       	rjmp	.-892    	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 792:	b6 01       	movw	r22, r12
 794:	80 e2       	ldi	r24, 0x20	; 32
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 94 34 05 	call	0xa68	; 0xa68 <fputc>
 79c:	2a 94       	dec	r2
 79e:	f6 cf       	rjmp	.-20     	; 0x78c <__stack+0x28d>
 7a0:	f6 01       	movw	r30, r12
 7a2:	86 81       	ldd	r24, Z+6	; 0x06
 7a4:	97 81       	ldd	r25, Z+7	; 0x07
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <__stack+0x2ad>
 7a8:	8f ef       	ldi	r24, 0xFF	; 255
 7aa:	9f ef       	ldi	r25, 0xFF	; 255
 7ac:	2b 96       	adiw	r28, 0x0b	; 11
 7ae:	e2 e1       	ldi	r30, 0x12	; 18
 7b0:	0c 94 ea 05 	jmp	0xbd4	; 0xbd4 <__epilogue_restores__>

000007b4 <calloc>:
 7b4:	0f 93       	push	r16
 7b6:	1f 93       	push	r17
 7b8:	cf 93       	push	r28
 7ba:	df 93       	push	r29
 7bc:	86 9f       	mul	r24, r22
 7be:	80 01       	movw	r16, r0
 7c0:	87 9f       	mul	r24, r23
 7c2:	10 0d       	add	r17, r0
 7c4:	96 9f       	mul	r25, r22
 7c6:	10 0d       	add	r17, r0
 7c8:	11 24       	eor	r1, r1
 7ca:	c8 01       	movw	r24, r16
 7cc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <malloc>
 7d0:	ec 01       	movw	r28, r24
 7d2:	00 97       	sbiw	r24, 0x00	; 0
 7d4:	29 f0       	breq	.+10     	; 0x7e0 <calloc+0x2c>
 7d6:	a8 01       	movw	r20, r16
 7d8:	60 e0       	ldi	r22, 0x00	; 0
 7da:	70 e0       	ldi	r23, 0x00	; 0
 7dc:	0e 94 22 05 	call	0xa44	; 0xa44 <memset>
 7e0:	ce 01       	movw	r24, r28
 7e2:	df 91       	pop	r29
 7e4:	cf 91       	pop	r28
 7e6:	1f 91       	pop	r17
 7e8:	0f 91       	pop	r16
 7ea:	08 95       	ret

000007ec <malloc>:
 7ec:	0f 93       	push	r16
 7ee:	1f 93       	push	r17
 7f0:	cf 93       	push	r28
 7f2:	df 93       	push	r29
 7f4:	82 30       	cpi	r24, 0x02	; 2
 7f6:	91 05       	cpc	r25, r1
 7f8:	10 f4       	brcc	.+4      	; 0x7fe <malloc+0x12>
 7fa:	82 e0       	ldi	r24, 0x02	; 2
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	e0 91 49 01 	lds	r30, 0x0149	; 0x800149 <__flp>
 802:	f0 91 4a 01 	lds	r31, 0x014A	; 0x80014a <__flp+0x1>
 806:	20 e0       	ldi	r18, 0x00	; 0
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	a0 e0       	ldi	r26, 0x00	; 0
 80c:	b0 e0       	ldi	r27, 0x00	; 0
 80e:	30 97       	sbiw	r30, 0x00	; 0
 810:	19 f1       	breq	.+70     	; 0x858 <malloc+0x6c>
 812:	40 81       	ld	r20, Z
 814:	51 81       	ldd	r21, Z+1	; 0x01
 816:	02 81       	ldd	r16, Z+2	; 0x02
 818:	13 81       	ldd	r17, Z+3	; 0x03
 81a:	48 17       	cp	r20, r24
 81c:	59 07       	cpc	r21, r25
 81e:	c8 f0       	brcs	.+50     	; 0x852 <malloc+0x66>
 820:	84 17       	cp	r24, r20
 822:	95 07       	cpc	r25, r21
 824:	69 f4       	brne	.+26     	; 0x840 <malloc+0x54>
 826:	10 97       	sbiw	r26, 0x00	; 0
 828:	31 f0       	breq	.+12     	; 0x836 <malloc+0x4a>
 82a:	12 96       	adiw	r26, 0x02	; 2
 82c:	0c 93       	st	X, r16
 82e:	12 97       	sbiw	r26, 0x02	; 2
 830:	13 96       	adiw	r26, 0x03	; 3
 832:	1c 93       	st	X, r17
 834:	27 c0       	rjmp	.+78     	; 0x884 <malloc+0x98>
 836:	00 93 49 01 	sts	0x0149, r16	; 0x800149 <__flp>
 83a:	10 93 4a 01 	sts	0x014A, r17	; 0x80014a <__flp+0x1>
 83e:	22 c0       	rjmp	.+68     	; 0x884 <malloc+0x98>
 840:	21 15       	cp	r18, r1
 842:	31 05       	cpc	r19, r1
 844:	19 f0       	breq	.+6      	; 0x84c <malloc+0x60>
 846:	42 17       	cp	r20, r18
 848:	53 07       	cpc	r21, r19
 84a:	18 f4       	brcc	.+6      	; 0x852 <malloc+0x66>
 84c:	9a 01       	movw	r18, r20
 84e:	bd 01       	movw	r22, r26
 850:	ef 01       	movw	r28, r30
 852:	df 01       	movw	r26, r30
 854:	f8 01       	movw	r30, r16
 856:	db cf       	rjmp	.-74     	; 0x80e <malloc+0x22>
 858:	21 15       	cp	r18, r1
 85a:	31 05       	cpc	r19, r1
 85c:	f9 f0       	breq	.+62     	; 0x89c <malloc+0xb0>
 85e:	28 1b       	sub	r18, r24
 860:	39 0b       	sbc	r19, r25
 862:	24 30       	cpi	r18, 0x04	; 4
 864:	31 05       	cpc	r19, r1
 866:	80 f4       	brcc	.+32     	; 0x888 <malloc+0x9c>
 868:	8a 81       	ldd	r24, Y+2	; 0x02
 86a:	9b 81       	ldd	r25, Y+3	; 0x03
 86c:	61 15       	cp	r22, r1
 86e:	71 05       	cpc	r23, r1
 870:	21 f0       	breq	.+8      	; 0x87a <malloc+0x8e>
 872:	fb 01       	movw	r30, r22
 874:	93 83       	std	Z+3, r25	; 0x03
 876:	82 83       	std	Z+2, r24	; 0x02
 878:	04 c0       	rjmp	.+8      	; 0x882 <malloc+0x96>
 87a:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <__flp+0x1>
 87e:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <__flp>
 882:	fe 01       	movw	r30, r28
 884:	32 96       	adiw	r30, 0x02	; 2
 886:	44 c0       	rjmp	.+136    	; 0x910 <malloc+0x124>
 888:	fe 01       	movw	r30, r28
 88a:	e2 0f       	add	r30, r18
 88c:	f3 1f       	adc	r31, r19
 88e:	81 93       	st	Z+, r24
 890:	91 93       	st	Z+, r25
 892:	22 50       	subi	r18, 0x02	; 2
 894:	31 09       	sbc	r19, r1
 896:	39 83       	std	Y+1, r19	; 0x01
 898:	28 83       	st	Y, r18
 89a:	3a c0       	rjmp	.+116    	; 0x910 <malloc+0x124>
 89c:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 8a0:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 8a4:	23 2b       	or	r18, r19
 8a6:	41 f4       	brne	.+16     	; 0x8b8 <malloc+0xcc>
 8a8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 8ac:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 8b0:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <__brkval+0x1>
 8b4:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <__brkval>
 8b8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8bc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8c0:	21 15       	cp	r18, r1
 8c2:	31 05       	cpc	r19, r1
 8c4:	41 f4       	brne	.+16     	; 0x8d6 <malloc+0xea>
 8c6:	2d b7       	in	r18, 0x3d	; 61
 8c8:	3e b7       	in	r19, 0x3e	; 62
 8ca:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 8ce:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 8d2:	24 1b       	sub	r18, r20
 8d4:	35 0b       	sbc	r19, r21
 8d6:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <__brkval>
 8da:	f0 91 48 01 	lds	r31, 0x0148	; 0x800148 <__brkval+0x1>
 8de:	e2 17       	cp	r30, r18
 8e0:	f3 07       	cpc	r31, r19
 8e2:	a0 f4       	brcc	.+40     	; 0x90c <malloc+0x120>
 8e4:	2e 1b       	sub	r18, r30
 8e6:	3f 0b       	sbc	r19, r31
 8e8:	28 17       	cp	r18, r24
 8ea:	39 07       	cpc	r19, r25
 8ec:	78 f0       	brcs	.+30     	; 0x90c <malloc+0x120>
 8ee:	ac 01       	movw	r20, r24
 8f0:	4e 5f       	subi	r20, 0xFE	; 254
 8f2:	5f 4f       	sbci	r21, 0xFF	; 255
 8f4:	24 17       	cp	r18, r20
 8f6:	35 07       	cpc	r19, r21
 8f8:	48 f0       	brcs	.+18     	; 0x90c <malloc+0x120>
 8fa:	4e 0f       	add	r20, r30
 8fc:	5f 1f       	adc	r21, r31
 8fe:	50 93 48 01 	sts	0x0148, r21	; 0x800148 <__brkval+0x1>
 902:	40 93 47 01 	sts	0x0147, r20	; 0x800147 <__brkval>
 906:	81 93       	st	Z+, r24
 908:	91 93       	st	Z+, r25
 90a:	02 c0       	rjmp	.+4      	; 0x910 <malloc+0x124>
 90c:	e0 e0       	ldi	r30, 0x00	; 0
 90e:	f0 e0       	ldi	r31, 0x00	; 0
 910:	cf 01       	movw	r24, r30
 912:	df 91       	pop	r29
 914:	cf 91       	pop	r28
 916:	1f 91       	pop	r17
 918:	0f 91       	pop	r16
 91a:	08 95       	ret

0000091c <free>:
 91c:	cf 93       	push	r28
 91e:	df 93       	push	r29
 920:	00 97       	sbiw	r24, 0x00	; 0
 922:	09 f4       	brne	.+2      	; 0x926 <free+0xa>
 924:	81 c0       	rjmp	.+258    	; 0xa28 <free+0x10c>
 926:	fc 01       	movw	r30, r24
 928:	32 97       	sbiw	r30, 0x02	; 2
 92a:	13 82       	std	Z+3, r1	; 0x03
 92c:	12 82       	std	Z+2, r1	; 0x02
 92e:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <__flp>
 932:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <__flp+0x1>
 936:	10 97       	sbiw	r26, 0x00	; 0
 938:	81 f4       	brne	.+32     	; 0x95a <free+0x3e>
 93a:	20 81       	ld	r18, Z
 93c:	31 81       	ldd	r19, Z+1	; 0x01
 93e:	82 0f       	add	r24, r18
 940:	93 1f       	adc	r25, r19
 942:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 946:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 94a:	28 17       	cp	r18, r24
 94c:	39 07       	cpc	r19, r25
 94e:	51 f5       	brne	.+84     	; 0x9a4 <free+0x88>
 950:	f0 93 48 01 	sts	0x0148, r31	; 0x800148 <__brkval+0x1>
 954:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <__brkval>
 958:	67 c0       	rjmp	.+206    	; 0xa28 <free+0x10c>
 95a:	ed 01       	movw	r28, r26
 95c:	20 e0       	ldi	r18, 0x00	; 0
 95e:	30 e0       	ldi	r19, 0x00	; 0
 960:	ce 17       	cp	r28, r30
 962:	df 07       	cpc	r29, r31
 964:	40 f4       	brcc	.+16     	; 0x976 <free+0x5a>
 966:	4a 81       	ldd	r20, Y+2	; 0x02
 968:	5b 81       	ldd	r21, Y+3	; 0x03
 96a:	9e 01       	movw	r18, r28
 96c:	41 15       	cp	r20, r1
 96e:	51 05       	cpc	r21, r1
 970:	f1 f0       	breq	.+60     	; 0x9ae <free+0x92>
 972:	ea 01       	movw	r28, r20
 974:	f5 cf       	rjmp	.-22     	; 0x960 <free+0x44>
 976:	d3 83       	std	Z+3, r29	; 0x03
 978:	c2 83       	std	Z+2, r28	; 0x02
 97a:	40 81       	ld	r20, Z
 97c:	51 81       	ldd	r21, Z+1	; 0x01
 97e:	84 0f       	add	r24, r20
 980:	95 1f       	adc	r25, r21
 982:	c8 17       	cp	r28, r24
 984:	d9 07       	cpc	r29, r25
 986:	59 f4       	brne	.+22     	; 0x99e <free+0x82>
 988:	88 81       	ld	r24, Y
 98a:	99 81       	ldd	r25, Y+1	; 0x01
 98c:	84 0f       	add	r24, r20
 98e:	95 1f       	adc	r25, r21
 990:	02 96       	adiw	r24, 0x02	; 2
 992:	91 83       	std	Z+1, r25	; 0x01
 994:	80 83       	st	Z, r24
 996:	8a 81       	ldd	r24, Y+2	; 0x02
 998:	9b 81       	ldd	r25, Y+3	; 0x03
 99a:	93 83       	std	Z+3, r25	; 0x03
 99c:	82 83       	std	Z+2, r24	; 0x02
 99e:	21 15       	cp	r18, r1
 9a0:	31 05       	cpc	r19, r1
 9a2:	29 f4       	brne	.+10     	; 0x9ae <free+0x92>
 9a4:	f0 93 4a 01 	sts	0x014A, r31	; 0x80014a <__flp+0x1>
 9a8:	e0 93 49 01 	sts	0x0149, r30	; 0x800149 <__flp>
 9ac:	3d c0       	rjmp	.+122    	; 0xa28 <free+0x10c>
 9ae:	e9 01       	movw	r28, r18
 9b0:	fb 83       	std	Y+3, r31	; 0x03
 9b2:	ea 83       	std	Y+2, r30	; 0x02
 9b4:	49 91       	ld	r20, Y+
 9b6:	59 91       	ld	r21, Y+
 9b8:	c4 0f       	add	r28, r20
 9ba:	d5 1f       	adc	r29, r21
 9bc:	ec 17       	cp	r30, r28
 9be:	fd 07       	cpc	r31, r29
 9c0:	61 f4       	brne	.+24     	; 0x9da <free+0xbe>
 9c2:	80 81       	ld	r24, Z
 9c4:	91 81       	ldd	r25, Z+1	; 0x01
 9c6:	84 0f       	add	r24, r20
 9c8:	95 1f       	adc	r25, r21
 9ca:	02 96       	adiw	r24, 0x02	; 2
 9cc:	e9 01       	movw	r28, r18
 9ce:	99 83       	std	Y+1, r25	; 0x01
 9d0:	88 83       	st	Y, r24
 9d2:	82 81       	ldd	r24, Z+2	; 0x02
 9d4:	93 81       	ldd	r25, Z+3	; 0x03
 9d6:	9b 83       	std	Y+3, r25	; 0x03
 9d8:	8a 83       	std	Y+2, r24	; 0x02
 9da:	e0 e0       	ldi	r30, 0x00	; 0
 9dc:	f0 e0       	ldi	r31, 0x00	; 0
 9de:	12 96       	adiw	r26, 0x02	; 2
 9e0:	8d 91       	ld	r24, X+
 9e2:	9c 91       	ld	r25, X
 9e4:	13 97       	sbiw	r26, 0x03	; 3
 9e6:	00 97       	sbiw	r24, 0x00	; 0
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <free+0xd4>
 9ea:	fd 01       	movw	r30, r26
 9ec:	dc 01       	movw	r26, r24
 9ee:	f7 cf       	rjmp	.-18     	; 0x9de <free+0xc2>
 9f0:	8d 91       	ld	r24, X+
 9f2:	9c 91       	ld	r25, X
 9f4:	11 97       	sbiw	r26, 0x01	; 1
 9f6:	9d 01       	movw	r18, r26
 9f8:	2e 5f       	subi	r18, 0xFE	; 254
 9fa:	3f 4f       	sbci	r19, 0xFF	; 255
 9fc:	82 0f       	add	r24, r18
 9fe:	93 1f       	adc	r25, r19
 a00:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <__brkval>
 a04:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <__brkval+0x1>
 a08:	28 17       	cp	r18, r24
 a0a:	39 07       	cpc	r19, r25
 a0c:	69 f4       	brne	.+26     	; 0xa28 <free+0x10c>
 a0e:	30 97       	sbiw	r30, 0x00	; 0
 a10:	29 f4       	brne	.+10     	; 0xa1c <free+0x100>
 a12:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__flp+0x1>
 a16:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__flp>
 a1a:	02 c0       	rjmp	.+4      	; 0xa20 <free+0x104>
 a1c:	13 82       	std	Z+3, r1	; 0x03
 a1e:	12 82       	std	Z+2, r1	; 0x02
 a20:	b0 93 48 01 	sts	0x0148, r27	; 0x800148 <__brkval+0x1>
 a24:	a0 93 47 01 	sts	0x0147, r26	; 0x800147 <__brkval>
 a28:	df 91       	pop	r29
 a2a:	cf 91       	pop	r28
 a2c:	08 95       	ret

00000a2e <strnlen_P>:
 a2e:	fc 01       	movw	r30, r24
 a30:	05 90       	lpm	r0, Z+
 a32:	61 50       	subi	r22, 0x01	; 1
 a34:	70 40       	sbci	r23, 0x00	; 0
 a36:	01 10       	cpse	r0, r1
 a38:	d8 f7       	brcc	.-10     	; 0xa30 <strnlen_P+0x2>
 a3a:	80 95       	com	r24
 a3c:	90 95       	com	r25
 a3e:	8e 0f       	add	r24, r30
 a40:	9f 1f       	adc	r25, r31
 a42:	08 95       	ret

00000a44 <memset>:
 a44:	dc 01       	movw	r26, r24
 a46:	01 c0       	rjmp	.+2      	; 0xa4a <memset+0x6>
 a48:	6d 93       	st	X+, r22
 a4a:	41 50       	subi	r20, 0x01	; 1
 a4c:	50 40       	sbci	r21, 0x00	; 0
 a4e:	e0 f7       	brcc	.-8      	; 0xa48 <memset+0x4>
 a50:	08 95       	ret

00000a52 <strnlen>:
 a52:	fc 01       	movw	r30, r24
 a54:	61 50       	subi	r22, 0x01	; 1
 a56:	70 40       	sbci	r23, 0x00	; 0
 a58:	01 90       	ld	r0, Z+
 a5a:	01 10       	cpse	r0, r1
 a5c:	d8 f7       	brcc	.-10     	; 0xa54 <strnlen+0x2>
 a5e:	80 95       	com	r24
 a60:	90 95       	com	r25
 a62:	8e 0f       	add	r24, r30
 a64:	9f 1f       	adc	r25, r31
 a66:	08 95       	ret

00000a68 <fputc>:
 a68:	0f 93       	push	r16
 a6a:	1f 93       	push	r17
 a6c:	cf 93       	push	r28
 a6e:	df 93       	push	r29
 a70:	fb 01       	movw	r30, r22
 a72:	23 81       	ldd	r18, Z+3	; 0x03
 a74:	21 fd       	sbrc	r18, 1
 a76:	03 c0       	rjmp	.+6      	; 0xa7e <fputc+0x16>
 a78:	8f ef       	ldi	r24, 0xFF	; 255
 a7a:	9f ef       	ldi	r25, 0xFF	; 255
 a7c:	2c c0       	rjmp	.+88     	; 0xad6 <fputc+0x6e>
 a7e:	22 ff       	sbrs	r18, 2
 a80:	16 c0       	rjmp	.+44     	; 0xaae <fputc+0x46>
 a82:	46 81       	ldd	r20, Z+6	; 0x06
 a84:	57 81       	ldd	r21, Z+7	; 0x07
 a86:	24 81       	ldd	r18, Z+4	; 0x04
 a88:	35 81       	ldd	r19, Z+5	; 0x05
 a8a:	42 17       	cp	r20, r18
 a8c:	53 07       	cpc	r21, r19
 a8e:	44 f4       	brge	.+16     	; 0xaa0 <fputc+0x38>
 a90:	a0 81       	ld	r26, Z
 a92:	b1 81       	ldd	r27, Z+1	; 0x01
 a94:	9d 01       	movw	r18, r26
 a96:	2f 5f       	subi	r18, 0xFF	; 255
 a98:	3f 4f       	sbci	r19, 0xFF	; 255
 a9a:	31 83       	std	Z+1, r19	; 0x01
 a9c:	20 83       	st	Z, r18
 a9e:	8c 93       	st	X, r24
 aa0:	26 81       	ldd	r18, Z+6	; 0x06
 aa2:	37 81       	ldd	r19, Z+7	; 0x07
 aa4:	2f 5f       	subi	r18, 0xFF	; 255
 aa6:	3f 4f       	sbci	r19, 0xFF	; 255
 aa8:	37 83       	std	Z+7, r19	; 0x07
 aaa:	26 83       	std	Z+6, r18	; 0x06
 aac:	14 c0       	rjmp	.+40     	; 0xad6 <fputc+0x6e>
 aae:	8b 01       	movw	r16, r22
 ab0:	ec 01       	movw	r28, r24
 ab2:	fb 01       	movw	r30, r22
 ab4:	00 84       	ldd	r0, Z+8	; 0x08
 ab6:	f1 85       	ldd	r31, Z+9	; 0x09
 ab8:	e0 2d       	mov	r30, r0
 aba:	09 95       	icall
 abc:	89 2b       	or	r24, r25
 abe:	e1 f6       	brne	.-72     	; 0xa78 <fputc+0x10>
 ac0:	d8 01       	movw	r26, r16
 ac2:	16 96       	adiw	r26, 0x06	; 6
 ac4:	8d 91       	ld	r24, X+
 ac6:	9c 91       	ld	r25, X
 ac8:	17 97       	sbiw	r26, 0x07	; 7
 aca:	01 96       	adiw	r24, 0x01	; 1
 acc:	17 96       	adiw	r26, 0x07	; 7
 ace:	9c 93       	st	X, r25
 ad0:	8e 93       	st	-X, r24
 ad2:	16 97       	sbiw	r26, 0x06	; 6
 ad4:	ce 01       	movw	r24, r28
 ad6:	df 91       	pop	r29
 ad8:	cf 91       	pop	r28
 ada:	1f 91       	pop	r17
 adc:	0f 91       	pop	r16
 ade:	08 95       	ret

00000ae0 <__ultoa_invert>:
 ae0:	fa 01       	movw	r30, r20
 ae2:	aa 27       	eor	r26, r26
 ae4:	28 30       	cpi	r18, 0x08	; 8
 ae6:	51 f1       	breq	.+84     	; 0xb3c <__ultoa_invert+0x5c>
 ae8:	20 31       	cpi	r18, 0x10	; 16
 aea:	81 f1       	breq	.+96     	; 0xb4c <__ultoa_invert+0x6c>
 aec:	e8 94       	clt
 aee:	6f 93       	push	r22
 af0:	6e 7f       	andi	r22, 0xFE	; 254
 af2:	6e 5f       	subi	r22, 0xFE	; 254
 af4:	7f 4f       	sbci	r23, 0xFF	; 255
 af6:	8f 4f       	sbci	r24, 0xFF	; 255
 af8:	9f 4f       	sbci	r25, 0xFF	; 255
 afa:	af 4f       	sbci	r26, 0xFF	; 255
 afc:	b1 e0       	ldi	r27, 0x01	; 1
 afe:	3e d0       	rcall	.+124    	; 0xb7c <__ultoa_invert+0x9c>
 b00:	b4 e0       	ldi	r27, 0x04	; 4
 b02:	3c d0       	rcall	.+120    	; 0xb7c <__ultoa_invert+0x9c>
 b04:	67 0f       	add	r22, r23
 b06:	78 1f       	adc	r23, r24
 b08:	89 1f       	adc	r24, r25
 b0a:	9a 1f       	adc	r25, r26
 b0c:	a1 1d       	adc	r26, r1
 b0e:	68 0f       	add	r22, r24
 b10:	79 1f       	adc	r23, r25
 b12:	8a 1f       	adc	r24, r26
 b14:	91 1d       	adc	r25, r1
 b16:	a1 1d       	adc	r26, r1
 b18:	6a 0f       	add	r22, r26
 b1a:	71 1d       	adc	r23, r1
 b1c:	81 1d       	adc	r24, r1
 b1e:	91 1d       	adc	r25, r1
 b20:	a1 1d       	adc	r26, r1
 b22:	20 d0       	rcall	.+64     	; 0xb64 <__ultoa_invert+0x84>
 b24:	09 f4       	brne	.+2      	; 0xb28 <__ultoa_invert+0x48>
 b26:	68 94       	set
 b28:	3f 91       	pop	r19
 b2a:	2a e0       	ldi	r18, 0x0A	; 10
 b2c:	26 9f       	mul	r18, r22
 b2e:	11 24       	eor	r1, r1
 b30:	30 19       	sub	r19, r0
 b32:	30 5d       	subi	r19, 0xD0	; 208
 b34:	31 93       	st	Z+, r19
 b36:	de f6       	brtc	.-74     	; 0xaee <__ultoa_invert+0xe>
 b38:	cf 01       	movw	r24, r30
 b3a:	08 95       	ret
 b3c:	46 2f       	mov	r20, r22
 b3e:	47 70       	andi	r20, 0x07	; 7
 b40:	40 5d       	subi	r20, 0xD0	; 208
 b42:	41 93       	st	Z+, r20
 b44:	b3 e0       	ldi	r27, 0x03	; 3
 b46:	0f d0       	rcall	.+30     	; 0xb66 <__ultoa_invert+0x86>
 b48:	c9 f7       	brne	.-14     	; 0xb3c <__ultoa_invert+0x5c>
 b4a:	f6 cf       	rjmp	.-20     	; 0xb38 <__ultoa_invert+0x58>
 b4c:	46 2f       	mov	r20, r22
 b4e:	4f 70       	andi	r20, 0x0F	; 15
 b50:	40 5d       	subi	r20, 0xD0	; 208
 b52:	4a 33       	cpi	r20, 0x3A	; 58
 b54:	18 f0       	brcs	.+6      	; 0xb5c <__ultoa_invert+0x7c>
 b56:	49 5d       	subi	r20, 0xD9	; 217
 b58:	31 fd       	sbrc	r19, 1
 b5a:	40 52       	subi	r20, 0x20	; 32
 b5c:	41 93       	st	Z+, r20
 b5e:	02 d0       	rcall	.+4      	; 0xb64 <__ultoa_invert+0x84>
 b60:	a9 f7       	brne	.-22     	; 0xb4c <__ultoa_invert+0x6c>
 b62:	ea cf       	rjmp	.-44     	; 0xb38 <__ultoa_invert+0x58>
 b64:	b4 e0       	ldi	r27, 0x04	; 4
 b66:	a6 95       	lsr	r26
 b68:	97 95       	ror	r25
 b6a:	87 95       	ror	r24
 b6c:	77 95       	ror	r23
 b6e:	67 95       	ror	r22
 b70:	ba 95       	dec	r27
 b72:	c9 f7       	brne	.-14     	; 0xb66 <__ultoa_invert+0x86>
 b74:	00 97       	sbiw	r24, 0x00	; 0
 b76:	61 05       	cpc	r22, r1
 b78:	71 05       	cpc	r23, r1
 b7a:	08 95       	ret
 b7c:	9b 01       	movw	r18, r22
 b7e:	ac 01       	movw	r20, r24
 b80:	0a 2e       	mov	r0, r26
 b82:	06 94       	lsr	r0
 b84:	57 95       	ror	r21
 b86:	47 95       	ror	r20
 b88:	37 95       	ror	r19
 b8a:	27 95       	ror	r18
 b8c:	ba 95       	dec	r27
 b8e:	c9 f7       	brne	.-14     	; 0xb82 <__ultoa_invert+0xa2>
 b90:	62 0f       	add	r22, r18
 b92:	73 1f       	adc	r23, r19
 b94:	84 1f       	adc	r24, r20
 b96:	95 1f       	adc	r25, r21
 b98:	a0 1d       	adc	r26, r0
 b9a:	08 95       	ret

00000b9c <__prologue_saves__>:
 b9c:	2f 92       	push	r2
 b9e:	3f 92       	push	r3
 ba0:	4f 92       	push	r4
 ba2:	5f 92       	push	r5
 ba4:	6f 92       	push	r6
 ba6:	7f 92       	push	r7
 ba8:	8f 92       	push	r8
 baa:	9f 92       	push	r9
 bac:	af 92       	push	r10
 bae:	bf 92       	push	r11
 bb0:	cf 92       	push	r12
 bb2:	df 92       	push	r13
 bb4:	ef 92       	push	r14
 bb6:	ff 92       	push	r15
 bb8:	0f 93       	push	r16
 bba:	1f 93       	push	r17
 bbc:	cf 93       	push	r28
 bbe:	df 93       	push	r29
 bc0:	cd b7       	in	r28, 0x3d	; 61
 bc2:	de b7       	in	r29, 0x3e	; 62
 bc4:	ca 1b       	sub	r28, r26
 bc6:	db 0b       	sbc	r29, r27
 bc8:	0f b6       	in	r0, 0x3f	; 63
 bca:	f8 94       	cli
 bcc:	de bf       	out	0x3e, r29	; 62
 bce:	0f be       	out	0x3f, r0	; 63
 bd0:	cd bf       	out	0x3d, r28	; 61
 bd2:	09 94       	ijmp

00000bd4 <__epilogue_restores__>:
 bd4:	2a 88       	ldd	r2, Y+18	; 0x12
 bd6:	39 88       	ldd	r3, Y+17	; 0x11
 bd8:	48 88       	ldd	r4, Y+16	; 0x10
 bda:	5f 84       	ldd	r5, Y+15	; 0x0f
 bdc:	6e 84       	ldd	r6, Y+14	; 0x0e
 bde:	7d 84       	ldd	r7, Y+13	; 0x0d
 be0:	8c 84       	ldd	r8, Y+12	; 0x0c
 be2:	9b 84       	ldd	r9, Y+11	; 0x0b
 be4:	aa 84       	ldd	r10, Y+10	; 0x0a
 be6:	b9 84       	ldd	r11, Y+9	; 0x09
 be8:	c8 84       	ldd	r12, Y+8	; 0x08
 bea:	df 80       	ldd	r13, Y+7	; 0x07
 bec:	ee 80       	ldd	r14, Y+6	; 0x06
 bee:	fd 80       	ldd	r15, Y+5	; 0x05
 bf0:	0c 81       	ldd	r16, Y+4	; 0x04
 bf2:	1b 81       	ldd	r17, Y+3	; 0x03
 bf4:	aa 81       	ldd	r26, Y+2	; 0x02
 bf6:	b9 81       	ldd	r27, Y+1	; 0x01
 bf8:	ce 0f       	add	r28, r30
 bfa:	d1 1d       	adc	r29, r1
 bfc:	0f b6       	in	r0, 0x3f	; 63
 bfe:	f8 94       	cli
 c00:	de bf       	out	0x3e, r29	; 62
 c02:	0f be       	out	0x3f, r0	; 63
 c04:	cd bf       	out	0x3d, r28	; 61
 c06:	ed 01       	movw	r28, r26
 c08:	08 95       	ret

00000c0a <_exit>:
 c0a:	f8 94       	cli

00000c0c <__stop_program>:
 c0c:	ff cf       	rjmp	.-2      	; 0xc0c <__stop_program>
